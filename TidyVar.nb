(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    463012,      10659]
NotebookOptionsPosition[    453776,      10370]
NotebookOutlinePosition[    454291,      10390]
CellTagsIndexPosition[    454248,      10387]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<TidyVar`\>\"", "]"}], ";"}]], "Input",
 PageWidth->Infinity,
 Evaluatable->True,
 InitializationCell->True,
 CellChangeTimes->{{3.650652339822198*^9, 3.65065234666959*^9}},
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TidyVarVersion", "=", "\"\<0.2.1\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.643630742904566*^9, 3.643630764985176*^9}, 
   3.64363134316405*^9, 3.644132266075918*^9, {3.644577952603026*^9, 
   3.6445779531116543`*^9}, {3.644586542134328*^9, 3.6445865435282393`*^9}, {
   3.6745496510998144`*^9, 3.6745496605535145`*^9}}],

Cell[CellGroupData[{

Cell["Print", "Section",
 Evaluatable->False,
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<TidyVar package for calling genomic variants from Next Generation \
Sequencing data.\\nVersion \>\"", ",", "$TidyVarVersion", ",", 
    "\"\<\\nBoris Noyvert, Greg Elgar lab, 2014-2016.\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "Print", "[", 
     "\"\<Sorry, TidyVar doesn't work under Windows operating system, please \
try it on Linux or MacOS.\>\"", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{";", 
     RowBox[{"Abort", "[", "]"}]}], "*)"}], "]"}], ";"}]}], "Input",
 CellFrame->False,
 CellDingbat->None,
 ShowCellBracket->True,
 ShowShortBoxForm->False,
 CellBracketOptions->{"Color"->GrayLevel[0]},
 Evaluatable->True,
 InitializationCell->True,
 CellChangeTimes->{{3.6506524080371*^9, 3.650652493940013*^9}, {
   3.650653637815439*^9, 3.650653672119401*^9}, 3.6506541564301023`*^9, {
   3.6506541978744726`*^9, 3.6506542025417395`*^9}, {3.6507330574679995`*^9, 
   3.6507330578750505`*^9}, 3.6507331064612207`*^9, 3.6507361439014263`*^9, {
   3.668506487167755*^9, 3.6685064915790076`*^9}, {3.675063337890888*^9, 
   3.6750633677345953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exported symbols", "Section",
 Evaluatable->False,
 CellHorizontalScrolling->False],

Cell[BoxData["CallVariants"], "Input",
 PageWidth->WindowWidth,
 Evaluatable->True,
 CellHorizontalScrolling->False,
 InitializationCell->True,
 CellChangeTimes->{{3.6506525184024124`*^9, 3.650652522639655*^9}},
 AspectRatioFixed->True],

Cell[BoxData["MakeCoordinateString"], "Input",
 PageWidth->WindowWidth,
 Evaluatable->True,
 CellHorizontalScrolling->False,
 InitializationCell->True,
 CellChangeTimes->{
  3.650652589907502*^9, 3.6506527187408714`*^9, {3.650652786332737*^9, 
   3.6506528051208115`*^9}},
 AspectRatioFixed->True],

Cell[BoxData["ExtractCoordinatesFromString"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6506528771839333`*^9, 3.6506528792140493`*^9}}],

Cell[BoxData["GetSequenceFromGenomeFasta"], "Input",
 InitializationCell->True],

Cell[BoxData["FindAllelesAndCountReads"], "Input",
 InitializationCell->True],

Cell[BoxData["ScanForVariantCandidates"], "Input",
 InitializationCell->True],

Cell[BoxData["GetReadsFromBamFiles"], "Input",
 InitializationCell->True],

Cell[BoxData["OptimiseTargets"], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.650654768824129*^9}],

Cell[BoxData["CheckFileExistence"], "Input",
 InitializationCell->True],

Cell[BoxData["CheckSamtoolsIsInstalled"], "Input",
 InitializationCell->True],

Cell[BoxData["CheckBamIsIndexed"], "Input",
 InitializationCell->True],

Cell[BoxData["CheckBamFiles"], "Input",
 InitializationCell->True],

Cell[BoxData["SamtoolsPath"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978101886755*^9, 3.650978105048242*^9}}],

Cell[BoxData["GenomeFastaFile"], "Input",
 InitializationCell->True],

Cell[BoxData["FastaFileName"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978485701921*^9, 3.650978485702733*^9}}],

Cell[BoxData["ExtendTargetsBy"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978497852827*^9, 3.650978497853631*^9}}],

Cell[BoxData["MinimalBaseSequencingScore"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978381720415*^9, 3.65097838172124*^9}}],

Cell[BoxData["MinimalReadMappingScore"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978476057135*^9, 3.650978476057866*^9}}],

Cell[BoxData["MinimalCoverage"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978511036491*^9, 3.6509785110372667`*^9}}],

Cell[BoxData["SamtoolsFlagFilter"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6509785175604877`*^9, 3.6509785175612307`*^9}}],

Cell[BoxData["VariantThreshold"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978523759951*^9, 3.650978523760675*^9}}],

Cell[BoxData["LogFileName"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978533367481*^9, 3.6509785333683357`*^9}}],

Cell[BoxData["FailedLogFileName"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978539155611*^9, 3.650978539156343*^9}}],

Cell[BoxData["SaveCoverage"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978550258781*^9, 3.6509785508241034`*^9}, {
  3.6509785809158773`*^9, 3.650978582714951*^9}}],

Cell[BoxData["PlotClusteredReadCounts2D"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978550258781*^9, 3.6509785508241034`*^9}, {
  3.6509785809158773`*^9, 3.650978582714951*^9}, {3.6685072113152037`*^9, 
  3.66850722244184*^9}, {3.6685103418352594`*^9, 3.6685103588202305`*^9}}],

Cell[BoxData["GenotypeReadCounts"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650978550258781*^9, 3.6509785508241034`*^9}, {
  3.6509785809158773`*^9, 3.650978582714951*^9}, {3.6685072113152037`*^9, 
  3.66850722244184*^9}, {3.6685103418352594`*^9, 3.6685103588202305`*^9}}],

Cell[BoxData["LoadVCF"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6750682346439667`*^9, 3.6750682361080503`*^9}, {
  3.6750685721972733`*^9, 3.6750685758394823`*^9}}],

Cell[BoxData["LastVCFHeader"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6750682346439667`*^9, 3.6750682361080503`*^9}, {
  3.6750685721972733`*^9, 3.6750685758394823`*^9}, {3.675068690565044*^9, 
  3.675068695161307*^9}}],

Cell[BoxData["ConvertVcfLineToVariant"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6750682346439667`*^9, 3.6750682361080503`*^9}, {
  3.6750685721972733`*^9, 3.6750685758394823`*^9}, {3.675068690565044*^9, 
  3.675068720416751*^9}, {3.675068816533249*^9, 3.675068820659485*^9}}],

Cell[BoxData["ConvertVariantToVcfLine"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6750682346439667`*^9, 3.6750682361080503`*^9}, {
  3.6750685721972733`*^9, 3.6750685758394823`*^9}, {3.675068690565044*^9, 
  3.675068720416751*^9}, {3.675068816533249*^9, 3.675068820659485*^9}}],

Cell[BoxData["RemoveDummyAlleles"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6750682346439667`*^9, 3.6750682361080503`*^9}, {
  3.6750685721972733`*^9, 3.6750685758394823`*^9}, {3.675068690565044*^9, 
  3.675068720416751*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.598255183362726*^9, 3.5982551954240313`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Useful functions", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.594468775052609*^9, 3.594468790585682*^9}, {
  3.644565238945088*^9, 3.644565240229765*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MakeCoordinateString", "::", "usage"}], "=", 
   "\"\<MakeCoordinateString converts a list in the form {chr,coord1,coord2} \
or {chr,{coord1,coord2}} into a string \\\"'chr:coord1-coord2'\\\".\nIf the \
argument of the function is already a string, then the function doesn't \
change it.\nIf there is only one argument (chr) the function returns it in \
the string form.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeCoordinateString", "[", "\"\<\>\"", "]"}], ":=", "\"\<\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeCoordinateString", "[", "x_String", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "trimmed", "}"}], ",", 
     RowBox[{
      RowBox[{"trimmed", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\"\<'\>\"", "|", "\"\< \>\"", "|", "\"\<\\t\>\"", "|", 
            "\"\<\\\"\>\""}], ")"}], ".."}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"trimmed", "===", "\"\<\>\""}], ",", "\"\<\>\"", ",", 
        RowBox[{"\"\<'\>\"", "<>", "trimmed", "<>", "\"\<'\>\""}]}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeCoordinateString", "[", "x__", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"arg", ",", "l"}], "}"}], ",", 
     RowBox[{
      RowBox[{"arg", "=", 
       RowBox[{"ToString", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "x", "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "arg", "]"}]}], ";", 
      RowBox[{"\"\<'\>\"", "<>", 
       RowBox[{"arg", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "<>", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"l", "\[Equal]", "1"}], ",", "\"\<\>\"", ",", 
         RowBox[{"l", "\[Equal]", "2"}], ",", 
         RowBox[{"\"\<:\>\"", "<>", 
          RowBox[{
          "arg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"l", "\[GreaterEqual]", "3"}], ",", 
         RowBox[{"\"\<:\>\"", "<>", 
          RowBox[{
          "arg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "<>", "\"\<-\>\"", "<>", 
          RowBox[{
          "arg", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
        "]"}], "<>", "\"\<'\>\""}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.64456463329576*^9, 3.644564681046007*^9}, {
   3.644564712997314*^9, 3.644564736417171*^9}, {3.6445648242617683`*^9, 
   3.644564908176614*^9}, {3.644564940053776*^9, 3.64456494024267*^9}, {
   3.644565087991695*^9, 3.644565147362718*^9}, 3.644565184982129*^9, {
   3.645798598206668*^9, 3.6457986673735943`*^9}, {3.645798736946312*^9, 
   3.645798781442728*^9}, {3.6488139805268793`*^9, 3.648813982757165*^9}, {
   3.648814062414652*^9, 3.648814086780061*^9}, {3.6488142764747047`*^9, 
   3.6488143414372177`*^9}, {3.648814371893862*^9, 3.6488143942099237`*^9}, {
   3.648814668550849*^9, 3.648814732976861*^9}, {3.6506527069051943`*^9, 
   3.650652711101434*^9}, {3.6506527927091017`*^9, 3.6506527942451897`*^9}, {
   3.675066785390074*^9, 3.6750668265684295`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractCoordinatesFromString", "::", "usage"}], "=", 
   "\"\<ExtractCoordinatesFromString extracts coordinates in the form \
{chr,coord1,coord2} from a string like \\\"'chr:coord1-coord2'\\\"\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtractCoordinatesFromString", "[", "x_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "trimmedandsplitted", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"trimmedandsplitted", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"StringTrim", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "\"\<'\>\"", "|", "\"\< \>\"", "|", "\"\<\\t\>\"", "|", 
             "\"\<\\\"\>\""}], ")"}], ".."}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<:\>\"", ",", "\"\<-\>\""}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "trimmedandsplitted", "]"}], "\[GreaterEqual]",
         "3"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"trimmedandsplitted", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"FromDigits", "/@", 
           RowBox[{"trimmedandsplitted", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "3"}], "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "trimmedandsplitted"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.648814910555648*^9, 3.648815077092901*^9}, {
   3.6488151743308897`*^9, 3.648815221355279*^9}, 3.650652859409917*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetSequenceFromGenomeFasta", "::", "usage"}], "=", 
   "\"\<GetSequenceFromGenomeFasta[coordinates__, \
FastaFileName\[Rule]GenomeFastaFile].\nGetSequenceFromGenomeFasta uses \
'samtools faidx' to extract the genomic sequence corresponding to the given \
coordinates from the fasta file.\nThe fasta file name can be supplied using \
FastaFileName option. By default it is set to GenomeFastaFile - so you can \
set this variable from the beginning and forget about it. If the fasta file \
is not found the computation is aborted.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GetSequenceFromGenomeFasta", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"FastaFileName", "\[Rule]", "GenomeFastaFile"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetSequenceFromGenomeFasta", "[", 
    RowBox[{"x__", ",", 
     RowBox[{"OptionsPattern", "[", "GetSequenceFromGenomeFasta", "]"}]}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"region", ",", "cmd", ",", "samtoolsrunresult"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckFileExistence", "[", 
       RowBox[{"OptionValue", "[", "FastaFileName", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"MakeCoordinateString", "[", "x", "]"}]}], ";", 
      RowBox[{"cmd", "=", 
       RowBox[{"StringJoinWith", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SamtoolsPath", "<>", "\"\<samtools faidx\>\""}], ",", 
          RowBox[{"OptionValue", "[", "FastaFileName", "]"}], ",", "region"}],
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"samtoolsrunresult", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{"cmd", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"samtoolsrunresult", ",", "1"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.64456456986313*^9, 3.644564570480995*^9}, {
   3.64456530437321*^9, 3.644565307297592*^9}, {3.644565499436626*^9, 
   3.6445655018718643`*^9}, {3.644568900904769*^9, 3.644568933736289*^9}, {
   3.644569017957891*^9, 3.644569101277918*^9}, {3.644569700141632*^9, 
   3.644569823143825*^9}, {3.644569876420434*^9, 3.6445699913472233`*^9}, 
   3.6445712130941277`*^9, {3.644577015141161*^9, 3.6445770340523367`*^9}, 
   3.644577789978894*^9, {3.6445786492345552`*^9, 3.6445789329985867`*^9}, {
   3.64458359094337*^9, 3.6445835975729113`*^9}, {3.646047851957366*^9, 
   3.64604785233342*^9}, {3.64604798675522*^9, 3.6460479868036346`*^9}, {
   3.6460480182786713`*^9, 3.6460480257989492`*^9}, {3.6483949471762857`*^9, 
   3.648394962319991*^9}, 3.648814492825445*^9, 3.648814617500156*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CheckFileExistence", "::", "usage"}], "=", 
   "\"\<CheckFileExistence[filename_].\nIf filename is not a string or is a \
string but there is no file with this name, then the computation is \
aborted.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CheckFileExistence", "[", "filename_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"StringQ", "[", "filename", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "PrintError", "[", 
       "\"\<The file name argument must be a string!\\nAborting!\>\"", "]"}], 
      ";", 
      RowBox[{"Abort", "[", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "[", "filename", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintError", "[", 
         RowBox[{
         "\"\<File\\n\>\"", ",", "filename", ",", 
          "\"\<\\nis not found!\\nAborting!\>\""}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}], ",", "\[IndentingNewLine]", "True"}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.644579988090846*^9, 3.6445800543613253`*^9}, {
  3.644580098208288*^9, 3.644580140126307*^9}, {3.6445802886690893`*^9, 
  3.644580357218892*^9}, {3.644580412041621*^9, 3.644580511170672*^9}, {
  3.644582165658146*^9, 3.644582210084128*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RunExternal", "::", "usage"}], "=", 
   "\"\<RunExternal[command_String, types_:\\\"String\\\", \
op:OptionsPattern[ReadList]] basically calls ReadList built-in function.\nIt \
runs external (Unix) command and loads its result as a table of elements of \
specified types, e.g. {Number, Word, Word}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RunExternal", "[", 
    RowBox[{"command_String", ",", 
     RowBox[{"types_:", "\"\<String\>\""}], ",", 
     RowBox[{"op", ":", 
      RowBox[{"OptionsPattern", "[", "ReadList", "]"}]}]}], "]"}], ":=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{"\"\<!\>\"", "<>", "command"}], ",", "types", ",", "op"}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.644580660957205*^9, 3.644580674638335*^9}, {
  3.644580785150428*^9, 3.644580789690538*^9}, {3.644580910017935*^9, 
  3.644581106216238*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StringJoinWith", "[", 
     RowBox[{"x_List", ",", 
      RowBox[{"rifflestring_String:", "\"\< \>\""}]}], "]"}], ":=", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"Riffle", "[", 
      RowBox[{
       RowBox[{"ToString", "/@", 
        RowBox[{"Flatten", "[", "x", "]"}]}], ",", "rifflestring"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeTableString", "[", "x_List", "]"}], ":=", 
  RowBox[{"StringJoinWith", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"StringJoinWith", "[", 
       RowBox[{"#", ",", "\"\<\\t\>\""}], "]"}], "&"}], "/@", "x"}], ",", 
    "\"\<\\n\>\""}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.644582503236074*^9, 3.644582553237443*^9}, {
  3.644583364677106*^9, 3.644583365449876*^9}, {3.64907775809583*^9, 
  3.6490777657041388`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IntersectionPositionsSimple", "[", 
    RowBox[{"d1_List", ",", "d2_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"int", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"int", "=", 
       RowBox[{"Intersection", "[", 
        RowBox[{"d1", ",", "d2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", 
            RowBox[{"Join", "@@", 
             RowBox[{"Position", "[", 
              RowBox[{"d1", ",", "#", ",", 
               RowBox[{"{", "1", "}"}], ",", 
               RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ",", 
            RowBox[{"Join", "@@", 
             RowBox[{"Position", "[", 
              RowBox[{"d2", ",", "#", ",", 
               RowBox[{"{", "1", "}"}], ",", 
               RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], "]"}]}], 
         "&"}], "/@", "int"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "@@", "res"}], "//", "Sort"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendFileName", "[", 
   RowBox[{"filename_String", ",", "app_String", ",", 
    RowBox[{"extension_String:", "\"\<same\>\""}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ext", ",", "fileparts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"extension", "===", "\"\<same\>\""}], ",", 
       RowBox[{"ext", "=", 
        RowBox[{"\"\<.\>\"", "<>", 
         RowBox[{"FileExtension", "[", "filename", "]"}]}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"extension", "===", "\"\<\>\""}], ",", 
         RowBox[{"ext", "=", "\"\<\>\""}], ",", 
         RowBox[{"ext", "=", 
          RowBox[{"\"\<.\>\"", "<>", "extension"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileparts", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DirectoryName", "[", "filename", "]"}], ",", 
        RowBox[{
         RowBox[{"FileBaseName", "[", "filename", "]"}], "<>", "app", "<>", 
         "ext"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fileparts", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "===", "\"\<\>\""}], ",", 
       RowBox[{"fileparts", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"fileparts", ",", "1"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileparts", "//", "FileNameJoin"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RenameFileForced", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"KeepOldFile", "\[Rule]", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenameFileForced", "[", 
   RowBox[{"file1_String", ",", "file2_String", ",", 
    RowBox[{"OptionsPattern", "[", "RenameFileForced", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "old", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CheckFileExistence", "[", "file1", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"file1", "===", "file2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<File names are identical!\>\"", ",", 
           RowBox[{"Red", "//", "Darker"}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "file1", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "file2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "KeepOldFile", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"old", "=", 
            RowBox[{"AppendFileName", "[", 
             RowBox[{"file2", ",", "\"\<.old\>\"", ",", "\"\<\>\""}], "]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"DirectoryQ", "[", "file1", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FileExistsQ", "[", "old", "]"}], ",", 
                RowBox[{"DeleteDirectory", "[", 
                 RowBox[{"old", ",", 
                  RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], 
               "]"}], ")"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FileExistsQ", "[", "old", "]"}], ",", 
                RowBox[{"DeleteFile", "[", "old", "]"}]}], "]"}], ")"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"RenameFile", "[", 
            RowBox[{"file2", ",", "old"}], "]"}]}], "\[IndentingNewLine]", 
          ")"}], ",", "\[IndentingNewLine]", 
         RowBox[{"DeleteFile", "[", "file2", "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"RenameFile", "[", 
      RowBox[{"file1", ",", "file2"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.566210888873114*^9, 3.566211130622024*^9}, {
   3.5662116485517797`*^9, 3.566211746958679*^9}, {3.566211793228676*^9, 
   3.566211829390745*^9}, {3.566211941496129*^9, 3.566211948853937*^9}, {
   3.566212080851117*^9, 3.566212092655012*^9}, {3.566212179649383*^9, 
   3.566212200115687*^9}, {3.5662123582604637`*^9, 3.56621244146706*^9}, 
   3.56621250206415*^9, {3.642340969276595*^9, 3.64234100825147*^9}, {
   3.642341107922389*^9, 3.642341129548224*^9}, {3.642341208010263*^9, 
   3.642341219463214*^9}, 3.64234151184905*^9, {3.642341559193419*^9, 
   3.642341639493619*^9}, {3.642341717923449*^9, 3.642341735468305*^9}, {
   3.6423417686531477`*^9, 3.6423418066979113`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
   "Joins", " ", "all", " ", "subsequent", " ", "regions", " ", "with", " ", 
    "distance", " ", "between", " ", "them", " ", "less", " ", "or", " ", 
    "equal", " ", "to", " ", 
    RowBox[{
     RowBox[{"OptionValue", "[", "CombineDistance", "]"}], ".", 
     "\[IndentingNewLine]", "Input"}], " ", "is", " ", "in", " ", "a", " ", 
    "form", " ", "of", " ", "list", " ", "of", " ", "pairs", " ", "of", " ", 
    RowBox[{"numbers", "."}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "CombineRegions", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ApplySort", "\[Rule]", "True"}], ",", 
       RowBox[{"CombineDistance", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CombineRegions", "[", 
      RowBox[{"{", "}"}], "]"}], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CombineRegions", "[", 
      RowBox[{
       RowBox[{"regions_", "?", "MatrixQ"}], ",", 
       RowBox[{"OptionsPattern", "[", "CombineRegions", "]"}]}], "]"}], ":=", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dist", ",", "xxx", ",", "xxxcoord", ",", "ps", ",", "pscomb", ",", 
         "pscomb1", ",", "pscomb2", ",", "res"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dist", "=", 
         RowBox[{"OptionValue", "[", "CombineDistance", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"clmn", "=", 
           RowBox[{"OptionValue", "[", "Columns", "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"xxx", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ApplySort", "]"}], ",", 
           RowBox[{"Sort", "[", "regions", "]"}], ",", "regions"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ps", "=", 
         RowBox[{"Join", "@@", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"xxx", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{"xxx", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"1", ";;", 
                  RowBox[{"-", "2"}]}], ",", "2"}], "]"}], "]"}], "-", "dist",
               "-", "0.000001"}], "]"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pscomb", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "+", "#"}], "&"}], "/@", 
          RowBox[{"CombineIntegers", "[", 
           RowBox[{"ps", ",", 
            RowBox[{"ApplySort", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pscomb1", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Range", "@@", "#"}], ")"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], "//", "Transpose"}], ")"}], 
           "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pscomb", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "+", "1"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pscomb", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
               RowBox[{"Length", "[", "xxx", "]"}]}], "]"}]}], "}"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pscomb2", "=", 
         RowBox[{"Join", "@@", 
          RowBox[{"Riffle", "[", 
           RowBox[{"pscomb1", ",", 
            RowBox[{"List", "/@", "pscomb"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "/@", "#"}], ",", 
              RowBox[{"Max", "/@", "#"}]}], "}"}], "]"}], "&"}], "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"xxx", ",", "rrr"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"rrr", ",", "pscomb2"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"2", ";;", 
                 RowBox[{"-", "1"}]}], ",", "1"}], "]"}], "]"}], "-", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", 
                 RowBox[{"-", "2"}]}], ",", "2"}], "]"}], "]"}]}], "]"}], ">",
            "dist"}], ",", "res", ",", "\[IndentingNewLine]", 
          RowBox[{"CombineRegions", "[", 
           RowBox[{"res", ",", 
            RowBox[{"ApplySort", "\[Rule]", "False"}], ",", 
            RowBox[{"CombineDistance", "\[Rule]", "dist"}]}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "Converts", " ", "a", " ", "list", " ", "of", " ", "integers", " ", "to", 
     " ", "the", " ", "ranges", " ", "of", " ", "consecutive", " ", 
     "numbers"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "CombineIntegers", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ApplySort", "\[Rule]", "True"}], ",", 
       RowBox[{"CombineDistance", "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CombineIntegers", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "___"}], "]"}], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CombineIntegers", "[", 
      RowBox[{"x_List", ",", 
       RowBox[{"OptionsPattern", "[", "CombineIntegers", "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xx", ",", "ps", ",", "rd"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xx", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ApplySort", "]"}], ",", 
           RowBox[{"Union", "[", "x", "]"}], ",", "x"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rd", "=", 
         RowBox[{"OptionValue", "[", "CombineDistance", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ps", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", 
           RowBox[{"Join", "@@", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Sign", "[", 
               RowBox[{
                RowBox[{"xx", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}], "-", 
                RowBox[{"xx", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}], "-", "rd"}], "]"}], 
              ",", "1", ",", 
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", "xx", "]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xx", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ps", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "+", "1"}], ",", 
             RowBox[{"ps", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.644586396307663*^9, 3.6445864225167418`*^9}, {
  3.6445865039306173`*^9, 3.644586507978454*^9}, {3.6460463393650637`*^9, 
  3.646046445419525*^9}, {3.646046582492085*^9, 3.6460466070422564`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrintError", "::", "usage"}], "=", 
   "\"\<Prints its arguments using a colour specified (Darker[Red] by \
default).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PrintError", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Colour", "->", 
     RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintError", "[", 
    RowBox[{"x_String", ",", 
     RowBox[{"OptionsPattern", "[", "PrintError", "]"}]}], "]"}], ":=", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{"x", ",", 
      RowBox[{"OptionValue", "[", "Colour", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintError", "[", 
    RowBox[{"x_List", ",", 
     RowBox[{"op", ":", 
      RowBox[{"OptionsPattern", "[", "PrintError", "]"}]}]}], "]"}], ":=", 
   RowBox[{"PrintError", "[", 
    RowBox[{
     RowBox[{"StringJoinWith", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"Flatten", "[", "x", "]"}]}], "]"}], ",", "op"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintError", "[", 
    RowBox[{"x__", ",", 
     RowBox[{"op", ":", 
      RowBox[{"OptionsPattern", "[", "PrintError", "]"}]}]}], "]"}], ":=", 
   RowBox[{"PrintError", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "op"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6445819598756447`*^9, 3.6445819871166563`*^9}, {
  3.644582030064453*^9, 3.644582095603244*^9}, {3.644582337983027*^9, 
  3.6445824170063553`*^9}, {3.644583566732984*^9, 3.644583567989661*^9}, {
  3.6493354160164557`*^9, 3.6493354167040367`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToNumber", "[", "yyy_List", "]"}], ":=", 
    RowBox[{"ToNumber", "/@", "yyy"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToNumber", "[", "x_String", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"x", ",", "NumberString"}], "]"}], ",", 
      RowBox[{"ToExpression", "[", "x", "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringMatchQ", "[", 
         RowBox[{"x", ",", 
          RowBox[{"NumberString", "~~", 
           RowBox[{"(", 
            RowBox[{"\"\<e\>\"", "|", "\"\<E\>\""}], ")"}], "~~", 
           "NumberString"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            SuperscriptBox["10", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]]}], ")"}], "&"}], "@", 
         RowBox[{"(", 
          RowBox[{"ToExpression", "/@", 
           RowBox[{"StringSplit", "[", 
            RowBox[{"x", ",", 
             RowBox[{"(", 
              RowBox[{"\"\<e\>\"", "|", "\"\<E\>\""}], ")"}]}], "]"}]}], 
          ")"}]}], ",", "x"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToNumber", "[", "x_", "]"}], ":=", "x"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.56005642253139*^9, 3.560056422535493*^9}, {
  3.5608535959122763`*^9, 3.560853611774926*^9}, {3.561726625069223*^9, 
  3.561726630939075*^9}, {3.5617267013551083`*^9, 3.5617267275226994`*^9}, {
  3.570807309440528*^9, 3.57080731576291*^9}, {3.5708078099249353`*^9, 
  3.570807817988305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LoadVCF", "[", 
    RowBox[{"inputfile_String", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NumberOfLines", "\[Rule]", "100000"}], ",", 
        RowBox[{"Columns", "\[Rule]", "All"}], ",", 
        RowBox[{"PrintReports", "\[Rule]", "False"}]}], "}"}], "]"}]}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "stream", ",", "rd", ",", "ps", ",", "nnn", ",", "clmn", ",", "types", 
       ",", "limit", ",", "cnt", ",", "fff", ",", "res", ",", "header", ",", 
       "scorepos", ",", "scorepos1", ",", "ll"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nnn", "=", 
       RowBox[{"OptionValue", "[", "NumberOfLines", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"clmn", "=", 
       RowBox[{"OptionValue", "[", "Columns", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rd", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"inputfile", ",", "String", ",", "1000"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"rd", "===", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Position", "[", 
          RowBox[{"rd", ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"StringMatchQ", "[", 
             RowBox[{"x", ",", "\"\<#*\>\""}], "]"}]}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], "//", "Max"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"stream", "=", 
       RowBox[{"OpenRead", "[", "inputfile", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ps", "=!=", 
         RowBox[{"-", "\[Infinity]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Skip", "[", 
          RowBox[{"stream", ",", "String", ",", 
           RowBox[{"ps", "-", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"header", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{"#", ",", "\"\<\\t\>\"", ",", "All"}], "]"}], "&"}], "/@", 
             RowBox[{"ReadList", "[", 
              RowBox[{"stream", ",", "String", ",", "1"}], "]"}]}], ")"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ll", "=", 
          RowBox[{"Length", "[", "header", "]"}]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"header", "=", "\"\<no vcf file header\>\""}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ll", "=", 
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"rd", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<\\t\>\"", ",", 
             "All"}], "]"}], "//", "Length"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"types", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Word\>\"", ",", "\"\<Number\>\"", ",", "\"\<Word\>\"", ",", 
           "\"\<Word\>\"", ",", "\"\<Word\>\"", ",", 
           RowBox[{"(*", "\"\<Number\>\"", "*)"}], "\"\<Word\>\""}], "}"}], 
         ",", 
         RowBox[{"Table", "[", 
          RowBox[{"\"\<Word\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"ll", "-", "6"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"types", "[", 
           RowBox[{"[", "clmn", "]"}], "]"}], "]"}], "===", "Part"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
            "\"\<Column information is wrong!\\nShould be between 1 and \>\"",
              "<>", 
             RowBox[{"ToString", "[", "ll", "]"}], "<>", "\"\<!\>\""}], ",", 
            "Red", ",", "Bold"}], "]"}], "]"}], ";", 
         RowBox[{"Return", "[", "\"\<Wrong columns\>\"", "]"}]}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"limit", "=", 
       RowBox[{
        FractionBox[
         SuperscriptBox["10", "10"], "nnn"], "//", "Round"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cnt", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rd", "=", 
          RowBox[{"ReadList", "[", 
           RowBox[{"stream", ",", "types", ",", "nnn", ",", 
            RowBox[{"NullWords", "\[Rule]", "True"}], ",", 
            RowBox[{"WordSeparators", "\[Rule]", 
             RowBox[{"{", "\"\<\\t\>\"", "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rd", "===", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"cnt", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"fff", "[", "cnt", "]"}], "=", 
          RowBox[{"rd", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "clmn"}], "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", "limit", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Array", "[", 
         RowBox[{"fff", ",", "cnt"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "PrintReports", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Loaded \>\"", ",", 
          RowBox[{"Length", "[", "res", "]"}], ",", "\"\< lines into \>\"", 
          ",", 
          RowBox[{"Dimensions", "[", "res", "]"}], ",", "\"\< table.\>\""}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"LastVCFHeader", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ps", "===", 
          RowBox[{"-", "\[Infinity]"}]}], ",", "header", ",", 
         RowBox[{"header", "[", 
          RowBox[{"[", "clmn", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"scorepos", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Range", "[", "ll", "]"}], "[", 
           RowBox[{"[", "clmn", "]"}], "]"}], ",", "6"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"scorepos", "===", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "res", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"scorepos1", "=", 
           RowBox[{"scorepos", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"scorepos1", "\[Rule]", 
               RowBox[{"ToNumber", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "scorepos1", "]"}], "]"}], "]"}]}]}], "]"}], 
            "&"}], "/@", "res"}]}], ")"}]}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.559913483597579*^9, 3.559913485470405*^9}, {
   3.5599135504666843`*^9, 3.559913555684786*^9}, {3.559914161684846*^9, 
   3.5599141758738413`*^9}, {3.559914225737409*^9, 3.559914512382585*^9}, {
   3.559914568132906*^9, 3.559914622484921*^9}, {3.559914652965839*^9, 
   3.559914674773094*^9}, {3.559914736128298*^9, 3.5599148284425*^9}, {
   3.559914859185759*^9, 3.559914887443336*^9}, {3.559914952261407*^9, 
   3.559914953449296*^9}, {3.5625051396562767`*^9, 3.56250514612246*^9}, {
   3.562505188363203*^9, 3.562505214574154*^9}, {3.5625056478436203`*^9, 
   3.56250570538778*^9}, 3.562505847806286*^9, {3.5625059012363462`*^9, 
   3.5625059024581413`*^9}, 3.562506013726891*^9, {3.562506069900956*^9, 
   3.562506077968883*^9}, {3.562506833750927*^9, 3.562506834775856*^9}, {
   3.567249235488467*^9, 3.567249292967579*^9}, {3.567249337791793*^9, 
   3.567249386446528*^9}, 3.567249590130349*^9, {3.5672496390067873`*^9, 
   3.56724972680307*^9}, {3.567249783108129*^9, 3.567249791275097*^9}, {
   3.567249887789872*^9, 3.567249898646367*^9}, {3.567249941413538*^9, 
   3.567249969623293*^9}, {3.5672501838636312`*^9, 3.567250200465247*^9}, {
   3.569761586587219*^9, 3.5697615891112547`*^9}, {3.570778056411446*^9, 
   3.570778067752029*^9}, 3.570778712242436*^9, 3.5707787483437853`*^9, {
   3.570779076465747*^9, 3.570779131724852*^9}, {3.570779376116268*^9, 
   3.5707794022408113`*^9}, {3.570779515672779*^9, 3.570779522472857*^9}, {
   3.570780051498467*^9, 3.5707802166695557`*^9}, {3.5707802624861517`*^9, 
   3.570780317357285*^9}, {3.570780539719417*^9, 3.570780617770678*^9}, {
   3.570780659955798*^9, 3.5707806819852943`*^9}, {3.5707810153015957`*^9, 
   3.5707810434695463`*^9}, {3.570781080050919*^9, 3.570781086761483*^9}, {
   3.570781369521203*^9, 3.57078137014649*^9}, {3.584969862326613*^9, 
   3.584969921717609*^9}, {3.584969961043536*^9, 3.58496997423133*^9}, {
   3.5849703404146333`*^9, 3.5849704085364447`*^9}, {3.584972743480936*^9, 
   3.584972774851616*^9}, {3.584972833708823*^9, 3.5849728337811213`*^9}, {
   3.585030897773487*^9, 3.585030917812725*^9}, {3.58503096468814*^9, 
   3.585030981135762*^9}, {3.5850310721825027`*^9, 3.585031072298376*^9}, {
   3.6750682716970863`*^9, 3.675068296486504*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Genotyping functions", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.594468775052609*^9, 3.594468790585682*^9}, {
  3.660682685911838*^9, 3.660682687602935*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", "Log10"}], " ", "with", " ", "excluded", " ", "singularity", 
    " ", "at", " ", "0."}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Log0", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"\[Epsilon]_:", "0.01"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "<", "\[Epsilon]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Log10", "[", "\[Epsilon]", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Log10", "[", "x", "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.669806982930275*^9, 3.6698070656416206`*^9}, {
  3.6698071923450427`*^9, 3.6698072097858734`*^9}, {3.669807244199534*^9, 
  3.669807244605135*^9}, {3.6698101837622666`*^9, 3.669810184121067*^9}, {
  3.6750638684482346`*^9, 3.67506394092338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Order", " ", "of", " ", "vectors", " ", "is", " ", 
      RowBox[{"important", "!"}], "\[IndentingNewLine]", 
      RowBox[{"AlleleVectors", "[", "2", "]"}]}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.", ",", "0."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "1."}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AlleleVectors", "[", "3", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5", ",", "0."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "1.", ",", "0."}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AlleleVectors", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"AlleleVectors", "[", "n", "]"}], "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1.", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "n", "]"}], "[", 
             RowBox[{"[", "j1", "]"}], "]"}], "+", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "n", "]"}], "[", 
             RowBox[{"[", "j2", "]"}], "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j1", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j2", ",", "1", ",", "j1"}], "}"}]}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NormalizedAlleleVectors", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"NormalizedAlleleVectors", "[", "n", "]"}], "=", 
      RowBox[{
       RowBox[{
        FractionBox["#", 
         RowBox[{"Norm", "[", "#", "]"}]], "&"}], "/@", 
       RowBox[{"AlleleVectors", "[", "n", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AlleleCombinations", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"AlleleCombinations", "[", "n", "]"}], "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"j2", ",", "j1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j1", ",", "1", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j2", ",", "1", ",", "j1"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6698067502402663`*^9, 3.669806755715876*^9}, {
   3.669806946831812*^9, 3.6698069587190323`*^9}, 3.6698070900088634`*^9, {
   3.6698071320197372`*^9, 3.66980713367334*^9}, {3.6698101398325896`*^9, 
   3.669810165385434*^9}, 3.671628273196967*^9, {3.6716283413846865`*^9, 
   3.671628424720033*^9}, {3.672390853454806*^9, 3.672390887941778*^9}, {
   3.6723909489662685`*^9, 3.6723909520244436`*^9}, {3.6723909854933577`*^9, 
   3.6723910881032267`*^9}, {3.6732842212988567`*^9, 3.6732842751469364`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "takes", " ", "a", " ", "set", " ", "of", 
     " ", "vectors", " ", "and", " ", "assigns", " ", "each", " ", "to", " ", 
     "the", " ", "closest", " ", "allele", " ", "vector"}], ",", " ", 
    RowBox[{
    "also", " ", "substituting", " ", "the", " ", "closest", " ", "allele", 
     " ", "vector", " ", "by", " ", "this", " ", 
     RowBox[{"vector", ".", "\[IndentingNewLine]", 
      RowBox[{"Output", ":", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "final", " ", "substituted", " ", "list", " ", "of", " ", "allele", 
          " ", "vectors"}], ",", " ", 
         RowBox[{
         "positions", " ", "of", " ", "original", " ", "vectors", " ", "in", 
          " ", "the", " ", "final", " ", "list"}]}], "}"}]}]}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClosestVectors", "[", 
    RowBox[{"vect_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "d", ",", "products", ",", "vectororder", ",", "productorder", ",", 
       "finallist", ",", "takenlist", ",", "reorderlist"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"vect", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "vect", "]"}], ">", 
         RowBox[{"Length", "[", 
          RowBox[{"AlleleVectors", "[", "d", "]"}], "]"}]}], ",", 
        RowBox[{"Return", "[", "\"\<Too many vectors!\>\"", "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"products", "=", 
       RowBox[{
        FractionBox["vect", 
         RowBox[{"Norm", "/@", "vect"}]], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"NormalizedAlleleVectors", "[", "d", "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vectororder", "=", 
       RowBox[{"Reverse", "[", 
        RowBox[{"Ordering", "[", 
         RowBox[{"Max", "/@", "products"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"productorder", "=", 
       RowBox[{"Reverse", "/@", 
        RowBox[{"(", 
         RowBox[{"Ordering", "/@", 
          RowBox[{"products", "[", 
           RowBox[{"[", "vectororder", "]"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"finallist", "=", 
       RowBox[{"AlleleVectors", "[", "d", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"reorderlist", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", "vect", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"takenlist", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FreeQ", "[", 
             RowBox[{"takenlist", ",", 
              RowBox[{"productorder", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"takenlist", ",", 
                RowBox[{"productorder", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"finallist", "[", 
                RowBox[{"[", 
                 RowBox[{"productorder", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "i"}], "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{"vect", "[", 
                RowBox[{"[", 
                 RowBox[{"vectororder", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"reorderlist", "[", 
                RowBox[{"[", 
                 RowBox[{"vectororder", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], "=", 
               RowBox[{"productorder", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"takenlist", ",", "\"\<\\t\>\"", ",", "finallist"}], 
                 "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
           "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"productorder", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "vectororder", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"finallist", ",", "reorderlist"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6723940910139837`*^9, 3.672394125413951*^9}, {
   3.6723941940038743`*^9, 3.6723942084156985`*^9}, {3.6723943353839607`*^9, 
   3.67239445251066*^9}, {3.67239449796926*^9, 3.6723945102669635`*^9}, {
   3.672394610015669*^9, 3.672394628465724*^9}, {3.6723948288121834`*^9, 
   3.6723948754478507`*^9}, {3.6723949827259865`*^9, 
   3.6723950867979393`*^9}, {3.672395363019738*^9, 3.672395789457129*^9}, {
   3.672395830356468*^9, 3.6723958830524826`*^9}, {3.6723966611059847`*^9, 
   3.6723966690254374`*^9}, 3.672396912165344*^9, {3.6723972002618227`*^9, 
   3.6723972328376856`*^9}, {3.672397627030232*^9, 3.672397636593779*^9}, {
   3.6723977088499117`*^9, 3.672397712069096*^9}, {3.6723978412604856`*^9, 
   3.6723978446326785`*^9}, {3.672397907269261*^9, 3.6723980019356756`*^9}, {
   3.672398104064517*^9, 3.672398125052717*^9}, {3.6723989196551657`*^9, 
   3.6723989233613777`*^9}, {3.6732655982097497`*^9, 
   3.6732656095904007`*^9}, {3.673265648240611*^9, 3.673265777990032*^9}, {
   3.673278901106559*^9, 3.6732790131859694`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Function", " ", "BinomialBestFit", " ", "clusters", " ", "l"}], 
     "-", 
     RowBox[{
     "dimensional", " ", "vectors", " ", "based", " ", "on", " ", 
      "Multinomial", " ", 
      RowBox[{"probability", ".", " ", "\[IndentingNewLine]", 
       RowBox[{"Input", ":", " ", 
        RowBox[{"a", " ", "matrix", " ", "of", " ", "readcounts", " ", 
         RowBox[{"(", 
          RowBox[{"n", " ", "x", " ", "l"}], ")"}], " ", "for", " ", "n", " ",
          "individuals"}]}]}]}]}], ",", " ", 
    RowBox[{"l", " ", 
     RowBox[{"alleles", ".", "\[IndentingNewLine]", 
      RowBox[{"Output", ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n", "-", 
           RowBox[{
           "list", " ", "of", " ", "numbers", " ", "from", " ", "1", " ", 
            "to", " ", "k", " ", "for", " ", "best", " ", "clusters"}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"directions", " ", 
           RowBox[{"(", "probabilities", ")"}], " ", "of", " ", "the", " ", 
           "best", " ", "clusters", " ", 
           RowBox[{"(", 
            RowBox[{"k", " ", "x", " ", "l"}], ")"}]}]}], "}"}], ".", 
        "\[IndentingNewLine]", "Options"}], ":", " ", "\[IndentingNewLine]", 
       RowBox[{
       "MinimalProbability", " ", "should", " ", "be", " ", "greater", " ", 
        "than", " ", "0", " ", "to", " ", "avoid", " ", 
        RowBox[{
         RowBox[{"Log", "[", "0", "]"}], ".", " ", "Default"}], " ", 
        "MinimalProbability", " ", "0.01", " ", "is", " ", "a", " ", 
        "reasonable", " ", 
        RowBox[{"value", ".", "\[IndentingNewLine]", "InitialProbabilities"}],
         " ", "is", " ", "an", " ", "important", " ", "option"}]}]}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "defines", " ", "the", " ", "directions", " ", "for", " ", "intitial", 
      " ", 
      RowBox[{"clusters", ".", " ", "The"}], " ", "default", " ", "ones", " ",
       "are", " ", "given", " ", "by", " ", 
      RowBox[{
       RowBox[{"AlleleVectors", "[", "l", "]"}], ".", "\[IndentingNewLine]", 
       RowBox[{"GenotypingCoverage", ":", " ", 
        RowBox[{
        "if", " ", "an", " ", "individual", " ", "has", " ", "less", " ", 
         "than", " ", "this", " ", "number", " ", "of", " ", "reads", " ", 
         "covering", " ", "the", " ", "site", " ", "than", " ", "the", " ", 
         "genotype", " ", "is", " ", "not", " ", "calculated", " ", "and", 
         " ", "set", " ", 
         RowBox[{"to", " ", "."}]}]}]}]}], "/.", " ", 
     RowBox[{"The", " ", "default", " ", "value", " ", "is", " ", "1"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "only"}], " ", "individuals", " ", 
     "with", " ", "no", " ", "reads", " ", "are", " ", "not", " ", 
     RowBox[{"genotyped", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "BinomialBestFit", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MinimalProbability", "\[Rule]", "0.01"}], ",", 
       RowBox[{"InitialProbabilities", "\[Rule]", "\"\<Default\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GenotypingCoverage", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PrintReports", "\[Rule]", "False"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BinomialBestFit", "[", 
      RowBox[{
       RowBox[{"readcounts0_", "?", "MatrixQ"}], ",", 
       RowBox[{"OptionsPattern", "[", "BinomialBestFit", "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "l", ",", "p", ",", "pinit", ",", "plog", ",", "\[Epsilon]", ",", 
         "phred", ",", "bestcluster0", ",", "bestcluster", ",", "ttl", ",", 
         "ps0", ",", "readcounts", ",", "psinsert"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Epsilon]", "=", 
         RowBox[{"OptionValue", "[", "MinimalProbability", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pinit", "=", 
         RowBox[{"OptionValue", "[", "InitialProbabilities", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"l", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"First", "[", "readcounts0", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ttl", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Plus", "@@", "#"}], "&"}], "/@", "readcounts0"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ps0", "=", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Sign", "[", 
            RowBox[{"ttl", "-", 
             RowBox[{"OptionValue", "[", "GenotypingCoverage", "]"}]}], "]"}],
            ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"readcounts", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"readcounts0", ",", "ps0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"psinsert", "=", 
         RowBox[{"ps0", "-", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"Length", "[", "ps0", "]"}], "-", "1"}]}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pinit", "===", "\"\<Default\>\""}], ",", 
           RowBox[{"AlleleVectors", "[", "l", "]"}], ",", "pinit"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"bestcluster0", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"plog", "=", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Log0", "[", 
                 RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}], ",", "p", 
               ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], "//", "Transpose"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"phred", "=", 
            RowBox[{"readcounts", ".", "plog"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"bestcluster", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Ordering", "[", 
                 RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "phred"}], 
              ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"bestcluster0", "===", "bestcluster"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"p", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"N", "[", 
                FractionBox["#", 
                 RowBox[{"Plus", "@@", "#"}]], "]"}], "&"}], "/@", 
              RowBox[{"Total", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"GatherBy", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"readcounts", ",", "bestcluster"}], "}"}], "//", 
                    "Transpose"}], ",", "Last"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"{", "2", "}"}]}], "]"}]}], "//", "Sort"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"OptionValue", "[", "PrintReports", "]"}], "===", 
              "True"}], ",", 
             RowBox[{"Print", "[", "p", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"bestcluster0", "=", "bestcluster"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "readcounts", "]"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Insert", "[", 
           RowBox[{"bestcluster", ",", "0", ",", "psinsert"}], "]"}], ",", 
          "p"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.671622406113538*^9, 3.6716254254119654`*^9, {3.671625634795533*^9, 
   3.6716257529813404`*^9}, 3.6716265181782846`*^9, {3.6716266007336297`*^9, 
   3.6716266525881205`*^9}, {3.6716267694323263`*^9, 3.671626896369749*^9}, {
   3.6716269465706367`*^9, 3.6716270084091454`*^9}, {3.6716270850832806`*^9, 
   3.67162710775012*^9}, {3.671627173176635*^9, 3.671627185625457*^9}, {
   3.671627274810814*^9, 3.6716273592069616`*^9}, {3.671627998792485*^9, 
   3.6716281031566687`*^9}, {3.67162817223359*^9, 3.6716282655061536`*^9}, 
   3.6716283357686768`*^9, {3.6720356851645236`*^9, 3.6720358869952984`*^9}, 
   3.6720360559786105`*^9, {3.6720375663187532`*^9, 3.6720375702665606`*^9}, {
   3.6724247162736483`*^9, 3.6724247285663514`*^9}, 3.675064031011533*^9, 
   3.6750641103140683`*^9, {3.675064146564142*^9, 3.675064148140232*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Split2D", " ", "splits", " ", "biallelic", " ", "read", " ", "counts", 
     " ", "to", " ", "4", " ", "groups", " ", "using", " ", "the", " ", 
     "maximal", " ", "spread", " ", 
     RowBox[{"angle", ".", " ", "The"}], " ", "forth", " ", "group", " ", 
     "is", " ", "the", " ", "individuals", " ", "with", " ", "low", " ", 
     RowBox[{"(", 
      RowBox[{"less", " ", "than", " ", "MinimalCoverage"}], ")"}], " ", 
     "read", " ", 
     RowBox[{"counts", ".", "\[IndentingNewLine]", 
      RowBox[{"Input", ":", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", " ", "x", " ", "2"}], ")"}], " ", "matrix", " ", "of", 
        " ", "read", " ", 
        RowBox[{"counts", ".", "\[IndentingNewLine]", "Output"}]}], ":", " ", 
       
       RowBox[{"{", 
        RowBox[{
        "4", " ", "lists", " ", "of", " ", "positions", " ", "of", " ", 
         "individuals", " ", "in", " ", "the", " ", "4", " ", "clusters"}], 
        "}"}]}]}]}], ",", " ", 
    RowBox[{"the", " ", "lists", " ", "may", " ", "be", " ", 
     RowBox[{"empty", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "Split2D", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"MinimalCoverage", "\[Rule]", "6"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Split2D", "[", 
      RowBox[{
       RowBox[{"readcounts_", "?", "MatrixQ"}], ",", 
       RowBox[{"OptionsPattern", "[", "Split2D", "]"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mnrd", ",", "n", ",", "l", ",", "ttl", ",", "psok", ",", 
         "psinsufficientreads", ",", "angles", ",", "anglesplus", ",", "ord", 
         ",", "extra", ",", "mdl", ",", "anglessorted", ",", "g0", ",", "g12",
          ",", "clusters"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"mnrd", "=", 
          RowBox[{"OptionValue", "[", "MinimalCoverage", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n", "=", 
          RowBox[{"Length", "[", "readcounts", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ttl", "=", 
          RowBox[{"Total", "[", 
           RowBox[{"readcounts", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         RowBox[{"ttl", "=", 
          RowBox[{
           RowBox[{"readcounts", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", 
           RowBox[{"readcounts", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Plus", "@@", "#"}], "&"}], "/@", "readcounts"}], "*)"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"psok", "=", 
         RowBox[{"Join", "@@", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Sign", "[", 
             RowBox[{"ttl", "-", 
              RowBox[{"(", 
               RowBox[{"mnrd", "-", "1"}], ")"}]}], "]"}], ",", "1", ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l", "=", 
         RowBox[{"Length", "[", "psok", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"l", "===", "0"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"Range", "[", "n", "]"}]}], "}"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"psinsufficientreads", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "[", "n", "]"}], ",", "psok"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"angles", "=", 
         RowBox[{
          FractionBox["2.", "\[Pi]"], 
          RowBox[{"(", 
           RowBox[{"ArcSin", "[", 
            FractionBox[
             RowBox[{"N", "[", 
              RowBox[{"readcounts", "[", 
               RowBox[{"[", 
                RowBox[{"psok", ",", "2"}], "]"}], "]"}], "]"}], 
             RowBox[{"Norm", "/@", 
              RowBox[{"N", "[", 
               RowBox[{"readcounts", "[", 
                RowBox[{"[", "psok", "]"}], "]"}], "]"}]}]], "]"}], ")"}]}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
         "3", " ", "\"\<fake\>\"", " ", "points", " ", "are", " ", "added"}], 
         "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"anglesplus", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"angles", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.0000001"}], ",", "0.5", ",", "1.0000001"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ord", "=", 
         RowBox[{"Ordering", "[", "anglesplus", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"extra", "=", 
         RowBox[{"Ordering", "[", 
          RowBox[{"ord", ",", 
           RowBox[{"-", "3"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mdl", "=", 
         RowBox[{"extra", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"anglessorted", "=", 
         RowBox[{"anglesplus", "[", 
          RowBox[{"[", "ord", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"g0", "=", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{
            RowBox[{"Differences", "[", 
             RowBox[{"anglessorted", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "mdl"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"g12", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Ordering", "[", 
            RowBox[{
             RowBox[{"Differences", "[", 
              RowBox[{"anglessorted", "[", 
               RowBox[{"[", 
                RowBox[{"mdl", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "mdl", "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"clusters", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ord", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "g0"}], "]"}], "]"}], ",", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"ord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"g0", "+", "1"}], ";;", "g12"}], "]"}], "]"}], ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", ">", "l"}]}]}], "]"}], ",", 
           RowBox[{"ord", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"g12", "+", "1"}], ";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"psok", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "clusters"}], ",", 
          "psinsufficientreads"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672041646221365*^9, 3.6720416471885667`*^9}, {
   3.672041763219786*^9, 3.672041804561863*^9}, {3.6720418408385305`*^9, 
   3.6720418497953477`*^9}, {3.6720424802817316`*^9, 
   3.6720424909439516`*^9}, {3.6720428879738913`*^9, 3.672042890750097*^9}, {
   3.6720429275849643`*^9, 3.672042929785568*^9}, {3.672043131200147*^9, 
   3.6720431806048393`*^9}, 3.6720441568474092`*^9, {3.6720442887131367`*^9, 
   3.672044306624959*^9}, {3.672044342012375*^9, 3.672044444028598*^9}, {
   3.6720445842546096`*^9, 3.6720446556226916`*^9}, {3.672044741926628*^9, 
   3.6720449068174515`*^9}, {3.6720462608628707`*^9, 3.6720462868533573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Split10D", " ", "splits", " ", "multiallelic", " ", "read", " ", 
     "counts", " ", "using", " ", "Split2D", " ", "on", " ", "each", " ", 
     "allele", " ", "count", " ", "against", " ", "the", " ", "some", " ", 
     "of", " ", "the", " ", "rest", " ", "allele", " ", 
     RowBox[{"counts", ".", "\[IndentingNewLine]", 
      RowBox[{"Input", ":", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", " ", "x", " ", "d"}], ")"}], " ", "matrix", " ", "of", 
        " ", "allele", " ", "count", " ", 
        RowBox[{"vectors", ".", "\[IndentingNewLine]", "Output"}]}], ":", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", " ", "x", " ", "2"}], ")"}], " ", "matrix", " ", 
        "representing", " ", "initial", " ", "genotypes"}]}]}]}], ",", " ", 
    RowBox[{"each", " ", "in", " ", "the", " ", "form", " ", 
     RowBox[{"{", 
      RowBox[{"j1", ",", "j2"}], "}"}]}], ",", " ", 
    RowBox[{"where", " ", "for", " ", "example", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], " ", "corresponds", " ", 
     RowBox[{"to", " ", "'"}], 
     RowBox[{"0", "/", 
      RowBox[{
       RowBox[{"1", "'"}], ".", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], " ", "stands", " ", "for", " ", 
     "low", " ", "coverage", " ", 
     RowBox[{"individuals", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Split10D", "[", 
     RowBox[{
      RowBox[{"readcounts_", "?", "MatrixQ"}], ",", 
      RowBox[{"optns", ":", 
       RowBox[{"OptionsPattern", "[", "Split2D", "]"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mnrd", ",", "ll", ",", "trans", ",", "ttl", ",", "clusters", ",", 
        "allelestoremove", ",", "allelestoremain", ",", "genotypesremaining", 
        ",", "al", ",", "genotypes", ",", "ps0", ",", "genotypes0"}], "}"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mnrd", "=", 
        RowBox[{"OptionValue", "[", "MinimalCoverage", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ll", "=", 
        RowBox[{"Dimensions", "[", "readcounts", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"trans", "=", 
        RowBox[{"Transpose", "[", "readcounts", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ttl", "=", 
        RowBox[{"Total", "[", "trans", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"First", " ", "cluster", " ", "using", " ", "Split2D"}], " ",
          "-", " ", 
         RowBox[{
         "each", " ", "allele", " ", "vs", " ", "the", " ", "total", " ", 
          "of", " ", "read", " ", "counts", " ", "for", " ", "all", " ", 
          "other", " ", "alleles"}]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"clusters", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Split2D", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ttl", "-", "rrr"}], ",", "rrr"}], "}"}], "]"}], ",", 
            "optns"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"rrr", ",", "trans"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Find", " ", "alleles", " ", "to", " ", "be", " ", "removed"}], " ", 
         "-", " ", 
         RowBox[{"those", " ", "that", " ", 
          RowBox[{"don", "'"}], "t", " ", "have", " ", "multiple", " ", 
          "clusters"}]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"allelestoremove", "=", 
        RowBox[{"Join", "@@", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"RemoveAlleleQ", "/@", "clusters"}], ",", "True", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "If", " ", "all", " ", "but", " ", "one", " ", "allele", " ", "is", 
          " ", "to", " ", "be", " ", "removed"}], ",", " ", 
         RowBox[{
          RowBox[{
          "leave", " ", "at", " ", "least", " ", "2", " ", "alleles"}], " ", 
          "-", " ", 
          RowBox[{
          "those", " ", "that", " ", "have", " ", "maximal", " ", "number", 
           " ", "of", " ", "reads", " ", "across", " ", "all", " ", 
           "samples"}]}]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "allelestoremove", "]"}], ">", 
          RowBox[{
           RowBox[{"ll", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "2"}]}], ",", 
         RowBox[{"allelestoremove", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"allelestoremove", ",", 
            RowBox[{"Ordering", "[", 
             RowBox[{
              RowBox[{"Total", "/@", "trans"}], ",", 
              RowBox[{"-", "2"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"allelestoremain", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"ll", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "allelestoremove"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "allelestoremove", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "If", " ", "there", " ", "are", " ", "alleles", " ", "to", " ", "be",
           " ", "removed"}], ",", " ", 
         RowBox[{
         "then", " ", "run", " ", "the", " ", "same", " ", "function", " ", 
          "only", " ", "on", " ", "those", " ", "remaining"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "and", " ", "then", " ", "correct", " ", "the", " ", "allele", " ", 
          "numbers", " ", "in", " ", "the", " ", "genotypes"}]}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"allelestoremove", "=!=", 
          RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"genotypesremaining", "=", 
           RowBox[{
            StyleBox["Split10D",
             FontColor->GrayLevel[0]], 
            StyleBox["[",
             FontColor->GrayLevel[0]], 
            RowBox[{
             RowBox[{"readcounts", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "allelestoremain"}], "]"}], "]"}], ",", 
             "optns"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "===", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"allelestoremain", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
            "genotypesremaining"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
        "Collect", " ", "the", " ", "alleles", " ", "from", " ", "all", " ", 
         "clusters", " ", "for", " ", "each", " ", "sample"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"al", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"genotypes", "=", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "@@", "#"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"ConvertClusterPositionsToGenotypes", "[", 
               RowBox[{
                RowBox[{"clusters", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"al", "*", 
                 RowBox[{"allelestoremain", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "allelestoremain", "]"}]}], "}"}]}], 
             "]"}], "//", "Transpose"}], ")"}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ps0", "=", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{"ttl", "-", "mnrd"}], "]"}], ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"genotypes0", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"genotypes", ",", 
          RowBox[{"ps0", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Some", " ", "samples", " ", "may", " ", "get", " ", "less", " ", 
          "than", " ", "2", " ", "or", " ", "more", " ", "than", " ", "2", 
          " ", 
          RowBox[{"alleles", ".", "\[IndentingNewLine]", "Those"}], " ", 
          "should", " ", "be", " ", "resolved"}], " ", "-", " ", 
         RowBox[{"reduced", " ", "to", " ", "exactly", " ", "2", " ", 
          RowBox[{"alleles", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ResolveWrongGenotypes", "[", 
        RowBox[{"genotypes0", ",", "readcounts"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672041646221365*^9, 3.6720416471885667`*^9}, {
   3.672041763219786*^9, 3.672041804561863*^9}, {3.6720418408385305`*^9, 
   3.6720418497953477`*^9}, {3.6720424802817316`*^9, 
   3.6720424909439516`*^9}, {3.6720428879738913`*^9, 3.672042890750097*^9}, {
   3.6720429275849643`*^9, 3.672042929785568*^9}, {3.672043131200147*^9, 
   3.6720431806048393`*^9}, 3.6720441568474092`*^9, {3.6720442887131367`*^9, 
   3.672044306624959*^9}, {3.672044342012375*^9, 3.672044444028598*^9}, {
   3.6720445842546096`*^9, 3.6720446556226916`*^9}, {3.672044741926628*^9, 
   3.6720449068174515`*^9}, {3.672045144084014*^9, 3.6720451654012327`*^9}, {
   3.6720462386175985`*^9, 3.672046243347869*^9}, {3.6720463073875318`*^9, 
   3.6720463075195394`*^9}, {3.6720464755265455`*^9, 3.672046555825138*^9}, {
   3.672047089515252*^9, 3.6720471672586985`*^9}, {3.6720474246886168`*^9, 
   3.6720474276197844`*^9}, {3.6720474876580153`*^9, 3.672047542695159*^9}, {
   3.672047604873513*^9, 3.6720476352902527`*^9}, {3.672047688301285*^9, 
   3.6720476965717583`*^9}, {3.6720477271655073`*^9, 3.672047728301573*^9}, {
   3.672047787853979*^9, 3.672047828527305*^9}, {3.6720479943237886`*^9, 
   3.672047998849047*^9}, {3.6720480546428375`*^9, 3.672048058766073*^9}, {
   3.6720482163888865`*^9, 3.672048250546038*^9}, {3.6720483966031895`*^9, 
   3.6720484120740747`*^9}, {3.672048455157539*^9, 3.6720484992340593`*^9}, {
   3.672049317802263*^9, 3.6720493575415354`*^9}, {3.6720496162845287`*^9, 
   3.672049623459939*^9}, {3.6720506548601046`*^9, 3.6720506559421663`*^9}, {
   3.6720507286521225`*^9, 3.6720507288641343`*^9}, {3.6720511146895905`*^9, 
   3.6720511194448624`*^9}, 3.672424797055269*^9, {3.6724248367545395`*^9, 
   3.6724248405527563`*^9}, {3.672425879818199*^9, 3.672426159097173*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Input", ":", " ", 
     RowBox[{"the", " ", "result", " ", "of", " ", "Split2D"}]}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "4"}], " ", "lists", " ", "of", " ", 
     RowBox[{"positions", ".", "\[IndentingNewLine]", "If"}], " ", "there", 
     " ", "is", " ", "only", " ", "one", " ", "nonempty", " ", "cluster", " ",
      "and", " ", "it", " ", "is", " ", "the", " ", 
     RowBox[{"0", "/", "0"}], " ", "one", " ", "than", " ", "the", " ", 
     "function", " ", "returns", " ", "True"}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "second", " ", "allele", 
     " ", "should", " ", "be", " ", 
     RowBox[{"removed", ".", "\[IndentingNewLine]", "If"}], " ", "the", " ", 
     "only", " ", "cluster", " ", "is", " ", 
     RowBox[{"1", "/", "1"}], " ", "or", " ", "there", " ", "is", " ", "more",
      " ", "than", " ", "one", " ", "cluster"}], ",", " ", 
    RowBox[{
    "then", " ", "the", " ", "function", " ", "returns", " ", "False"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "no"}], " ", "alleles", " ", "should", 
     " ", "be", " ", 
     RowBox[{"removed", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RemoveAlleleQ", "[", "genotype2Dclusters_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "nonempty", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nonempty", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"genotype2Dclusters", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
          RowBox[{"List", "[", "__", "]"}], ",", 
          RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{"nonempty", "===", 
          RowBox[{"{", "1", "}"}]}], ",", 
         RowBox[{"nonempty", "===", 
          RowBox[{"{", "2", "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nonempty", "===", 
       RowBox[{"{", "1", "}"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672049501967396*^9, 3.672049532566146*^9}, {
  3.6720495639799423`*^9, 3.672049568996229*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "InitialSplit", " ", "uses", " ", "the", " ", "split", " ", "genotyping", 
    " ", "method", " ", "to", " ", "cluster", " ", "read", " ", "counts", " ",
     "and", " ", "returns", " ", "a", " ", "list", " ", "of", " ", 
    "normalized", " ", "vector", " ", "probabilities", " ", "for", " ", "the",
     " ", "cluster", " ", 
    RowBox[{"directions", "."}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"InitialSplit", "[", 
    RowBox[{"readcounts_", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", "Split2D", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "grp0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"readcounts", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Biallelic", " ", "case"}], " ", "*)"}], "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"d", "===", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"grp0", "=", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Split2D", "[", 
               RowBox[{"readcounts", ",", "optns"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", 
              FractionBox["#", 
               RowBox[{"Plus", "@@", "#"}]], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{"Part", "[", 
                   RowBox[{"readcounts", ",", "#"}], "]"}], ",", 
                  RowBox[{"{", "1", "}"}]}], "]"}], ")"}], "&"}], "/@", 
              "grp0"}], ")"}]}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Multiallelic", " ", "case"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"grp0", "=", 
       RowBox[{
        RowBox[{"GatherBy", "[", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Split10D", "[", 
                RowBox[{"readcounts", ",", "optns"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"Length", "[", "readcounts", "]"}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "_"}], "}"}], ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], ",", "First"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"N", "[", 
         FractionBox["#", 
          RowBox[{"Plus", "@@", "#"}]], "]"}], "&"}], "/@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"readcounts", ",", "rrr"}], "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"rrr", ",", "grp0"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672037516253662*^9, 3.672037517969665*^9}, {
   3.6720375882193947`*^9, 3.6720376038178225`*^9}, {3.672038026581997*^9, 
   3.6720380822156987`*^9}, {3.672038354076993*^9, 3.6720383994862757`*^9}, {
   3.672038435765957*^9, 3.672038471780023*^9}, {3.6720385445325546`*^9, 
   3.6720385747650113`*^9}, {3.672044917358852*^9, 3.6720450012198424`*^9}, {
   3.6720450759201145`*^9, 3.672045078317252*^9}, 3.672045117718506*^9, {
   3.6724249784456434`*^9, 3.6724250563490996`*^9}, {3.672425089133975*^9, 
   3.6724251238889627`*^9}, {3.6724251977461867`*^9, 
   3.6724252426517553`*^9}, {3.6724253208272266`*^9, 
   3.6724253388062553`*^9}, {3.672425428497385*^9, 3.672425484736602*^9}, {
   3.672426211481169*^9, 3.672426257723814*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[IndentingNewLine]", 
              RowBox[{"Plot", " ", 
               RowBox[{"function", ".", " ", "\[IndentingNewLine]", 
                RowBox[{"Input", ":", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "4", " ", "sets", " ", "of", " ", "pairs", " ", "of", " ",
                     "reads"}], "}"}], ".", "\[IndentingNewLine]", "The"}], 
                  " ", "sets"}], ":", " ", "\[IndentingNewLine]", "1"}]}]}], 
              ")"}], 
             RowBox[{"green", ":", " ", 
              RowBox[{
               RowBox[{"0", "/", "0"}], " ", "genotype", " ", "cluster"}]}]}],
             ",", "\[IndentingNewLine]", "2"}], ")"}], " ", 
          RowBox[{"blue", ":", " ", 
           RowBox[{
            RowBox[{"0", "/", "1"}], " ", "genotype", " ", "cluster"}]}]}], 
         ",", "\[IndentingNewLine]", "3"}], ")"}], " ", 
       RowBox[{"red", ":", " ", 
        RowBox[{
         RowBox[{"1", "/", "1"}], " ", "genotype", " ", "cluster"}]}]}], ",", 
      "\[IndentingNewLine]", "4"}], ")"}], " ", 
    RowBox[{"black", ":", " ", 
     RowBox[{"low", " ", "number", " ", "of", " ", 
      RowBox[{"reads", ".", "\[IndentingNewLine]", "The"}], " ", "sets", " ", 
      "can", " ", "be", " ", "empty", " ", 
      RowBox[{
       RowBox[{"{", "}"}], "."}]}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotClusteredReadCounts2D", "[", "readcounts_List", "]"}], ":=", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x", ",", "colours", ",", "ps", ",", "mx", ",", "sz", ",", "markers"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"colours", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Blue", ",", "Red", ",",
           "Black"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sz", "=", "Small"}], ";", "\[IndentingNewLine]", 
       RowBox[{"markers", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<\[FilledCircle]\>\"", ",", "sz"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<\[FilledCircle]\>\"", ",", "sz"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<\[FilledCircle]\>\"", ",", "sz"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<\[CircleDot]\>\"", ",", "sz"}], "}"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ps", "=", 
        RowBox[{"Join", "@@", 
         RowBox[{"Position", "[", 
          RowBox[{"readcounts", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ps", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"x", "=", "readcounts"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"readcounts", ",", 
             RowBox[{"List", "/@", "ps"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"colours", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"colours", ",", 
             RowBox[{"List", "/@", "ps"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"markers", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"markers", ",", 
             RowBox[{"List", "/@", "ps"}]}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mx", "=", 
        RowBox[{"Max", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"x", 
         RowBox[{"(*", 
          RowBox[{"+", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{
                RowBox[{"0.005", "mx", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Length", "[", "#", "]"}], ",", "2"}], "}"}]}], 
               "]"}], "&"}], "/@", "x"}], ")"}]}], "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Background", "\[Rule]", "White"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", " ", 
          RowBox[{"mx", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.05`"}], ",", "1.05`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.05`"}], ",", "1.05`"}], "}"}]}], "}"}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"AxesOrigin", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"PlotMarkers", "\[Rule]", "markers"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"(", "colours", ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589114435331339*^9, 3.589114436488524*^9}, {
   3.589114519074212*^9, 3.589114735042882*^9}, {3.589115679755291*^9, 
   3.58911569918547*^9}, {3.589115915032713*^9, 3.589115923841765*^9}, {
   3.589115955940728*^9, 3.589115984614354*^9}, {3.5891183812056503`*^9, 
   3.589118383628611*^9}, {3.589528804672297*^9, 3.589528814481759*^9}, 
   3.589528910379436*^9, {3.589529014751672*^9, 3.589529030903811*^9}, {
   3.590134298272583*^9, 3.590134372656083*^9}, {3.594126485966198*^9, 
   3.594126511673048*^9}, {3.594455901263359*^9, 3.594455927390665*^9}, {
   3.5944559681810102`*^9, 3.594455974045271*^9}, 3.5944570895842667`*^9, {
   3.5944571225768633`*^9, 3.5944571251375647`*^9}, {3.594457165072465*^9, 
   3.5944571880543756`*^9}, {3.594458370146018*^9, 3.594458397880546*^9}, {
   3.59445843168918*^9, 3.5944584942356167`*^9}, {3.594458531636841*^9, 
   3.5944585641435423`*^9}, {3.594458600079122*^9, 3.594458671468546*^9}, {
   3.594458734852653*^9, 3.59445876233521*^9}, {3.5944588019766607`*^9, 
   3.594458836870406*^9}, {3.594460026133512*^9, 3.594460027222705*^9}, {
   3.594466615338889*^9, 3.5944666344333687`*^9}, {3.594466742438439*^9, 
   3.594466916589261*^9}, {3.5944670643772917`*^9, 3.5944671730346212`*^9}, 
   3.596284836012233*^9, {3.600501172179945*^9, 3.600501175611342*^9}, {
   3.6005012094270163`*^9, 3.6005012127277327`*^9}, 3.6460468975066032`*^9, {
   3.650005349050436*^9, 3.650005406017436*^9}, 3.650006938048822*^9, {
   3.650653104722948*^9, 3.6506531078561273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotClusteredReadCounts10D", "[", 
    RowBox[{"genotypes_List", ",", 
     RowBox[{"readcounts_", "?", "MatrixQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dm", ",", "trans", ",", "ttl", ",", "reads2D", ",", "cnt", ",", 
       "readsbygenotype", ",", "ps0", ",", "ps"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dm", "=", 
       RowBox[{"Dimensions", "[", "readcounts", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ps0", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{"genotypes", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"dm", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "ps0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"trans", "=", 
       RowBox[{"Transpose", "[", "readcounts", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ttl", "=", 
       RowBox[{"Plus", "@@", "trans"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"reads2D", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ttl", "-", 
              RowBox[{"trans", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", 
             RowBox[{"trans", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "//", "Transpose"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"cnt", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{"#", ",", "j"}], "]"}], "&"}], "/@", 
           RowBox[{"genotypes", "[", 
            RowBox[{"[", "ps", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"readsbygenotype", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Pick", "[", 
             RowBox[{
              RowBox[{"reads2D", "[", 
               RowBox[{"[", "ps", "]"}], "]"}], ",", "cnt", ",", "#"}], "]"}],
             "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "2"}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ll", "=", 
            RowBox[{"Length", "/@", "readsbygenotype"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"af", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ll", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "+", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], " ", 
                 RowBox[{"ll", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"Plus", "@@", 
                RowBox[{"ll", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ")"}]}], "//", 
             "N"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"PlotClusteredReadCounts2D", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"readsbygenotype", ",", 
            RowBox[{"reads2D", "[", 
             RowBox[{"[", "ps0", "]"}], "]"}]}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"dm", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606142211177123*^9, 3.6061422809047832`*^9}, {
   3.606142312750054*^9, 3.6061423527905273`*^9}, {3.6061424225127773`*^9, 
   3.6061424263676233`*^9}, {3.6061425341132383`*^9, 3.606142601860677*^9}, {
   3.6061426327200737`*^9, 3.606142682123472*^9}, {3.606142749887499*^9, 
   3.6061427790790358`*^9}, {3.60888307918328*^9, 3.608883148856277*^9}, {
   3.6088834004520617`*^9, 3.608883427349811*^9}, {3.6088834885326643`*^9, 
   3.6088835414259777`*^9}, {3.608883581817215*^9, 3.608883608007924*^9}, {
   3.608883735920229*^9, 3.608883799242758*^9}, {3.6088838315206633`*^9, 
   3.6088838565680017`*^9}, {3.608883888178793*^9, 3.608883895570985*^9}, {
   3.608969925201679*^9, 3.60896994405121*^9}, {3.608970020137143*^9, 
   3.608970027442609*^9}, {3.6089701641464252`*^9, 3.608970268762959*^9}, {
   3.608970353964698*^9, 3.608970371077424*^9}, 3.64604690402352*^9, {
   3.650005523319087*^9, 3.650005561240013*^9}, {3.6506530900331078`*^9, 
   3.650653095340411*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Split2DPlot", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Split2DPlot", "[", 
    RowBox[{"readcounts_List", ",", 
     RowBox[{"op", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{"Split2DPlot", ",", "Split2D"}], "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "clst", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"clst", "=", 
       RowBox[{"Split2D", "[", 
        RowBox[{"readcounts", ",", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "op", "}"}], ",", 
           RowBox[{"Options", "[", "Split2D", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotClusteredReadCounts2D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"readcounts", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"(", "clst", ")"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.594477778028174*^9, 3.594477857271061*^9}, {
   3.607844309593753*^9, 3.607844310062603*^9}, 3.6078443479468403`*^9, {
   3.61130175264666*^9, 3.611301757631365*^9}, {3.622966889802837*^9, 
   3.622966900774284*^9}, {3.62296696161801*^9, 3.622967005185198*^9}, {
   3.6750670824440646`*^9, 3.6750670994690385`*^9}, {3.6750671981996856`*^9, 
   3.675067202766947*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Converts", " ", "the", " ", "list", " ", "of", " ", "clustered", " ", 
    "positions", " ", "clusterpositions", " ", "as", " ", "in", " ", "output",
     " ", "of", " ", "Split2D", " ", "to", " ", "a", " ", "list", " ", "of", 
    " ", "alleles", " ", "based", " ", "on", " ", "genotypesofclusters"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ConvertClusterPositionsToGenotypes", "[", 
     RowBox[{"clusterpositions_List", ",", "genotypesofclusters_List"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ord", ",", "clusterlengths"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ord", "=", 
        RowBox[{"Ordering", "[", 
         RowBox[{"Flatten", "[", "clusterpositions", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"clusterlengths", "=", 
        RowBox[{"Length", "/@", "clusterpositions"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Join", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"genotypesofclusters", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "clusterpositions", "]"}]}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
             "clusterlengths", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ")"}], "[", 
        RowBox[{"[", "ord", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.614429608580529*^9, {3.614429692584038*^9, 3.6144296937277803`*^9}, {
   3.6144297262180643`*^9, 3.614429844836237*^9}, 3.675067205496103*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Input", ":", " ", 
     RowBox[{"a", " ", "table", " ", "of", " ", "read", " ", "counts"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{"matrix", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", " ", "x", " ", "l"}], ")"}], ".", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Output", ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
            "a", " ", "list", " ", "of", " ", "resolved", " ", "alleles", " ",
              "for", " ", "each", " ", "individual", " ", "in", " ", "the", 
             " ", "form", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], " ", "-", " ", 
            RowBox[{"matrix", " ", "of", " ", "integers", " ", 
             RowBox[{"(", 
              RowBox[{"n", " ", "x", " ", "2"}], ")"}]}]}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "a", " ", "list", " ", "of", " ", "probability", " ", "vectors", 
             " ", "for", " ", "each", " ", "cluster", " ", "including", " ", 
             "empty", " ", "clusters"}], " ", "-", " ", 
            RowBox[{"matrix", " ", 
             RowBox[{"(", 
              RowBox[{"l", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"l", "+", "1"}], ")"}], "/", "2"}], " ", "x", " ", 
               "l"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "a", " ", "list", " ", "of", " ", "phred", " ", "probabilities", 
              " ", "for", " ", "each", " ", "individual"}], " ", "-", " ", 
             RowBox[{"matrix", " ", 
              RowBox[{"(", 
               RowBox[{"n", " ", "x", " ", "l", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "+", "1"}], ")"}], "/", "2"}]}], ")"}], " ", 
              "with", " ", "phred"}]}], "=", 
            RowBox[{
            "0", " ", "for", " ", "the", " ", "allele", " ", "called"}]}]}], 
          " ", "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "UseInitialSplit"}]}]}]}], "\[Rule]", 
     RowBox[{
     "True", " ", "tells", " ", "the", " ", "function", " ", "to", " ", "use",
       " ", "the", " ", "gap", " ", "splitting", " ", "first"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "then", " ", "to", " ", "refine", " ", "using", " ", 
      "statistical", " ", 
      RowBox[{"methods", ".", "\[IndentingNewLine]", "UseInitialSplit"}]}], 
     "\[Rule]", 
     RowBox[{
     "False", " ", "tells", " ", "the", " ", "function", " ", "to", " ", 
      "use", " ", "the", " ", "default", " ", "initial", " ", "probabilities",
       " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "."}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GenotypeReadCounts", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"UseInitialSplit", "\[Rule]", "True"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenotypeReadCounts", "[", 
     RowBox[{
      RowBox[{"readcounts_", "?", "MatrixQ"}], ",", 
      RowBox[{"optns", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
         "BinomialBestFit", ",", "GenotypeReadCounts", ",", "Split2D"}], 
         "}"}], "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ll", ",", "bbf", ",", "genotypes", ",", "init0", ",", "\[Epsilon]", 
        ",", "closest", ",", "clustn", ",", "p", ",", "plog", ",", "phred", 
        ",", "scores"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ll", "=", 
        RowBox[{"Dimensions", "[", "readcounts", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Epsilon]", "=", 
        RowBox[{"OptionValue", "[", "MinimalProbability", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
        "If", " ", "there", " ", "is", " ", "only", " ", "one", " ", "allele",
          " ", "then", " ", "the", " ", "genotypes", " ", "are", " ", 
         "trivial"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ll", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "===", "1"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"ll", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", "1", "}"}], "}"}], ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"{", "0", "}"}], ",", 
              RowBox[{"ll", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
        "First", " ", "split", " ", "individuals", " ", "to", " ", "groups", 
         " ", "using", " ", "nonstatistical", " ", "split", " ", "methods", 
         " ", "unless", " ", "the", " ", "option", " ", "UseInitialSplit", 
         " ", "is", " ", "set", " ", "to", " ", "False"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "UseInitialSplit", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"init0", "=", 
            RowBox[{"InitialSplit", "[", 
             RowBox[{"readcounts", ",", 
              RowBox[{"FilterRules", "[", 
               RowBox[{
                RowBox[{"{", "optns", "}"}], ",", 
                RowBox[{"Options", "/@", 
                 RowBox[{"{", "Split2D", "}"}]}]}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"init0", "===", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"init0", "=", "\"\<Default\>\""}]}], "]"}]}], ")"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"init0", "=", "\"\<Default\>\""}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Refine", " ", "the", " ", "clustering", " ", "using", " ", 
          "multinomial", " ", "likelihood", " ", "based", " ", 
          "expectation"}], "-", 
         RowBox[{"maximization", " ", "algorithm"}]}], "\[IndentingNewLine]", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"bbf", "=", 
        RowBox[{"BinomialBestFit", "[", 
         RowBox[{"readcounts", ",", 
          RowBox[{"InitialProbabilities", "\[Rule]", "init0"}], ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "optns", "}"}], ",", 
            RowBox[{"Options", "/@", 
             RowBox[{"{", "BinomialBestFit", "}"}]}]}], "]"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
        "Assign", " ", "the", " ", "genotypes", " ", "to", " ", "each", " ", 
         "cluster", " ", "based", " ", "on", " ", "the", " ", "closest", " ", 
         "allele", " ", "vector"}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"closest", "=", 
        RowBox[{"ClosestVectors", "[", 
         RowBox[{"bbf", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"clustn", "=", 
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"closest", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"bbf", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"genotypes", "=", 
        RowBox[{
         RowBox[{"AlleleCombinations", "[", 
          RowBox[{"ll", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"clustn", "+", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"closest", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{"Calculate", " ", "phred", " ", "scores"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"plog", "=", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Log0", "[", 
             RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}], ",", "p", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "//", "Transpose"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"phred", "=", 
        RowBox[{"readcounts", ".", "plog"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"scores", "=", 
        RowBox[{"Round", "[", 
         RowBox[{"10", 
          RowBox[{"(", 
           RowBox[{"phred", "-", 
            RowBox[{"(", 
             RowBox[{"Min", "/@", "phred"}], ")"}]}], ")"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{"Report", " ", 
         RowBox[{"{", 
          RowBox[{"genotypes", ",", " ", 
           RowBox[{"probability", " ", "vectors"}], ",", " ", 
           RowBox[{"phred", " ", "scores"}]}], "}"}]}], "\[IndentingNewLine]",
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"genotypes", ",", "p", ",", "scores"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.668516565870254*^9, 3.668516588603554*^9}, {
   3.66851667629557*^9, 3.6685167474406395`*^9}, 3.668516789296033*^9, {
   3.668517286785488*^9, 3.668517305287546*^9}, {3.668517398065853*^9, 
   3.6685174900401134`*^9}, {3.668517543213155*^9, 3.66851764961524*^9}, {
   3.668626107314392*^9, 3.6686261308037357`*^9}, 3.668764402330454*^9, {
   3.6687644837985983`*^9, 3.668764505468337*^9}, {3.6693781614208593`*^9, 
   3.6693781652272663`*^9}, 3.669378517241884*^9, {3.669378925198201*^9, 
   3.669379022121171*^9}, {3.669379068812053*^9, 3.6693790826804776`*^9}, {
   3.672036141202771*^9, 3.672036165317616*^9}, {3.672037294308114*^9, 
   3.6720373102849436`*^9}, {3.67326308968627*^9, 3.673263093124467*^9}, {
   3.673264792456663*^9, 3.673264792732679*^9}, {3.673264842349517*^9, 
   3.673264862596675*^9}, {3.6732843969889054`*^9, 3.67328441927418*^9}, {
   3.6732846992031913`*^9, 3.6732849123263807`*^9}, {3.67328495304171*^9, 
   3.6732849551728315`*^9}, {3.6732850375195417`*^9, 
   3.6732851532431607`*^9}, {3.6732851833828845`*^9, 3.673285499970992*^9}, 
   3.673285530936764*^9, {3.6732857763398*^9, 3.6732857815390973`*^9}, {
   3.674590391309864*^9, 3.6745903925130663`*^9}, {3.6746717058785377`*^9, 
   3.6746717438597097`*^9}, 3.674671793981577*^9, {3.674729245855037*^9, 
   3.6747293334870496`*^9}, {3.674729368416047*^9, 3.674729481120494*^9}, {
   3.675064710987425*^9, 3.675064712231496*^9}, {3.675064809844079*^9, 
   3.6750650020830746`*^9}, {3.6750650938883257`*^9, 
   3.6750652085638847`*^9}, {3.675065361487632*^9, 3.675065513115304*^9}, {
   3.6750655849544134`*^9, 3.675065646988961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResolveWrongGenotypes", "[", 
   RowBox[{"genotypes_List", ",", 
    RowBox[{"readcounts_", "?", "MatrixQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "k", ",", "lll", ",", "ps0", ",", "ps1", ",", "ps2", ",", "ps", ",", 
      "suspectedgenotypes", ",", "picked", ",", "meanvector", ",", "ttt", ",",
       "newgenotypes"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{"readcounts", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lll", "=", 
      RowBox[{"Length", "/@", "genotypes"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ps0", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"Position", "[", 
        RowBox[{"lll", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", "===", "0"}]}], ",", 
         RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ps1", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"Position", "[", 
        RowBox[{"lll", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", "===", "1"}]}], ",", 
         RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ps2", "=", 
      RowBox[{"Join", "@@", 
       RowBox[{"Position", "[", 
        RowBox[{"lll", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "2"}]}], ",", 
         RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ps", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"ps0", ",", "ps1", ",", "ps2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ps", "===", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", "genotypes", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"suspectedgenotypes", "=", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ps0", "===", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "/@", 
              RowBox[{"Tuples", "[", 
               RowBox[{
                RowBox[{"Range", "[", "k", "]"}], ",", "2"}], "]"}]}], "//", 
             "Union"}], ",", 
            RowBox[{"{", 
             RowBox[{"Length", "[", "ps0", "]"}], "}"}]}], "]"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rrr", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "}"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Range", "[", "k", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"rrr", ",", 
            RowBox[{"genotypes", "[", 
             RowBox[{"[", "ps1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"Subsets", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "&"}], "/@", 
         RowBox[{"genotypes", "[", 
          RowBox[{"[", "ps2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"newgenotypes", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ttt", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"picked", "=", 
              RowBox[{"Pick", "[", 
               RowBox[{"readcounts", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "===", "sss"}], ")"}], "&"}], "/@", 
                 "genotypes"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"meanvector", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"picked", "===", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", "k", "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"List", "/@", "sss"}], ")"}], "\[Rule]", "1"}]}], 
                  "]"}], "}"}], ",", 
                RowBox[{"picked", "//", "N"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"VectorAngle", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"readcounts", "[", 
                    RowBox[{"[", 
                    RowBox[{"ps", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], "//", "N"}],
                   ",", "#"}], "]"}], "&"}], "/@", "meanvector"}], "]"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"sss", ",", 
              RowBox[{"suspectedgenotypes", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"suspectedgenotypes", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", 
            RowBox[{
             RowBox[{"Ordering", "[", 
              RowBox[{"ttt", ",", "1"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"ps", "//", "Length"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"genotypes", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"ps", ",", "newgenotypes"}], "}"}], "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.606137630393511*^9, 3.606137704087734*^9}, {
   3.6061378576606283`*^9, 3.606137964939171*^9}, {3.606137999562426*^9, 
   3.6061381176264353`*^9}, {3.606138153220503*^9, 3.60613821342003*^9}, {
   3.606138246126863*^9, 3.606138273757062*^9}, {3.606138308280506*^9, 
   3.6061383611614103`*^9}, {3.606138481699246*^9, 3.606138594094672*^9}, {
   3.606138764063301*^9, 3.606139132099882*^9}, 3.606139223871274*^9, {
   3.606139265272966*^9, 3.6061393241626863`*^9}, {3.6061394088436337`*^9, 
   3.606139526904954*^9}, {3.6061395934755697`*^9, 3.606139600172473*^9}, {
   3.6061398729662857`*^9, 3.606139909144326*^9}, {3.606139942555468*^9, 
   3.606140110476583*^9}, 3.606140141913725*^9, {3.606140198419886*^9, 
   3.606140198683728*^9}, {3.60614055052722*^9, 3.6061405833104*^9}, {
   3.606140804364356*^9, 3.606140849019668*^9}, {3.606141306418721*^9, 
   3.606141337314579*^9}, {3.606141481005342*^9, 3.6061414992649107`*^9}, {
   3.6061419495292673`*^9, 3.6061419561918087`*^9}, {3.60614209779736*^9, 
   3.60614214284776*^9}, {3.606142983224894*^9, 3.606143014816577*^9}, {
   3.606143088732174*^9, 3.60614309656065*^9}, 3.60614317164209*^9, {
   3.606143289629017*^9, 3.6061433090392523`*^9}, {3.606459747151533*^9, 
   3.606459772560629*^9}, {3.606460019958089*^9, 3.606460071676366*^9}, {
   3.6064628058092546`*^9, 3.606462826278207*^9}, {3.6064649387309523`*^9, 
   3.606464978926476*^9}, {3.6064654432992067`*^9, 3.606465445959358*^9}, {
   3.606466060169526*^9, 3.606466069895245*^9}, {3.607775491445325*^9, 
   3.607775498324641*^9}, {3.646046968094824*^9, 3.6460469714775057`*^9}, {
   3.67506571725098*^9, 3.6750657327518663`*^9}, {3.6754965639508457`*^9, 
   3.6754965695281644`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Reorders", " ", "the", " ", "variant", " ", "alleles", " ", "and", " ", 
     "the", " ", "corresponding", " ", "read", " ", 
     RowBox[{"counts", ".", "\[IndentingNewLine]", "The"}], " ", "reference", 
     " ", "allele", " ", "is", " ", "always", " ", "left", " ", "to", " ", 
     "be", " ", "the", " ", "first"}], ",", " ", 
    RowBox[{
    "the", " ", "other", " ", "alleles", " ", "are", " ", "sorted", " ", "so",
      " ", "that", " ", "the", " ", "alleles", " ", "with", " ", "the", " ", 
     "larger", " ", "total", " ", "number", " ", "of", " ", "reads", " ", 
     "for", " ", "all", " ", "samples", " ", "come", " ", "before", " ", 
     "those", " ", "with", " ", "smaller", " ", "number", " ", "of", " ", 
     RowBox[{"reads", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ReorderAlleles", "[", 
      RowBox[{"{", 
       RowBox[{"vars_List", ",", "readcounts_List"}], "}"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "ord", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "vars", "]"}], "<", "3"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"vars", ",", "readcounts"}], "}"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ord", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"Total", "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "readcounts", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ")"}]}]}], ")"}], "//",
               "Ordering"}], ")"}], "+", "1"}], ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vars", "[", 
           RowBox[{"[", "ord", "]"}], "]"}], ",", 
          RowBox[{"readcounts", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "ord"}], "]"}], "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ReorderAlleles", "[", 
      RowBox[{"{", 
       RowBox[{"coord_", ",", "vars_List", ",", "readcounts_List"}], "}"}], 
      "]"}], ":=", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"ReorderAlleles", "[", 
        RowBox[{"{", 
         RowBox[{"vars", ",", "readcounts"}], "}"}], "]"}], ",", "coord"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5962899720930862`*^9, 3.596290163832754*^9}, {
  3.596290219434154*^9, 3.59629034357423*^9}, {3.596359922914093*^9, 
  3.596359984401402*^9}, {3.596360014909648*^9, 3.596360016964244*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Input", ":", " ", 
     RowBox[{"the", " ", "result", " ", "of", " ", "Split2D"}]}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "4"}], " ", "lists", " ", "of", " ", 
     RowBox[{"positions", ".", "\[IndentingNewLine]", "If"}], " ", "there", 
     " ", "is", " ", "only", " ", "one", " ", "nonempty", " ", "cluster", " ",
      "and", " ", "it", " ", "is", " ", "the", " ", "first", " ", 
     RowBox[{"0", "/", "0"}], " ", "or", " ", 
     RowBox[{"0", "/", "1"}], " ", "one", " ", "than", " ", "the", " ", 
     "function", " ", "returns", " ", "True"}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "second", " ", "allele", 
     " ", "should", " ", "be", " ", 
     RowBox[{"removed", ".", "\[IndentingNewLine]", "If"}], " ", "the", " ", 
     "only", " ", "cluster", " ", "is", " ", 
     RowBox[{"1", "/", "1"}], " ", "or", " ", "there", " ", "is", " ", "more",
      " ", "than", " ", "one", " ", "cluster"}], ",", " ", 
    RowBox[{
    "then", " ", "the", " ", "function", " ", "returns", " ", "False"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "no"}], " ", "alleles", " ", "should", 
     " ", "be", " ", 
     RowBox[{"removed", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RemoveAlleleQ", "[", "genotype2Dclusters_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "nonempty", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nonempty", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"genotype2Dclusters", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
          RowBox[{"List", "[", "__", "]"}], ",", 
          RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"nonempty", "===", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"nonempty", "===", 
         RowBox[{"{", "2", "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.596292165465209*^9, 3.596292173397634*^9}, {
   3.596292671577181*^9, 3.5962927077953377`*^9}, {3.596292920567378*^9, 
   3.59629302538124*^9}, {3.596293881566801*^9, 3.596294006187508*^9}, {
   3.5962940388059797`*^9, 3.596294088977889*^9}, 3.599910080765078*^9, 
   3.646046991912312*^9, 3.6750672067831764`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VariantPlot", "[", "x_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "sbs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "===", "2"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Split2DPlot", "[", 
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"MakeCoordinateString", "[", 
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\n\>\"", "<>", 
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], "<>", 
               "\"\<\[Rule]\>\""}], 
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", "Larger", "}"}]}], "]"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"Bold", ",", "Larger"}], "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], "]"}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"sbs", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Range", "[", "l", "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"VariantPlot", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "#"}], "]"}], "]"}], ",", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "All", ",", "#"}], "]"}], "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"MakeCoordinateString", "[", 
               RowBox[{"x", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<\\n\>\"", "<>", 
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "<>", 
              "\"\<\[Rule]\>\""}], 
             RowBox[{"StringJoinWith", "[", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", 
                  RowBox[{"2", ";;", 
                   RowBox[{"-", "1"}]}]}], "]"}], "]"}], ",", "\"\<,\>\""}], 
              "]"}]}], ",", 
            RowBox[{"{", "Larger", "}"}]}], "]"}]}]}], "]"}], "&"}], "/@", 
      "sbs"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.600500177331257*^9, 3.600500389396776*^9}, {
   3.600500456278241*^9, 3.600500508129795*^9}, {3.600500609612544*^9, 
   3.600500718907442*^9}, {3.6005010418347597`*^9, 3.600501057440404*^9}, {
   3.600501226673818*^9, 3.60050137522444*^9}, {3.60050162837257*^9, 
   3.600501656995018*^9}, {3.600501687311221*^9, 3.600501688700001*^9}, {
   3.600501770671719*^9, 3.600501770918977*^9}, {3.6005018153107452`*^9, 
   3.6005018164792547`*^9}, {3.600501944579462*^9, 3.60050196980239*^9}, {
   3.644565260616692*^9, 3.6445652725962887`*^9}, {3.6445825884926863`*^9, 
   3.6445825996530237`*^9}, 3.6750672093163214`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenotypeToString", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], "]"}], "=", "\"\<./.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenotypeToString", "[", "x_List", "]"}], ":=", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"x", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\</\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"x", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.602414596311335*^9, {3.602414661785191*^9, 3.602414751916175*^9}, {
   3.6024147828994217`*^9, 3.602414795437376*^9}, {3.607842365196073*^9, 
   3.6078424123355713`*^9}, {3.6078425407985573`*^9, 3.607842569880481*^9}, {
   3.610614511778405*^9, 3.610614536410989*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConvertVariantToVcfLine", "::", "usage"}], "=", 
   "\[IndentingNewLine]", 
   "\"\<ConvertVariantToVcfLine[variant_List]\nThe function converts variant \
data for one variant to a line in vcf file.\nUses GenotypeReadCounts function \
to assign genotypes.\nThe function may reorder the alleles in the \
multiallelic case.\nInput: {a list of coordinates of the variant, a list of \
allele sequences with the reference allele being first, a matrix of read \
counts of dimension number of individuals x number of alleles}.\nOutput: a \
list of strings ready to be written into the vcf table.\nLast modification: \
10 June 2016.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ConvertVariantToVcfLine", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvertVariantToVcfLine", "[", 
    RowBox[{"variant_List", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{
        "GenotypeReadCounts", ",", "ConvertVariantToVcfLine", ",", 
         "BinomialBestFit", ",", "Split2D"}], "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l", ",", "afprecision", ",", "nalleles", ",", "multi", ",", "reord", 
       ",", "gnt", ",", "allelesin", ",", "allelesout", ",", "alleleslist", 
       ",", "an", ",", "afstring", ",", "ac", ",", "dp", ",", "infofield", 
       ",", "smpl1", ",", "smpl2", ",", "smpl2ttl", ",", "smpl3min", ",", 
       "smpl3", ",", "smpl", ",", "ord", ",", "ordord", ",", "score", ",", 
       "res"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nalleles", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"variant", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nalleles", "===", "1"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"variant", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", 
               RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", "\"\<.\>\"", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"variant", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<.\>\"", ",", "\[IndentingNewLine]", 
            "0", ",", "\[IndentingNewLine]", "\"\<NoAltAllele\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<AN=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"2", " ", 
               RowBox[{"Length", "[", 
                RowBox[{"variant", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], "<>", 
             "\"\<;DP=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Plus", "@@", 
               RowBox[{"variant", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "All", ",", "1"}], "]"}], "]"}]}], "]"}]}],
             ",", "\[IndentingNewLine]", "\"\<GT:AD:DP:GQ:PL\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
              "\"\<0/0:\>\"", "<>", "rrr", "<>", "\"\<:\>\"", "<>", "rrr", 
               "<>", "\"\<:0:0\>\""}], ",", 
              RowBox[{"{", 
               RowBox[{"rrr", ",", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"variant", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "All", ",", "1"}], "]"}], "]"}]}]}], 
               "}"}]}], "]"}]}], "}"}], "//", "Flatten"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"multi", "=", 
       RowBox[{"nalleles", ">", "2"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Twice", " ", "the", " ", "number", " ", "of", " ", "individuals"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"2", 
        RowBox[{"Length", "[", 
         RowBox[{"variant", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"afprecision", "=", 
       RowBox[{
        RowBox[{"Ceiling", "[", 
         RowBox[{"Log10", "[", 
          RowBox[{"N", "[", "l", "]"}], "]"}], "]"}], "+", "1"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"reord", "=", 
       RowBox[{"If", "[", 
        RowBox[{"multi", ",", 
         RowBox[{"ReorderAlleles", "[", "variant", "]"}], ",", "variant"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gnt", "=", 
       RowBox[{"GenotypeReadCounts", "[", 
        RowBox[{
         RowBox[{"reord", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "optns", "}"}], ",", 
           RowBox[{"Options", "/@", 
            RowBox[{"{", 
             RowBox[{
             "BinomialBestFit", ",", "GenotypeReadCounts", ",", "Split2D"}], 
             "}"}]}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"allelesin", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Union", "@@", 
          RowBox[{"(", 
           RowBox[{"gnt", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", "0"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"allelesout", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", "nalleles", "]"}], ",", "allelesin"}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{"multi", ",", 
          RowBox[{"allelesout", "=!=", 
           RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ord", "=", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Join", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"DeleteCases", "[", 
                  RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{"allelesin", ",", "allelesout"}], "}"}]}], ")"}]}], 
             ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ordord", "=", 
           RowBox[{"Ordering", "[", "ord", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ord", "=!=", 
             RowBox[{"Range", "[", "nalleles", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"reord", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{"reord", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "ord"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"reord", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "=", 
               RowBox[{"reord", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "All", ",", "ord"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"gnt", "=", 
               RowBox[{"GenotypeReadCounts", "[", 
                RowBox[{
                 RowBox[{"reord", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"{", "optns", "}"}], ",", 
                   RowBox[{"Options", "/@", 
                    RowBox[{"{", 
                    RowBox[{"Split2D", ",", "GenotypeReadCounts"}], "}"}]}]}],
                   "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"allelesin", "=", 
               RowBox[{"ordord", "[", 
                RowBox[{"[", "allelesin", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"allelesout", "=", 
               RowBox[{"ordord", "[", 
                RowBox[{"[", "allelesout", "]"}], "]"}]}]}], 
             "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"alleleslist", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"gnt", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"an", "=", 
       RowBox[{"Length", "[", "alleleslist", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ac", "=", 
       RowBox[{"ArrangeTallyList", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"alleleslist", "//", "Tally"}], ")"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"2", ",", "nalleles"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"an", ">", "0"}], ",", 
        RowBox[{"afstring", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", "===", "0"}], ",", "\"\<0\>\"", ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    RowBox[{
                    FractionBox["#", "an"], "//", "N"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"afprecision", ",", "afprecision"}], "}"}], ",", 
                    RowBox[{"ExponentFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"Null", "&"}], ")"}]}]}], "]"}], "]"}]}], "]"}], 
               "&"}], "/@", "ac"}], ")"}], ",", "\"\<,\>\""}], "]"}], "]"}]}],
         ",", 
        RowBox[{"afstring", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"\"\<0\>\"", ",", 
              RowBox[{"Length", "[", "ac", "]"}]}], "]"}], ",", "\"\<,\>\""}],
            "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dp", "=", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"reord", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"infofield", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "\"\<AF=\>\"", ",", "\[IndentingNewLine]", "afstring", ",", 
         "\[IndentingNewLine]", "\"\<;AN=\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"ToString", "[", "an", "]"}], ",", "\[IndentingNewLine]", 
         "\"\<;AC=\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"StringJoinWith", "[", 
          RowBox[{"ac", ",", "\"\<,\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", "\"\<;DP=\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"ToString", "[", "dp", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"allelesout", "===", 
            RowBox[{"{", "}"}]}], ",", "\"\<\>\"", ",", 
           RowBox[{"\"\<;DM=\>\"", "<>", 
            RowBox[{"StringJoinWith", "[", 
             RowBox[{
              RowBox[{"reord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "allelesout"}], "]"}], "]"}], ",", 
              "\"\<,\>\""}], "]"}]}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "Genotypes", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"smpl1", "=", 
       RowBox[{"GenotypeToString", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"gnt", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Read", " ", "counts"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"smpl2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"StringJoinWith", "[", 
           RowBox[{"#", ",", "\"\<,\>\""}], "]"}], ")"}], "&"}], "/@", 
        RowBox[{"reord", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Total", " ", "read", " ", "counts"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"smpl2ttl", "=", 
       RowBox[{
        RowBox[{"(", "ToString", ")"}], "/@", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"reord", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Minimal", " ", "phred", " ", "score"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"smpl3min", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"RankedMin", "[", 
           RowBox[{"#", ",", "2"}], "]"}], ")"}], "&"}], "/@", 
        RowBox[{"gnt", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Phred", " ", "scores"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"smpl3", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"StringJoinWith", "[", 
           RowBox[{"#", ",", "\"\<,\>\""}], "]"}], ")"}], "&"}], "/@", 
        RowBox[{"gnt", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Final", " ", "list", " ", "for", " ", "vcf", " ", "file"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"smpl", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"StringJoinWith", "[", 
          RowBox[{"#", ",", "\"\<:\>\""}], "]"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"smpl1", ",", "smpl2", ",", "smpl2ttl", ",", 
           RowBox[{"ToString", "/@", "smpl3min"}], ",", "smpl3"}], "}"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"score", "=", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"smpl3min", "//", "N"}], "]"}], "//", "Round"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"reord", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", "\"\<.\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"reord", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"StringJoinWith", "[", 
           RowBox[{
            RowBox[{"reord", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}]}], "]"}], "]"}], ",", "\"\<,\>\""}], 
           "]"}], ",", "\[IndentingNewLine]", "score", ",", 
          "\[IndentingNewLine]", "\"\<.\>\"", ",", "\[IndentingNewLine]", 
          "infofield", ",", "\[IndentingNewLine]", "\"\<GT:AD:DP:GQ:PL\>\"", 
          ",", "\[IndentingNewLine]", "smpl"}], "}"}], "//", "Flatten"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "l", ",", "afprecision", ",", "nalleles", ",", "multi", ",", "reord", 
        ",", "gnt", ",", "allelesin", ",", "allelesout", ",", "alleleslist", 
        ",", "an", ",", "afstring", ",", "ac", ",", "dp", ",", "infofield", 
        ",", "smpl1", ",", "smpl2", ",", "smpl2ttl", ",", "smpl3min", ",", 
        "smpl3", ",", "smpl", ",", "ord", ",", "ordord", ",", "score"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "res"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.601823504168118*^9, 3.601823549708312*^9}, {
   3.601823590324738*^9, 3.601823599969936*^9}, {3.6018237989610243`*^9, 
   3.6018238290172033`*^9}, {3.601825051262867*^9, 3.601825099233042*^9}, {
   3.601825160724427*^9, 3.601825298509694*^9}, {3.601825354688999*^9, 
   3.6018253682683983`*^9}, {3.601825454447955*^9, 3.601825464368595*^9}, {
   3.60182549671031*^9, 3.601825504302042*^9}, 3.601825625295402*^9, {
   3.60182566549745*^9, 3.601825670743758*^9}, {3.6018258981057568`*^9, 
   3.601825900257106*^9}, {3.601825936829794*^9, 3.601825940729117*^9}, {
   3.6018260359945173`*^9, 3.6018260535688143`*^9}, {3.601826091712348*^9, 
   3.6018262823788767`*^9}, {3.601826319485248*^9, 3.601826326337967*^9}, {
   3.6018264412090197`*^9, 3.601826477422593*^9}, {3.601975513747963*^9, 
   3.6019755910588417`*^9}, 3.601975626953623*^9, {3.601975777830097*^9, 
   3.6019757971090813`*^9}, {3.601975830961671*^9, 3.6019759116398077`*^9}, {
   3.6019759973943853`*^9, 3.601975999536181*^9}, {3.6019761311739273`*^9, 
   3.601976180454857*^9}, {3.601976339782936*^9, 3.601976340893256*^9}, {
   3.602419545603434*^9, 3.602419551961013*^9}, {3.602419616810789*^9, 
   3.602419656579632*^9}, {3.6024199351363173`*^9, 3.602419946310668*^9}, {
   3.60242007537849*^9, 3.6024200812951183`*^9}, {3.6024255958875847`*^9, 
   3.602425625007362*^9}, {3.60242566378277*^9, 3.602425762165908*^9}, {
   3.602425833924719*^9, 3.602425860676289*^9}, {3.602425908086358*^9, 
   3.602425980562087*^9}, {3.6024260112239*^9, 3.6024260496272583`*^9}, {
   3.602426141167569*^9, 3.6024261546712837`*^9}, {3.602585296495111*^9, 
   3.602585309092916*^9}, {3.602585360274282*^9, 3.602585397245866*^9}, {
   3.602585515387642*^9, 3.602585515545742*^9}, {3.602585583649302*^9, 
   3.602585593012313*^9}, {3.607840176165106*^9, 3.60784017661255*^9}, {
   3.607840213913981*^9, 3.607840258118033*^9}, {3.607844949151581*^9, 
   3.6078450232908087`*^9}, {3.607845077201919*^9, 3.607845103375318*^9}, {
   3.607845134176705*^9, 3.6078451853625603`*^9}, {3.60784528139395*^9, 
   3.607845396947003*^9}, {3.607845433297082*^9, 3.6078454512122097`*^9}, {
   3.6078457924029903`*^9, 3.60784593371597*^9}, {3.607846030261196*^9, 
   3.607846132967526*^9}, {3.6078462004679003`*^9, 3.607846368687089*^9}, {
   3.6078464513292847`*^9, 3.607846555684675*^9}, {3.607846631293054*^9, 
   3.607846917676852*^9}, 3.6078472116068974`*^9, 3.6078476619270067`*^9, {
   3.607847736112536*^9, 3.607847754576434*^9}, {3.607851072251811*^9, 
   3.607851074568494*^9}, {3.607851174953293*^9, 3.607851193938596*^9}, {
   3.608018993549506*^9, 3.608019003557309*^9}, {3.6080190414770184`*^9, 
   3.6080190437707644`*^9}, {3.608020331986299*^9, 3.608020349528982*^9}, {
   3.609667782225218*^9, 3.609667785720784*^9}, {3.609668459225601*^9, 
   3.609668464182652*^9}, {3.610614342579507*^9, 3.6106143570531588`*^9}, 
   3.610614561479618*^9, {3.6434543877443743`*^9, 3.6434544163944597`*^9}, {
   3.643454829135964*^9, 3.643454892186594*^9}, {3.643454982119144*^9, 
   3.6434550271463633`*^9}, {3.643455149718183*^9, 3.6434554854488993`*^9}, {
   3.643456307180485*^9, 3.643456313475855*^9}, 3.6434600215062037`*^9, {
   3.643613065138441*^9, 3.643613070579658*^9}, {3.644142856459399*^9, 
   3.644142936700664*^9}, {3.644142987592773*^9, 3.644142997971712*^9}, {
   3.644582619105535*^9, 3.644582691553803*^9}, {3.668625824333207*^9, 
   3.6686258451533976`*^9}, {3.6687635133409705`*^9, 3.668763517219777*^9}, {
   3.6687640395134077`*^9, 3.6687640403090096`*^9}, {3.6687643713299985`*^9, 
   3.6687643746996045`*^9}, {3.6693791967634783`*^9, 3.669379231395539*^9}, {
   3.6734395204896207`*^9, 3.6734395710493097`*^9}, {3.6734396057281704`*^9, 
   3.6734396282234097`*^9}, {3.6734400622941723`*^9, 
   3.6734400770985985`*^9}, {3.6735415904767795`*^9, 3.673541612801056*^9}, {
   3.6735418341327157`*^9, 3.673541835867815*^9}, {3.6735418950191984`*^9, 
   3.673541970913539*^9}, {3.6735423290040207`*^9, 3.673542360216806*^9}, {
   3.673804375576435*^9, 3.67380438003869*^9}, {3.673804412572551*^9, 
   3.673804480690447*^9}, {3.674545929900782*^9, 3.674545939501501*^9}, {
   3.6745459763821845`*^9, 3.6745459869030204`*^9}, {3.674546046204051*^9, 
   3.674546048195304*^9}, {3.6745591821916094`*^9, 3.674559191630808*^9}, {
   3.6745874267282877`*^9, 3.6745874754335823`*^9}, {3.6745875081902432`*^9, 
   3.6745876189864526`*^9}, {3.6745876830745726`*^9, 
   3.6745879496986837`*^9}, {3.674590401373283*^9, 3.674590433830345*^9}, {
   3.6745905702155995`*^9, 3.674590571683002*^9}, {3.675065910312022*^9, 
   3.6750659349524317`*^9}, 3.675066054496269*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvertVcfLineToVariant", "[", "rrr_List", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rrr", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"rrr", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], ",", 
        RowBox[{"rrr", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"AlleleCounts", "[", 
       RowBox[{"rrr", "[", 
        RowBox[{"[", 
         RowBox[{"10", ";;", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AlleleCounts", "[", "\"\<./.\>\"", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AlleleCounts", "[", "x_String", "]"}], ":=", 
   RowBox[{"ToExpression", "/@", 
    RowBox[{"StringSplit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{"x", ",", "\"\<:\>\""}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AlleleCounts", "[", "xx_List", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{"FromDigits", ",", 
     RowBox[{"StringSplit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{"xx", ",", "\"\<:\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "\"\<,\>\""}], "]"}], 
     ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6144313131952763`*^9, 3.61443131960984*^9}, 
   3.6434547477726927`*^9, {3.644583849522208*^9, 3.6445838498412027`*^9}, {
   3.6745888389013495`*^9, 3.6745888420243554`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RemoveDummyAlleles", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveDummyAlleles", "[", 
    RowBox[{"vcfline_List", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{
        "Split2D", ",", "GenotypeReadCounts", ",", "ConvertVariantToVcfLine", 
         ",", "RemoveDummyAlleles"}], "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fake", ",", "variantalleles", ",", "removepositions", ",", "var", ",", 
       "newalleles", ",", "newallelesreduced", ",", "newvcfline", ",", "ac"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringFreeQ", "[", 
         RowBox[{
          RowBox[{"vcfline", "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", "\"\<;DM=\>\"", ",", 
          RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
        RowBox[{"Return", "[", "vcfline", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fake", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringCases", "[", 
           RowBox[{
            RowBox[{"vcfline", "[", 
             RowBox[{"[", "8", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Shortest", "[", 
              RowBox[{"\"\<DM=\>\"", "~~", "yyy__", "~~", 
               RowBox[{"(", 
                RowBox[{"\"\<;\>\"", "|", "EndOfString"}], ")"}]}], "]"}], 
             "\[Rule]", "yyy"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "If", " ", "the", " ", "only", " ", "dummy", " ", "allele", " ", "is", 
        " ", "the", " ", "reference", " ", "one", " ", "then", " ", "leave", 
        " ", "it", " ", "as", " ", "it", " ", "is"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"fake", "===", 
         RowBox[{"{", 
          RowBox[{"vcfline", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "}"}]}], ",", 
        RowBox[{"Return", "[", "vcfline", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"variantalleles", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"vcfline", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", "\"\<,\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"removepositions", "=", 
       RowBox[{
        RowBox[{"IntersectionPositionsSimple", "[", 
         RowBox[{"variantalleles", ",", "fake"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newalleles", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{"variantalleles", ",", 
           RowBox[{"List", "/@", "removepositions"}]}], "]"}], ",", 
         RowBox[{"vcfline", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newallelesreduced", "=", 
       RowBox[{"ReduceVariants", "[", "newalleles", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ac", "=", 
       RowBox[{"AlleleCounts", "[", 
        RowBox[{"vcfline", "[", 
         RowBox[{"[", 
          RowBox[{"10", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Exclude", " ", "the", " ", "dummy", " ", "alleles", " ", "from", " ", 
        "the", " ", "variant"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vcfline", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"vcfline", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", 
            RowBox[{"newallelesreduced", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vcfline", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", 
            RowBox[{"StringLength", "[", 
             RowBox[{"newallelesreduced", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "-", "1"}]}], 
          "}"}], ",", 
         RowBox[{"newallelesreduced", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Delete", "[", 
            RowBox[{"#", ",", 
             RowBox[{"List", "/@", 
              RowBox[{"(", 
               RowBox[{"removepositions", "+", "1"}], ")"}]}]}], "]"}], "&"}],
           "/@", "ac"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newvcfline", "=", 
       RowBox[{"ConvertVariantToVcfLine", "[", 
        RowBox[{"var", ",", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "optns", "}"}], ",", 
           RowBox[{"Options", "/@", 
            RowBox[{"{", 
             RowBox[{
             "ConvertVariantToVcfLine", ",", "Split2D", ",", 
              "GenotypeReadCounts"}], "}"}]}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Now", " ", "do", " ", "it", " ", "again"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"RemoveDummyAlleles", "[", 
       RowBox[{"newvcfline", ",", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "optns", "}"}], ",", 
          RowBox[{"Options", "/@", 
           RowBox[{"{", 
            RowBox[{
            "ConvertVariantToVcfLine", ",", "Split2D", ",", 
             "GenotypeReadCounts", ",", "RemoveDummyAlleles"}], "}"}]}]}], 
         "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.6096739894157*^9, 3.609674016759158*^9}, {
   3.60967406386308*^9, 3.609674300094759*^9}, {3.609674391438107*^9, 
   3.60967441818692*^9}, {3.60967446898059*^9, 3.6096744759782343`*^9}, {
   3.609675247315646*^9, 3.609675342918889*^9}, {3.6106176101446247`*^9, 
   3.61061761053659*^9}, {3.62288608474654*^9, 3.622886099818434*^9}, {
   3.624707183563114*^9, 3.6247071853693867`*^9}, {3.624707608240225*^9, 
   3.6247076867630377`*^9}, 3.641731959465626*^9, 3.641733604917379*^9, 
   3.643454385982403*^9, {3.644143411444728*^9, 3.64414351989636*^9}, {
   3.6441435709342833`*^9, 3.6441436077127457`*^9}, {3.67455252804414*^9, 
   3.6745525472835827`*^9}, 3.674552600801879*^9, 3.674552641149002*^9, {
   3.674552694710304*^9, 3.6745527041860075`*^9}, {3.6745595324590874`*^9, 
   3.6745595329931555`*^9}, {3.6745880984569635`*^9, 
   3.6745882121097755`*^9}, {3.6745882507978477`*^9, 
   3.6745882528600516`*^9}, {3.6745884550428295`*^9, 3.674588489880497*^9}, {
   3.6745888893734426`*^9, 3.6745888979518585`*^9}, {3.674588993462835*^9, 
   3.6745890225336905`*^9}, {3.674589504355994*^9, 3.6745895237094297`*^9}, {
   3.6745895738037252`*^9, 3.6745895738349257`*^9}, {3.6745896364880495`*^9, 
   3.6745896601132927`*^9}, 3.6750672136975718`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Read counting functions", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5982552133474607`*^9, 3.5982552340573063`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Function", " ", "that", " ", "checks", " ", "if", " ", "the", " ", 
    "string", " ", "starts", " ", "with", " ", "word", " ", 
    RowBox[{"\"\<Error\>\"", "."}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ErrorCheck", "[", "x_", "]"}], ":=", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"StringQ", "[", "x", "]"}], ",", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"x", ",", "\"\<Error*\>\""}], "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598256117508972*^9, 3.598256166821391*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Design", " ", "the", " ", "right", " ", 
     RowBox[{"primer", ".", " ", 
      RowBox[{"Input", ":", " ", 
       RowBox[{"the", " ", "reference", " ", "sequence"}]}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "primer", " ", "start", " ", "position", " ", "in", " ", 
     "the", " ", "sequence"}], ",", " ", 
    RowBox[{"distancetonextvar", " ", "-", " ", 
     RowBox[{
     "the", " ", "maximal", " ", "number", " ", "of", " ", "bases", " ", 
      "that", " ", "the", " ", "primer", " ", "is", " ", "allowed", " ", "to",
       " ", 
      RowBox[{
      "have", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "The"}], " ",
       "function", " ", "checks", " ", "if", " ", "the", " ", "primer", " ", 
      "sequence", " ", "is", " ", "unique", " ", "in", " ", "the", " ", 
      "neighboring", " ", 
      RowBox[{"reference", ".", "\[IndentingNewLine]", "If"}], " ", "it", " ",
       "is"}]}], ",", " ", 
    RowBox[{
    "then", " ", "the", " ", "primer", " ", "sequence", " ", "is", " ", 
     RowBox[{"returned", ".", " ", "If"}], " ", "it", " ", "is", " ", "not"}],
     ",", " ", 
    RowBox[{
    "then", " ", "another", " ", "base", " ", "is", " ", "added", " ", "on", 
     " ", "the", " ", 
     RowBox[{"right", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "DesignRightPrimer", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RightPrimerLength", "\[Rule]", "2"}], ",", 
       RowBox[{"MaxShiftCheck", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "5"}], "}"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DesignRightPrimer", "[", 
      RowBox[{"reference_String", ",", "startcoordinate_Integer", ",", 
       RowBox[{"distancetonextvar_Integer:", "100"}], ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "pr", ",", "l", ",", "ref", ",", "uniq", ",", "prim", ",", 
         "maxchecks"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"maxchecks", "=", 
         RowBox[{"OptionValue", "[", "MaxShiftCheck", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"ListQ", "[", "maxchecks", "]"}], "]"}], ",", 
          RowBox[{"maxchecks", "=", 
           RowBox[{"maxchecks", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pr", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "RightPrimerLength", "]"}], ",", 
           "distancetonextvar"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"l", "=", 
         RowBox[{"StringLength", "[", "reference", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"uniq", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"prim", "=", "\"\<Error: DesignRightPrimer\>\""}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"prim", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"reference", ",", 
              RowBox[{"{", 
               RowBox[{"startcoordinate", ",", 
                RowBox[{"startcoordinate", "+", "j", "-", "1"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ref", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"reference", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"startcoordinate", "+", 
                   RowBox[{"maxchecks", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "]"}], ",", 
                
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"startcoordinate", "+", "j", "-", "1", "+", 
                   RowBox[{"maxchecks", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"maxchecks", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "j"}], "]"}], "*)"}],
                   ",", "l"}], "]"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringCount", "[", 
               RowBox[{"ref", ",", "prim", ",", 
                RowBox[{"Overlaps", "\[Rule]", "True"}]}], "]"}], "===", 
              "1"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"uniq", "=", "True"}], ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"j", ",", "pr", ",", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"l", "+", "1", "-", "startcoordinate"}], ",", 
              "distancetonextvar"}], "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "prim"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5872074295904427`*^9, 3.587207436974163*^9}, {
   3.587208988029215*^9, 3.5872089951339293`*^9}, {3.587209158413178*^9, 
   3.587209203998666*^9}, {3.587210329477365*^9, 3.5872103965561953`*^9}, {
   3.587210435426133*^9, 3.58721046551423*^9}, {3.587210516685039*^9, 
   3.58721055146555*^9}, {3.5872105859635*^9, 3.587210765083633*^9}, {
   3.587210803725691*^9, 3.587210813299049*^9}, {3.587210845959083*^9, 
   3.5872109133665333`*^9}, {3.587210945874997*^9, 3.587211142486478*^9}, 
   3.587211311405361*^9, {3.587211457347357*^9, 3.587211482597776*^9}, {
   3.587211537246249*^9, 3.5872116261772738`*^9}, 3.5872139688308992`*^9, {
   3.587380080853047*^9, 3.587380398804223*^9}, {3.587380446815968*^9, 
   3.587380460556134*^9}, {3.587380490580464*^9, 3.587380566196698*^9}, {
   3.587380614695459*^9, 3.587380628873114*^9}, {3.587476882330834*^9, 
   3.5874768979168386`*^9}, {3.587476984203597*^9, 3.587477032475922*^9}, {
   3.587477165427763*^9, 3.5874771832328997`*^9}, 3.587477222454485*^9, {
   3.587477282512217*^9, 3.587477358736725*^9}, {3.587477389273923*^9, 
   3.587477404629677*^9}, {3.587477449080019*^9, 3.587477504028981*^9}, {
   3.587477537856207*^9, 3.5874778248256397`*^9}, {3.587477863837676*^9, 
   3.587477896660039*^9}, {3.5874779691606083`*^9, 3.587477969678981*^9}, {
   3.587478090729376*^9, 3.587478103265666*^9}, {3.587478913997284*^9, 
   3.587478933784379*^9}, {3.587479113543936*^9, 3.587479132830118*^9}, {
   3.587479244293642*^9, 3.587479245204713*^9}, {3.587711022613121*^9, 
   3.587711076974943*^9}, {3.587809722252989*^9, 3.587809753294183*^9}, {
   3.587809785418199*^9, 3.5878097997908916`*^9}, {3.587809868956067*^9, 
   3.587809874622184*^9}, {3.587887665391049*^9, 3.5878877843504*^9}, {
   3.587887817789938*^9, 3.587887850234823*^9}, {3.587887992178689*^9, 
   3.587888002711176*^9}, {3.58788816120756*^9, 3.587888175886392*^9}, {
   3.587888670131579*^9, 3.5878886705795403`*^9}, {3.58788896920535*^9, 
   3.587888969474881*^9}, {3.587889230930296*^9, 3.587889231141852*^9}, {
   3.588059607521929*^9, 3.5880596706483803`*^9}, {3.5880597024334087`*^9, 
   3.588059881850226*^9}, {3.5880599149606524`*^9, 3.5880599243596687`*^9}, {
   3.5880600230981283`*^9, 3.588060033144418*^9}, {3.5880611394832363`*^9, 
   3.588061141636569*^9}, {3.588061904403427*^9, 3.588061952926619*^9}, {
   3.588062082917803*^9, 3.5880620864506197`*^9}, {3.5883297113934937`*^9, 
   3.588329711484769*^9}, 3.588584014541584*^9, {3.588585216202257*^9, 
   3.5885852349212837`*^9}, {3.5982554382723*^9, 3.5982554656388903`*^9}, {
   3.598255553385203*^9, 3.598255558078665*^9}, {3.598255635977065*^9, 
   3.598255654916915*^9}, {3.598255696110565*^9, 3.598255710028596*^9}, {
   3.5982558697435513`*^9, 3.598255889715899*^9}, {3.59825660278939*^9, 
   3.5982566284861298`*^9}, {3.5982566661935177`*^9, 3.598256691707958*^9}, 
   3.598256975887169*^9, {3.598257455023076*^9, 3.598257480049906*^9}, {
   3.598265904245695*^9, 3.598265913178241*^9}, {3.598266346576771*^9, 
   3.598266367035516*^9}, {3.5982666918642273`*^9, 3.5982668871353083`*^9}, {
   3.598267091649618*^9, 3.598267119386669*^9}, {3.598344114394581*^9, 
   3.59834425686942*^9}, {3.598344309054899*^9, 3.598344378729651*^9}, {
   3.5987917211500797`*^9, 3.598791721672768*^9}, {3.5987929414103117`*^9, 
   3.5987929428988733`*^9}, {3.598792974137039*^9, 3.598793002067882*^9}, {
   3.598793262713122*^9, 3.598793398441971*^9}, 3.598800518956353*^9, {
   3.599906732349698*^9, 3.599906744391624*^9}, {3.601626620721843*^9, 
   3.60162662089609*^9}, {3.601987400194559*^9, 3.6019874040221033`*^9}, {
   3.607928825202848*^9, 3.60792882947824*^9}, {3.607928929193293*^9, 
   3.607928938742673*^9}, {3.6079291356729794`*^9, 3.607929142961381*^9}, {
   3.67549664166029*^9, 3.6754966430503693`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Design", " ", "the", " ", "left", " ", 
     RowBox[{"primer", ".", " ", 
      RowBox[{"Input", ":", " ", 
       RowBox[{"the", " ", "reference", " ", "sequence"}]}]}]}], ",", " ", 
    RowBox[{
    "the", " ", "primer", " ", "start", " ", "position", " ", "in", " ", 
     "the", " ", "sequence"}], ",", " ", 
    RowBox[{"variants", " ", "-", " ", 
     RowBox[{
     "a", " ", "set", " ", "of", " ", "regions", " ", "in", " ", "the", " ", 
      "sequence", " ", "on", " ", "the", " ", "left", " ", "from", " ", "the",
       " ", "startcoordinate", " ", "where", " ", "variation", 
      "\[IndentingNewLine]", "is", " ", 
      RowBox[{"present", ".", " ", "The"}], " ", "format", " ", "of", " ", 
      "each", " ", "element", " ", "in", " ", "variants", " ", "is", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"seq1", ",", "seq2", ",", "seq3"}], "}"}]}], "}"}]}]}], ",", 
    " ", 
    RowBox[{"where", " ", "p1"}], ",", 
    RowBox[{
    "p2", " ", "are", " ", "the", " ", "positions", " ", "in", " ", "the", 
     " ", "sequence"}], ",", " ", "seq1", ",", "seq2", ",", 
    RowBox[{"seq3", " ", "are", " ", "the", " ", "variant", " ", 
     RowBox[{"sequences", ".", "\[IndentingNewLine]", 
      StyleBox["p1",
       FontVariations->{"Underline"->True}]}]}], 
    StyleBox[",",
     FontVariations->{"Underline"->True}], 
    StyleBox[
     RowBox[{"p2", ">", 
      RowBox[{"0", " ", "and", " ", "p1"}]}],
     FontVariations->{"Underline"->True}], 
    StyleBox[",",
     FontVariations->{"Underline"->True}], 
    StyleBox[
     RowBox[{"p2", "<=", "startcoordinate"}],
     FontVariations->{"Underline"->True}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "DesignLeftPrimer", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LeftPrimerLength", "\[Rule]", "2"}], ",", 
       RowBox[{"MaxShiftCheck", "\[Rule]", "5"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DesignLeftPrimer", "[", 
     RowBox[{"reference_String", ",", "startcoordinate_Integer", ",", 
      RowBox[{"variants_List:", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"OptionsPattern", "[", "DesignLeftPrimer", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "maxcheck", ",", "leftreference", ",", "startpr", ",", "pr", ",", 
        "varseq", ",", "fullseq", ",", "checkseq", ",", "primers", ",", 
        "uniq", ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"maxcheck", "=", 
        RowBox[{"OptionValue", "[", "MaxShiftCheck", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"leftreference", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"reference", ",", "startcoordinate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"variants", "===", 
          RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fullseq", "=", 
            RowBox[{"{", "leftreference", "}"}]}], ";"}], 
          "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"varseq", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Outer", "[", 
               RowBox[{"List", ",", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"variants", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "variants", "]"}], "-", "1"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fullseq", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplacePart", "[", 
               RowBox[{"leftreference", ",", "#", ",", 
                RowBox[{"variants", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
              "varseq"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"l", "=", 
        RowBox[{
         RowBox[{"StringLength", "/@", "fullseq"}], "//", "Min"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"startpr", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "LeftPrimerLength", "]"}], ",", "l"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"uniq", "=", "False"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"primers", "=", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"fullseq", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "pr"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", 
            "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"checkseq", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"2", "pr"}], ",", 
                    RowBox[{"pr", "+", "maxcheck"}]}], "]"}], ",", 
                    RowBox[{"StringLength", "[", "#", "]"}]}], "]"}]}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "]"}], "&"}], "/@", 
            "fullseq"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"StringCount", "[", 
               RowBox[{"checkseq", ",", "primers", ",", 
                RowBox[{"Overlaps", "\[Rule]", "True"}]}], "]"}], "]"}], "===",
              "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"uniq", "=", "True"}], ";", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"pr", ",", "startpr", ",", "l"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "primers"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598956556563108*^9, 3.59895656532728*^9}, {
   3.598956624243318*^9, 3.598956680970068*^9}, {3.598956719049478*^9, 
   3.5989568501669207`*^9}, {3.598957748999731*^9, 3.598957762673464*^9}, {
   3.598957823636878*^9, 3.5989578447150097`*^9}, {3.598957911704975*^9, 
   3.5989579892470837`*^9}, {3.598958073475995*^9, 3.598958116423499*^9}, {
   3.598959231883502*^9, 3.598959358099718*^9}, {3.598959448731772*^9, 
   3.598959448950931*^9}, {3.5989596457787027`*^9, 3.598959676642892*^9}, {
   3.5989597076424837`*^9, 3.598959791448347*^9}, {3.5989605619930153`*^9, 
   3.598960653618162*^9}, {3.598960932093038*^9, 3.5989609404098463`*^9}, 
   3.5989621119337*^9, {3.598962147092637*^9, 3.598962229405835*^9}, {
   3.598962311082343*^9, 3.598962311728187*^9}, {3.59896312055315*^9, 
   3.5989631400335913`*^9}, {3.5989631746817513`*^9, 3.598963215665803*^9}, {
   3.5989632532869577`*^9, 3.598963254364197*^9}, {3.5989636694754677`*^9, 
   3.5989636999774714`*^9}, {3.598963863971222*^9, 3.598963878588311*^9}, {
   3.599209535558169*^9, 3.599209536095434*^9}, {3.599554271767551*^9, 
   3.599554273974429*^9}, 3.599554605274884*^9, {3.601626625649308*^9, 
   3.601626625842094*^9}, {3.601714647180106*^9, 3.601714655297616*^9}, {
   3.6017147639658127`*^9, 3.601714775937726*^9}, {3.601714941893445*^9, 
   3.601714961963992*^9}, {3.601715390818524*^9, 3.601715424302086*^9}, {
   3.601987419926887*^9, 3.6019874235052433`*^9}, {3.6754966542050076`*^9, 
   3.675496656464137*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "PickAlleles", " ", "filters", " ", "\"\<random\>\"", " ", "cases", " ", 
     "in", " ", "the", " ", "allele", " ", "list", " ", "for", " ", "one", 
     " ", 
     RowBox[{"sample", ".", " ", "\[IndentingNewLine]", "It"}], " ", "takes", 
     " ", "a", " ", "\"\<Tally\>\"", " ", "list", " ", "of", " ", "alleles", 
     " ", "in", " ", "the", " ", "form", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"A", ",", "na"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"B", ",", "nb"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"C", ",", "nc"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "calculates", " ", "the", " ", "total", " ", "number", " ", "of", " ", 
      "reads", " ", "N"}], "=", 
     RowBox[{"na", "+", "nb", "+", "nc"}]}], ",", " ", 
    RowBox[{
    "then", " ", "picks", " ", "only", " ", "those", " ", "alleles", " ", 
     "that", " ", "the", " ", "number", " ", "of", " ", "supporting", " ", 
     "reads", " ", "is", " ", "larger", " ", "than", " ", "0.15", 
     RowBox[{"N", ".", "\[IndentingNewLine]", "Then"}], " ", "if", " ", "the",
      " ", "number", " ", "of", " ", "alleles", " ", "is", " ", "larger", " ",
      "than", " ", "2", " ", 
     RowBox[{"(", "ploidy", ")"}], " ", "the", " ", "function", " ", "only", 
     " ", "keeps", " ", "the", " ", "2", " ", "alleles", " ", "with", " ", 
     "the", " ", "largest", " ", "number", " ", "of", " ", "supporting", " ", 
     
     RowBox[{"reads", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "PickAlleles", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FilterThreshold", "\[Rule]", "0.15"}], ",", 
       RowBox[{"Ploidy", "\[Rule]", "2"}], ",", 
       RowBox[{"AlleleMinimalReadNumber", "\[Rule]", "3"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PickAlleles", "[", 
     RowBox[{"x_List", ",", 
      RowBox[{"OptionsPattern", "[", "PickAlleles", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fthr", ",", "thr", ",", "pck", ",", "plo", ",", "mincover"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mincover", "=", 
        RowBox[{"OptionValue", "[", "AlleleMinimalReadNumber", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fthr", "=", 
        RowBox[{"OptionValue", "[", "FilterThreshold", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plo", "=", 
        RowBox[{"OptionValue", "[", "Ploidy", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"thr", "=", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "fthr"}], ",", 
          "mincover"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pck", "=", 
        RowBox[{"Pick", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[GreaterEqual]", "thr"}], 
             ")"}], "&"}], "/@", "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "pck", "]"}], ">", "plo"}], ",", 
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"pck", ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "plo"}], ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "pck"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.600418649675374*^9, 3.6004186518940067`*^9}, {
  3.644140702959049*^9, 3.644140703125544*^9}, {3.644144264555932*^9, 
  3.644144276100623*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ArrangeTallyList", " ", "gives", " ", "the", " ", "allele", " ", 
      "counts", " ", "in", " ", "a", " ", "certain", " ", 
      RowBox[{"order", ".", "\[IndentingNewLine]", "Input"}]}], " ", "-", " ", 
     RowBox[{
     "\"\<Tally\>\"", " ", "list", " ", "of", " ", "alleles", " ", "with", 
      " ", "counts", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"A", ",", "na"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"B", ",", "nb"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"C", ",", "nc"}], "}"}]}], "}"}]}]}], ",", " ", 
    RowBox[{
    "and", " ", "a", " ", "list", " ", "of", " ", "alleles", " ", "in", " ", 
     "the", " ", "required", " ", "order", " ", 
     RowBox[{"e", ".", "g", ".", " ", 
      RowBox[{"{", 
       RowBox[{"B", ",", "D", ",", "A", ",", "C"}], "}"}], ".", 
      "\[IndentingNewLine]", "The"}], " ", "function", " ", "will", " ", 
     "output", " ", 
     RowBox[{"{", 
      RowBox[{"nb", ",", "0", ",", "na", ",", "nc"}], "}"}], " ", "in", " ", 
     "this", " ", 
     RowBox[{"case", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ArrangeTallyList", "[", 
    RowBox[{"x_List", ",", "varlist_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "_", "]"}], ":=", "0"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "=", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", "x"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "/@", "varlist"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CountReadCases", " ", "designs", " ", "primers"}], ",", " ", 
    RowBox[{
     RowBox[{
     "finds", " ", "variant", " ", "alleles", " ", "and", " ", "counts", " ", 
      "the", " ", "number", " ", "of", " ", "reads", " ", "suppoting", " ", 
      "each", " ", "allele", " ", "in", " ", "every", " ", 
      RowBox[{"sample", ".", "\[IndentingNewLine]", 
       RowBox[{"coordinatesandbasecounts", ":", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"chr", ",", 
            RowBox[{"var", " ", "start"}], ",", "end"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"var", " ", "min", " ", "and", " ", "max", " ", "length"}],
            "}"}]}], "}"}], ":", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "131634896", ",", "131634900"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "6"}], "}"}]}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sequences", ":", " ", 
      RowBox[{"list", " ", "of", " ", "reads", " ", "by", " ", "sample"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"leftvariants", ":", " ", 
      RowBox[{
      "a", " ", "list", " ", "of", " ", "variants", " ", "on", " ", "the", 
       " ", "left"}], ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"var1", " ", "start"}], ",", "end"}], "}"}], ",", 
          RowBox[{"{", "alleles1", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"var2", " ", "start"}], ",", "end"}], "}"}], ",", 
          RowBox[{"{", "alleles2", "}"}]}], "}"}], ",", "..."}], "}"}], ":", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"131634890", ",", "131634893"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<CAAT\>\"", ",", "\"\<CAT\>\"", ",", "\"\<CAAAT\>\""}], 
          "}"}]}], "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rightvariantfirstcoord", ":", " ", 
      RowBox[{
      "the", " ", "coordinate", " ", "of", " ", "the", " ", "next", " ", 
       "variant", " ", "on", " ", "the", " ", "right"}], ":", " ", 
      RowBox[{"131634907.", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Output", ":", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "alleles", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"counts", " ", "sample", " ", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"counts", " ", "sample", " ", "2"}], "}"}], ",", 
              "..."}], "}"}]}], "}"}], ".", "\[IndentingNewLine]", "The"}], 
         " ", "first", " ", "allele", " ", "is", " ", "always", " ", "the", 
         " ", "reference", " ", "allele"}]}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "reference", " ", 
     "sequence", " ", "at", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"chr", ",", 
        RowBox[{"var", " ", "start"}], ",", "end"}], "}"}], ".", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "First"}], " ", "the", 
     " ", "primers", " ", "are", " ", "of", " ", "length", " ", "3.", 
     "\[IndentingNewLine]", "If", " ", "the", " ", "number", " ", "of", " ", 
     "cases", " ", "matching", " ", "the", " ", "pattern", " ", "is", " ", 
     "more", " ", "than", " ", "one", " ", "in", " ", "the", " ", "reference",
      "\[IndentingNewLine]", "or", " ", "in", " ", "many", " ", "reads"}], 
    ",", " ", 
    RowBox[{
    "than", " ", "the", " ", "multiple", " ", "cases", " ", "are", " ", 
     "analyzed", " ", "and", " ", "the", " ", "primers", " ", "are", " ", 
     "prolonged", " ", 
     RowBox[{"accordingly", ".", "\[IndentingNewLine]", "If"}], " ", "the", 
     " ", "right", " ", "primer", " ", "has", " ", "to", " ", "be", " ", 
     "extended"}], ",", " ", 
    RowBox[{
    "but", " ", "cannot", " ", "be", " ", "due", " ", "to", " ", "the", " ", 
     "right", " ", "limit"}], ",", " ", 
    RowBox[{"\"\<Right primer cannot be prolonged\>\"", " ", "is", " ", 
     RowBox[{"returned", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "CountReadCases", "]"}], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CountReadCases", "[", 
      RowBox[{
      "coordinatesandbasecounts_List", ",", "sequencescoordinatescigar_List", 
       ",", 
       RowBox[{"leftvariants_List:", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"rightvariantfirstcoord_Integer:", "-", "1"}], ",", 
       RowBox[{"optns", ":", 
        RowBox[{"OptionsPattern", "[", 
         RowBox[{"{", 
          RowBox[{"CountReadCases", ",", "GetSequenceFromGenomeFasta"}], 
          "}"}], "]"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "readlength", ",", "chrcoord", ",", "basecounts", ",", "maxshifts", 
         ",", "reference", ",", "MakeLocalCoord", ",", "localstart", ",", 
         "leftvariantslocal", ",", "basesavailableontheright", ",", 
         "rightprimerinput", ",", "leftprimerinput", ",", "rightprimer", ",", 
         "leftprimer", ",", "primerpattern", ",", "ctch", ",", "refcases", 
         ",", "seqcasestally", ",", "alleles", ",", "multiplecases", ",", 
         "primerlengths", ",", "newprimers", ",", "allelesreffirst", ",", 
         "counts", ",", "error", ",", " ", "flank", ",", "iter", ",", 
         "needtoextendprimers", ",", "sequences", ",", "shortreference", ",", 
         "newrefcoord", ",", "newrefcoordlocal"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"readlength", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringLength", "/@", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"DeleteCases", "[", 
               RowBox[{"sequencescoordinatescigar", ",", 
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", "1", "}"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], "]"}]}], "//",
            "Max"}], ")"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"chrcoord", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"coordinatesandbasecounts", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], "//", "Flatten"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"basecounts", "=", 
         RowBox[{"coordinatesandbasecounts", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"chrcoord", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "-", 
              RowBox[{"chrcoord", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}]}], ">", 
           "readlength"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"\"\<The region \>\"", "<>", 
            RowBox[{"MakeCoordinateString", "[", "chrcoord", "]"}], "<>", 
            "\"\< is too long!\>\""}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"maxshifts", "=", 
         RowBox[{"(", 
          RowBox[{"basecounts", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"chrcoord", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", 
             RowBox[{"chrcoord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}]}], ")"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"flank", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"10", ",", 
           RowBox[{"maxshifts", "+", "5"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"reference", "=", 
         RowBox[{"GetSequenceFromGenomeFasta", "[", 
          RowBox[{
           RowBox[{"chrcoord", "+", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "readlength"}], ",", "readlength"}], "}"}]}], ",", 
           
           RowBox[{"(*", 
            RowBox[{"BUG", " ", 
             RowBox[{"here", "?"}]}], "*)"}], 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "optns", "}"}], ",", 
             RowBox[{"Options", "[", "GetSequenceFromGenomeFasta", "]"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"localstart", "=", 
         RowBox[{
          RowBox[{"chrcoord", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", "readlength", "-", "1"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MakeLocalCoord", "[", "x_", "]"}], "=", 
         RowBox[{"x", "-", "localstart"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"leftvariantslocal", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MakeLocalCoord", "/@", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "leftvariants"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"rightprimerinput", "=", 
         RowBox[{"{", 
          RowBox[{"reference", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MakeLocalCoord", "[", 
             RowBox[{"chrcoord", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "+", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"MaxShiftCheck", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"maxshifts", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"12", ",", 
                RowBox[{"maxshifts", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"RightPrimerLength", "\[Rule]", "4"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rightprimer", "=", 
         RowBox[{"DesignRightPrimer", "[", 
          RowBox[{"Sequence", "@@", "rightprimerinput"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"leftprimerinput", "=", 
         RowBox[{"{", 
          RowBox[{"reference", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MakeLocalCoord", "[", 
             RowBox[{"chrcoord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Select", "[", 
            RowBox[{"leftvariantslocal", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "0"}], "&"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"MaxShiftCheck", "\[Rule]", 
            RowBox[{"Max", "[", 
             RowBox[{"12", ",", 
              RowBox[{"Abs", "[", 
               RowBox[{"maxshifts", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"LeftPrimerLength", "\[Rule]", "4"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"leftprimer", "=", 
         RowBox[{"DesignLeftPrimer", "[", 
          RowBox[{"Sequence", "@@", "leftprimerinput"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"primerlengths", "=", 
         RowBox[{"(", 
          RowBox[{"StringLength", "/@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"leftprimer", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "rightprimer"}], "}"}]}], 
          ")"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"iter", "=", 
         RowBox[{
          RowBox[{"Max", "[", "primerlengths", "]"}], "+", "20"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sequences", "=", 
         RowBox[{"CutReadSlice", "[", 
          RowBox[{"sequencescoordinatescigar", ",", 
           RowBox[{"chrcoord", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "3"}], "]"}], "]"}], ",", "readlength", ",", 
           RowBox[{"FlankingBases", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"primerlengths", "+", 
              RowBox[{"(", "flank", ")"}]}], ")"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"newrefcoord", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"chrcoord", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"primerlengths", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "flank"}], ",", 
           RowBox[{
            RowBox[{"chrcoord", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", 
            RowBox[{"primerlengths", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "flank"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newrefcoordlocal", "=", 
         RowBox[{"MakeLocalCoord", "/@", "newrefcoord"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"newrefcoordlocal", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
            RowBox[{
             RowBox[{"newrefcoordlocal", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"StringLength", "[", "reference", "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"shortreference", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"reference", ",", "newrefcoordlocal"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"shortreference", "=", 
           RowBox[{"GetSequenceFromGenomeFasta", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"chrcoord", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "newrefcoord"}], "}"}], 
             ",", 
             RowBox[{"FilterRules", "[", 
              RowBox[{"optns", ",", 
               RowBox[{"Options", "[", "GetSequenceFromGenomeFasta", "]"}]}], 
              "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"shortreference", "=", 
           RowBox[{"StringTake", "[", 
            RowBox[{"reference", ",", 
             RowBox[{"MakeLocalCoord", "/@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"chrcoord", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "-", 
                 RowBox[{"primerlengths", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "flank"}], ",", 
                RowBox[{
                 RowBox[{"chrcoord", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "+", 
                 RowBox[{"primerlengths", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "flank"}]}], "}"}]}]}],
             "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"localstart", "=", 
         RowBox[{
          RowBox[{"newrefcoord", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MakeLocalCoord", "[", "x_", "]"}], "=", 
         RowBox[{"x", "-", "localstart"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"leftvariantslocal", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"MakeLocalCoord", "/@", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "leftvariants"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"basesavailableontheright", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rightvariantfirstcoord", "<", "0"}], ",", "100", ",", 
           RowBox[{"rightvariantfirstcoord", "-", 
            RowBox[{"chrcoord", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"rightprimerinput", "=", 
         RowBox[{"{", 
          RowBox[{"shortreference", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MakeLocalCoord", "[", 
             RowBox[{"chrcoord", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "+", "1"}], ",", 
           "\[IndentingNewLine]", "basesavailableontheright", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"MaxShiftCheck", "\[Rule]", "maxshifts"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rightprimer", "=", 
         RowBox[{"DesignRightPrimer", "[", 
          RowBox[{"Sequence", "@@", "rightprimerinput"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"leftprimerinput", "=", 
         RowBox[{"{", 
          RowBox[{"shortreference", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MakeLocalCoord", "[", 
             RowBox[{"chrcoord", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "-", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Select", "[", 
            RowBox[{"leftvariantslocal", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "0"}], "&"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"MaxShiftCheck", "\[Rule]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"basecounts", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"chrcoord", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "-", 
                 RowBox[{"chrcoord", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}]}], ")"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"leftprimer", "=", 
         RowBox[{"DesignLeftPrimer", "[", 
          RowBox[{"Sequence", "@@", "leftprimerinput"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"error", "=", 
         RowBox[{"\"\<Primers cannot be designed after \>\"", "<>", 
          RowBox[{"ToString", "[", "iter", "]"}], "<>", 
          "\"\< iterations\>\""}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ErrorCheck", "[", "rightprimer", "]"}], ",", 
             RowBox[{
              RowBox[{"error", "=", "rightprimer"}], ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"primerpattern", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"StringExpression", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"yyy", ":", 
                   RowBox[{"Repeated", "[", 
                    RowBox[{"LetterCharacter", ",", "basecounts"}], "]"}]}], 
                  ",", "rightprimer"}], "]"}], "\[Rule]", "yyy"}], ")"}], 
              "&"}], "/@", "leftprimer"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<pattern: \>\"", ",", "primerpattern"}], "]"}], 
             ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"ctch", "=", 
            RowBox[{"Catch", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"refcases", "=", 
               RowBox[{"StringCases", "[", 
                RowBox[{"shortreference", ",", "primerpattern", ",", 
                 RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<refcases: \>\"", ",", "refcases"}], "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"refcases", "===", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{
                 RowBox[{"PrintError", "[", 
                  RowBox[{
                  "\"\<CountReadCases:\\nThe reference sequence doesn't have \
the pattern!\\n\>\"", "<>", 
                   RowBox[{"StringJoinWith", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"shortreference", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringJoinWith", "[", 
                    RowBox[{"#", ",", "\"\<,\>\""}], "]"}], "&"}], "/@", 
                    "coordinatesandbasecounts"}], ",", "primerpattern"}], 
                    "}"}], ",", "\"\<\\n\>\""}], "]"}], "<>", 
                   "\"\<\\nABORTING!\>\""}], "]"}], ";", 
                 RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "refcases", "]"}], ">", "1"}], ",", 
                RowBox[{"Throw", "[", 
                 RowBox[{"{", "refcases", "}"}], "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"seqcasestally", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tally", "[", "#", "]"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{"DeleteCases", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringCases", "[", 
                    RowBox[{"#", ",", "primerpattern", ",", 
                    RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], "&"}], "/@",
                     "sequences"}], ",", 
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"alleles", "=", 
               RowBox[{"Union", "@@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"PickAlleles", "/@", "seqcasestally"}], ")"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], 
                 ")"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<alleles: \>\"", ",", "alleles"}], "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"Length", "/@", "alleles"}], "]"}], ">", "1"}], ",", 
                RowBox[{"Throw", "[", "alleles", "]"}], ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"error", "=", "\"\<OK\>\""}], ";", 
                  RowBox[{"Break", "[", "]"}]}], ")"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"primerlengths", "=", 
            RowBox[{"(", 
             RowBox[{"StringLength", "/@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"leftprimer", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "rightprimer"}], 
               "}"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"multiplecases", "=", 
            RowBox[{"(*", 
             RowBox[{"SubSequence", "/@"}], "*)"}], 
            RowBox[{"Select", "[", 
             RowBox[{"ctch", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], ">", "1"}], "&"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"needtoextendprimers", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Or", "@@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"LeftPrimerNeedsExtension", "[", 
                   RowBox[{"leftprimer", ",", "#"}], "]"}], "&"}], "/@", 
                 "multiplecases"}], ")"}]}], ",", 
              RowBox[{"Or", "@@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RightPrimerNeedsExtension", "[", 
                   RowBox[{"rightprimer", ",", "#"}], "]"}], "&"}], "/@", 
                 "multiplecases"}], ")"}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<extend primers?  \>\"", ",", "needtoextendprimers"}], 
              "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "@@", "needtoextendprimers"}], ",", 
             RowBox[{"primerlengths", "+=", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"needtoextendprimers", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"primerlengths", "+=", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"needtoextendprimers", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"primerlengths", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    "basesavailableontheright"}], ",", 
                   RowBox[{"primerlengths", "+=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ",", 
                   RowBox[{
                    RowBox[{
                    "error", "=", 
                    "\"\<Right primer cannot be prolonged\>\""}], ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}]}], 
              ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"newprimers", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DesignLeftPrimer", "[", 
               RowBox[{
                RowBox[{"Sequence", "@@", "leftprimerinput"}], ",", 
                RowBox[{"LeftPrimerLength", "->", 
                 RowBox[{"primerlengths", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
              RowBox[{"DesignRightPrimer", "[", 
               RowBox[{
                RowBox[{"Sequence", "@@", "rightprimerinput"}], ",", 
                RowBox[{"RightPrimerLength", "->", 
                 RowBox[{"primerlengths", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"newprimers", "===", 
              RowBox[{"{", 
               RowBox[{"leftprimer", ",", "rightprimer"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"error", "=", "\"\<New primers identical to old\>\""}], 
              ";", 
              RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"leftprimer", ",", "rightprimer"}], "}"}], "=", 
            "newprimers"}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", "iter", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"(*", 
          RowBox[{"!", 
           RowBox[{"ListQ", "[", "alleles", "]"}]}], "*)"}], 
         RowBox[{
          RowBox[{"error", "=!=", "\"\<OK\>\""}], ",", 
          RowBox[{"Return", "[", "error", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"allelesreffirst", "=", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{"alleles", ",", "refcases"}], "]"}], ",", "refcases"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"counts", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrangeTallyList", "[", 
            RowBox[{"#", ",", "allelesreffirst"}], "]"}], "&"}], "/@", 
          "seqcasestally"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Join", "@@", "allelesreffirst"}], ",", "counts"}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.599484108425064*^9, 3.599484123904585*^9}, {
   3.599484202572294*^9, 3.5994842754884253`*^9}, {3.599484327528804*^9, 
   3.599484332171323*^9}, {3.5994843651153383`*^9, 3.599484389179882*^9}, {
   3.599484427157332*^9, 3.599484429197123*^9}, {3.5994844681299458`*^9, 
   3.599484476096569*^9}, 3.599484530328978*^9, {3.59948456521974*^9, 
   3.5994845670852413`*^9}, {3.599484612181567*^9, 3.599484634896751*^9}, {
   3.599484678279892*^9, 3.5994846844126883`*^9}, 3.59948473540318*^9, {
   3.599484841530921*^9, 3.599484964013219*^9}, {3.599485019133535*^9, 
   3.5994850223552933`*^9}, {3.599485086581073*^9, 3.599485091693885*^9}, {
   3.599485145838323*^9, 3.599485204488605*^9}, {3.599486782511898*^9, 
   3.599486817755365*^9}, {3.599486862818206*^9, 3.599486882452466*^9}, {
   3.5994869322352*^9, 3.5994869388225718`*^9}, {3.599486996771935*^9, 
   3.599487085177267*^9}, {3.599487182158227*^9, 3.599487332354401*^9}, {
   3.599487364318565*^9, 3.599487400747377*^9}, {3.5994876871528482`*^9, 
   3.599487688783457*^9}, {3.5994877770112467`*^9, 3.5994877980622807`*^9}, {
   3.599488118016738*^9, 3.5994881202448874`*^9}, {3.599488161171246*^9, 
   3.599488246373086*^9}, {3.599488299453952*^9, 3.599488332811616*^9}, {
   3.599488400450924*^9, 3.5994884351834803`*^9}, {3.5994885043829813`*^9, 
   3.599488515975665*^9}, {3.59948854762442*^9, 3.599488650227414*^9}, {
   3.5994887169462*^9, 3.599488745030202*^9}, {3.599488918900058*^9, 
   3.599488941179854*^9}, {3.5994889950149517`*^9, 3.5994890121782207`*^9}, {
   3.599489061962173*^9, 3.599489106657856*^9}, {3.5994891408384132`*^9, 
   3.599489155139875*^9}, {3.599489825467085*^9, 3.599489924118905*^9}, {
   3.599490961539016*^9, 3.5994910154171543`*^9}, {3.599491189061878*^9, 
   3.5994912260817213`*^9}, {3.599491350811122*^9, 3.599491398525958*^9}, {
   3.5994915114448566`*^9, 3.5994915128487253`*^9}, {3.5994919754472933`*^9, 
   3.5994919891911497`*^9}, {3.599492029408308*^9, 3.599492373741078*^9}, {
   3.599492416199164*^9, 3.5994924324106083`*^9}, {3.599492484233055*^9, 
   3.599492564325712*^9}, {3.599566010183515*^9, 3.599566079123774*^9}, {
   3.599566628406005*^9, 3.59956663173652*^9}, 3.599566671954714*^9, {
   3.599566882500217*^9, 3.599566882779804*^9}, {3.5995669207343817`*^9, 
   3.599566990747081*^9}, {3.599567075763527*^9, 3.5995673077728786`*^9}, {
   3.599567403532501*^9, 3.5995674377157183`*^9}, {3.59956750692127*^9, 
   3.599567507370791*^9}, {3.5995675728471527`*^9, 3.599567576462655*^9}, {
   3.599809805833765*^9, 3.5998098194241877`*^9}, {3.599809885496993*^9, 
   3.599809903870598*^9}, {3.5998099515478*^9, 3.599809969370247*^9}, {
   3.599813109385*^9, 3.5998131132826366`*^9}, {3.5998132430897923`*^9, 
   3.599813273494555*^9}, {3.59981354056982*^9, 3.599813629624638*^9}, 
   3.5998136711243267`*^9, {3.599813971869481*^9, 3.5998140200848303`*^9}, 
   3.599814200014937*^9, 3.599814778438219*^9, {3.5998154986604633`*^9, 
   3.5998155504069138`*^9}, {3.599815661116591*^9, 3.599815737357349*^9}, {
   3.599815790321218*^9, 3.599815819328377*^9}, {3.599815852247795*^9, 
   3.599815882494479*^9}, 3.599816651468597*^9, 3.599816721138212*^9, {
   3.599898690905717*^9, 3.5998986923603783`*^9}, {3.599898729858089*^9, 
   3.5998988208240433`*^9}, {3.599899577674831*^9, 3.599899687110709*^9}, {
   3.599899728254896*^9, 3.599899797534523*^9}, {3.599899880350939*^9, 
   3.599899893853551*^9}, {3.599899944382165*^9, 3.599900209617679*^9}, {
   3.599900240509738*^9, 3.599900501677678*^9}, {3.599900543130187*^9, 
   3.59990057705643*^9}, {3.5999006453065357`*^9, 3.599900646204486*^9}, {
   3.599900703318823*^9, 3.5999009145856256`*^9}, 3.5999012895611477`*^9, 
   3.599914108316512*^9, {3.5999145588514843`*^9, 3.5999145600978413`*^9}, {
   3.599917713719679*^9, 3.599917748388503*^9}, 3.600169345404057*^9, 
   3.600169432038908*^9, {3.600419124970252*^9, 3.60041914287123*^9}, 
   3.60042389138557*^9, {3.601036871539765*^9, 3.601037041104601*^9}, {
   3.60103708639178*^9, 3.601037147277668*^9}, {3.6010371782833776`*^9, 
   3.6010371786126738`*^9}, {3.601043394229047*^9, 3.601043395258318*^9}, 
   3.6010436816988688`*^9, {3.6010438597538567`*^9, 3.601043863183323*^9}, {
   3.6012064333941393`*^9, 3.601206464935924*^9}, {3.6012903965033407`*^9, 
   3.601290396554545*^9}, {3.6014072135868483`*^9, 3.601407259320197*^9}, {
   3.601407314597459*^9, 3.601407345423071*^9}, {3.6014073787655363`*^9, 
   3.6014073850537577`*^9}, {3.60140753065385*^9, 3.601407705220191*^9}, {
   3.60140874923249*^9, 3.601408754474543*^9}, {3.6014090076348753`*^9, 
   3.601409019995384*^9}, {3.601624154847312*^9, 3.601624198294735*^9}, {
   3.601624230893313*^9, 3.6016242466198273`*^9}, {3.601624439602347*^9, 
   3.601624548981024*^9}, {3.601624725043388*^9, 3.601624733255177*^9}, {
   3.601629357787376*^9, 3.6016294394018087`*^9}, 3.601629531627692*^9, {
   3.601630094280809*^9, 3.6016300946019297`*^9}, {3.6016301433469563`*^9, 
   3.601630160928225*^9}, {3.60163046456511*^9, 3.601630467396285*^9}, {
   3.6016389191953983`*^9, 3.601638922120823*^9}, {3.601712594275462*^9, 
   3.601712628958435*^9}, {3.601712672819599*^9, 3.601712770014138*^9}, {
   3.601712808927374*^9, 3.601712831931501*^9}, {3.6017128830705*^9, 
   3.601712902385827*^9}, {3.6017129332921343`*^9, 3.6017129397745647`*^9}, {
   3.6017130006149607`*^9, 3.6017130058001337`*^9}, {3.601713036323616*^9, 
   3.60171307394547*^9}, {3.60171311042584*^9, 3.601713113722117*^9}, 
   3.601713150994999*^9, {3.601713695466281*^9, 3.6017138260097103`*^9}, {
   3.601713937895678*^9, 3.601713942957694*^9}, {3.601714126348406*^9, 
   3.601714145561144*^9}, {3.601714234114152*^9, 3.601714238835362*^9}, {
   3.601714304168075*^9, 3.6017143053156157`*^9}, {3.601714356641568*^9, 
   3.601714358642058*^9}, {3.601714416167335*^9, 3.601714493196731*^9}, {
   3.601714557357476*^9, 3.601714566292643*^9}, {3.601715523170879*^9, 
   3.601715542827113*^9}, {3.60171558271906*^9, 3.6017155871694717`*^9}, {
   3.601716460280538*^9, 3.601716460472232*^9}, {3.601722319030245*^9, 
   3.60172234522068*^9}, {3.601723252005821*^9, 3.601723257370562*^9}, 
   3.601723479450194*^9, {3.601727363076461*^9, 3.60172738970478*^9}, {
   3.601727476064726*^9, 3.601727567487061*^9}, {3.60231661740903*^9, 
   3.602316620199871*^9}, {3.602316755732402*^9, 3.60231681648929*^9}, {
   3.602317384896902*^9, 3.602317388034157*^9}, {3.602317422114172*^9, 
   3.6023174365486183`*^9}, {3.607411178615795*^9, 3.607411186381666*^9}, {
   3.607925607938836*^9, 3.607925608333437*^9}, {3.6079273137468348`*^9, 
   3.607927315895461*^9}, {3.607929205715506*^9, 3.607929227523233*^9}, {
   3.6079295095611963`*^9, 3.607929509649273*^9}, {3.607930292073197*^9, 
   3.607930334954452*^9}, {3.607930441709537*^9, 3.607930442628194*^9}, {
   3.607930476299251*^9, 3.607930514610674*^9}, {3.607930560842758*^9, 
   3.60793057287794*^9}, {3.6079377773794003`*^9, 3.607937815332077*^9}, {
   3.607937851354504*^9, 3.607937857100856*^9}, 3.607937907524947*^9, {
   3.60793814341297*^9, 3.607938145310418*^9}, {3.607938193859785*^9, 
   3.607938212446154*^9}, {3.607938289349223*^9, 3.607938293098228*^9}, {
   3.6079384241306057`*^9, 3.6079385104717617`*^9}, {3.607938668836001*^9, 
   3.6079386844079123`*^9}, {3.607938716787464*^9, 3.607938745275426*^9}, {
   3.60793878177573*^9, 3.607938840216235*^9}, {3.607938951768236*^9, 
   3.607938955393752*^9}, {3.607939445256391*^9, 3.60793945076338*^9}, {
   3.6079395792727947`*^9, 3.607939581940055*^9}, {3.607939735986266*^9, 
   3.607939739359662*^9}, {3.607939895068161*^9, 3.607939903343999*^9}, {
   3.607940005279441*^9, 3.607940010717206*^9}, 3.607940073665811*^9, {
   3.6079401050789423`*^9, 3.607940187298676*^9}, {3.610614763913107*^9, 
   3.610614792923582*^9}, {3.6106967531777973`*^9, 3.610696756510777*^9}, {
   3.610700256543467*^9, 3.610700407623364*^9}, {3.611308124184635*^9, 
   3.611308544268076*^9}, {3.6113093149078712`*^9, 3.6113093172339077`*^9}, {
   3.6113942152716217`*^9, 3.6113942191656218`*^9}, {3.613380867571184*^9, 
   3.613380869739257*^9}, {3.614678121759019*^9, 3.614678126857627*^9}, 
   3.632117431182684*^9, {3.632556891349287*^9, 3.632556952820998*^9}, {
   3.6325570709951477`*^9, 3.632557089716008*^9}, {3.632557479642311*^9, 
   3.632557485883045*^9}, {3.632557645308378*^9, 3.6325576664225693`*^9}, {
   3.63618813498956*^9, 3.636188160376437*^9}, {3.636188216192006*^9, 
   3.6361882203210173`*^9}, {3.6361882814023657`*^9, 3.636188312347748*^9}, {
   3.636188361272551*^9, 3.636188367746366*^9}, {3.636188490353161*^9, 
   3.6361885137072697`*^9}, {3.6361886249650183`*^9, 3.636188629844741*^9}, {
   3.644147874277135*^9, 3.644147895851548*^9}, 3.64414792920056*^9, {
   3.644321866313841*^9, 3.6443218696142*^9}, 3.644565274224598*^9, {
   3.644583204820364*^9, 3.6445832318874407`*^9}, {3.6445853535601473`*^9, 
   3.644585361420911*^9}, {3.6445853967025642`*^9, 3.644585410095591*^9}, 
   3.67549674008992*^9}],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6441478758907337`*^9, 3.6441478794202538`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SubSequence", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "checks", " ", "if", " ", "y", " ",
      "is", " ", "a", " ", "substring", " ", "of", " ", 
     RowBox[{"x", ".", "\[IndentingNewLine]", "Output"}], " ", "can", " ", 
     RowBox[{"be", ":", " ", "\"\<Identical\>\""}]}], ",", "\"\<No\>\"", ",", 
    "\"\<Left\>\"", ",", "\"\<LeftMiddle\>\"", ",", "\"\<LeftMiddleRight\>\"",
     ",", "\"\<LeftRight\>\"", ",", "\"\<MiddleRight\>\"", ",", 
    RowBox[{
     RowBox[{
     "\"\<Right\>\"", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"SubSequence", "[", "x_List", "]"}]}], " ", "checks", " ", "if",
      " ", "the", " ", "longest", " ", "subsequence", " ", "contains", " ", 
     "the", " ", "second", " ", "longest", " ", "as", " ", "a", " ", 
     RowBox[{"substring", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SubSequence", "[", 
      RowBox[{"x_String", ",", "y_String"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ps", ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", "===", "y"}], ",", 
          RowBox[{"Return", "[", "\"\<Identical\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ps", "=", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ps", "===", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", "\"\<No\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l", "=", 
         RowBox[{"StringLength", "[", "x", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"ps", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "_"}], "}"}]}], "]"}], ",", "\"\<Left\>\"", 
           ",", "\"\<\>\""}], "]"}], "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"ps", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"m_", "/;", 
                RowBox[{"m", ">", "1"}]}], ",", 
               RowBox[{"n_", "/;", 
                RowBox[{"n", "<", "l"}]}]}], "}"}]}], "]"}], ",", 
           "\"\<Middle\>\"", ",", "\"\<\>\""}], "]"}], "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"ps", ",", 
             RowBox[{"{", 
              RowBox[{"_", ",", "l"}], "}"}]}], "]"}], ",", "\"\<Right\>\"", 
           ",", "\"\<\>\""}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SubSequence", "[", "x_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "longestpair", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "\[LessEqual]", "1"}], ",", 
          RowBox[{
          "Return", "[", "\"\<Less than 2 strings in the list!\>\"", "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"longestpair", "=", 
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"x", 
            RowBox[{"(*", 
             RowBox[{"DeleteDuplicates", "[", "x", "]"}], "*)"}], ",", 
            RowBox[{
             RowBox[{"StringLength", "[", "#", "]"}], "&"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ";;", 
            RowBox[{"-", "2"}], ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"SubSequence", "@@", "longestpair"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.59947911916208*^9, 3.5994791455783854`*^9}, {
  3.599479188474854*^9, 3.599479246031363*^9}, {3.5994792771107807`*^9, 
  3.599479290064288*^9}, {3.5994794118146887`*^9, 3.599479458815172*^9}, {
  3.5994797468862667`*^9, 3.599479848308799*^9}, {3.599479920284767*^9, 
  3.599480096172271*^9}, {3.599901026964737*^9, 3.599901158540188*^9}, {
  3.599901249597103*^9, 3.599901371775775*^9}, {3.600429823338125*^9, 
  3.6004298297335157`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RightPrimerNeedsExtension", "[", 
   RowBox[{"primer_String", ",", "alleles_List"}], "]"}], ":=", 
  RowBox[{"Or", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ")"}], "&"}], "/@", 
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#1", "<>", "primer"}], "&"}], ")"}], "/@", "alleles"}], 
       ",", "primer"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6006910654078836`*^9, 3.600691160808585*^9}, {
  3.600694808358335*^9, 3.6006948578321257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LeftPrimerNeedsExtension", "[", 
   RowBox[{"primers_List", ",", "alleles_List"}], "]"}], ":=", 
  RowBox[{"Or", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], ">", "1"}], ")"}], "&"}], "/@", 
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"StringJoin", ",", "primers", ",", "alleles"}], "]"}], "//", 
        "Flatten"}], ",", "primers"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6006910654078836`*^9, 3.600691160808585*^9}, {
  3.6006912180815477`*^9, 3.600691218810892*^9}, {3.600693678092218*^9, 
  3.600693683147976*^9}, {3.6006946699964848`*^9, 3.6006946813442802`*^9}, {
  3.600694838156835*^9, 3.600694839428321*^9}, {3.600694915049411*^9, 
  3.600694965897934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "ReduceVariants", " ", "takes", " ", "a", " ", "list", " ", "of", " ", 
    "sequences", " ", "and", " ", "chops", " ", "away", " ", "any", " ", 
    "characters", " ", "at", " ", "the", " ", "end", " ", "and", " ", "at", 
    " ", "the", " ", "beginning", " ", "of", " ", "the", " ", "sequences", 
    " ", "that", " ", "are", " ", "the", " ", "same", " ", "for", " ", "all", 
    " ", 
    RowBox[{"sequences", ".", "\[IndentingNewLine]", "Leaves"}], " ", "at", 
    " ", "least", " ", "one", " ", "character", " ", "in", " ", "any", " ", 
    RowBox[{"sequence", "!"}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReduceVariants", "[", "x_List", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", ",", "left", ",", "right", ",", "l"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", "x"}], ";", "\[IndentingNewLine]", 
       RowBox[{"left", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"right", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"l", "=", 
        RowBox[{
         RowBox[{"StringLength", "[", "x", "]"}], "//", "Min"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{"StringLength", "[", "res", "]"}], "]"}], "<", "2"}], 
            ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"SameQ", "@@", 
              RowBox[{"(", 
               RowBox[{"StringTake", "[", 
                RowBox[{"res", ",", 
                 RowBox[{"-", "1"}]}], "]"}], ")"}]}], "]"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"right", "++"}], ";", 
          RowBox[{"res", "=", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"res", ",", 
             RowBox[{"-", "1"}]}], "]"}]}], ";"}], ",", 
         RowBox[{"{", "l", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{"StringLength", "[", "res", "]"}], "]"}], "<", "2"}], 
            ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"SameQ", "@@", 
              RowBox[{"(", 
               RowBox[{"StringTake", "[", 
                RowBox[{"res", ",", "1"}], "]"}], ")"}]}], "]"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"left", "++"}], ";", 
          RowBox[{"res", "=", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"res", ",", "1"}], "]"}]}]}], ",", 
         RowBox[{"{", "l", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"res", ",", 
         RowBox[{"{", 
          RowBox[{"left", ",", "right"}], "}"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6417336816325827`*^9, 3.641733755287969*^9}, {
  3.6754967625772057`*^9, 3.6754967637192717`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"The", " ", 
     RowBox[{"input", ":", " ", 
      RowBox[{
      "sortedintegerlist", " ", "is", " ", "a", " ", "sorted", " ", "list", 
       " ", "of", " ", "integers"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"repeats", " ", "are", " ", 
      RowBox[{"allowed", ".", "\[IndentingNewLine]", "y"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y1", ",", "y2"}], "}"}], " ", "is", " ", "a", " ", "list", 
       " ", "of", " ", "two", " ", "integer", " ", 
       RowBox[{"numbers", ".", "\[IndentingNewLine]", 
        RowBox[{"Output", ":", " ", 
         RowBox[{"{", 
          RowBox[{"n1", ",", "n2"}], "}"}]}]}]}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
            "n1", " ", "is", " ", "the", " ", "position", " ", "of", " ", 
             "the", " ", "first", " ", "integer", " ", "in", " ", 
             "sortedintegerlist", " ", "which", " ", "is"}], " ", 
            "\[GreaterEqual]", " ", "y1"}], ",", 
           RowBox[{
            RowBox[{
            "n2", " ", "is", " ", "the", " ", "position", " ", "of", " ", 
             "the", " ", "last", " ", "integer", " ", "in", " ", 
             "sortedintegerlist", " ", "which", " ", "is"}], " ", 
            "\[LessEqual]", " ", "y2"}]}], "}"}], ".", "\[IndentingNewLine]", 
         "If"}], " ", "there", " ", "are", " ", "no", " ", "integers", " ", 
        "x", " ", "in", " ", "the", " ", "list", " ", "that", " ", "are", " ",
         "y1"}], "\[LessEqual]", "x", "\[LessEqual]", "y2"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], " ", "with", " ", "n1"}], ">", 
     RowBox[{"n2", " ", "is", " ", 
      RowBox[{"returned", ".", "\[IndentingNewLine]", "Then"}], " ", 
      RowBox[{"sortedintegerlist", "[", 
       RowBox[{"[", 
        RowBox[{"n1", ";;", "n2"}], "]"}], "]"}], " ", "is", " ", "the", " ", 
      "list", " ", "of", " ", "all", " ", "integers", " ", "that", " ", "are",
       " ", "y1"}], "\[LessEqual]", "x", "\[LessEqual]", 
     RowBox[{
      RowBox[{
      "y2", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "BoundaryPositionsSimple"}], " ", "is", " ", "a", " ", "simple", " ", 
      "straightforward", " ", "function", " ", 
      RowBox[{"(", 
       RowBox[{"changed", " ", "on", " ", "2015", "feb19"}], ")"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "BoundaryPositions", " ", "uses", " ", "a", " ", "trick", " ", "to", " ", 
     "make", " ", "it", " ", "run", " ", "faster"}], ",", " ", 
    RowBox[{
    "especially", " ", "when", " ", "y1", " ", "and", " ", "y2", " ", "are", 
     " ", "quite", " ", "close", " ", "to", " ", "each", " ", 
     RowBox[{"other", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"BoundaryPositionsSimple", "[", 
      RowBox[{"sortedintegerlist_List", ",", "y_List"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"Ordering", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"y", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "sortedintegerlist", 
           ",", 
           RowBox[{"{", 
            RowBox[{"y", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "]"}], "]"}], "]"}], 
       "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "-", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BoundaryPositions", "[", 
      RowBox[{"sortedintegerlist_List", ",", "y_List", ",", 
       RowBox[{"step_Integer:", "0"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "l", ",", "indxpos", ",", "indx", ",", "ps", ",", "pos", ",", "st"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"l", "=", 
         RowBox[{"Length", "[", "sortedintegerlist", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"l", "<", "10000"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"BoundaryPositionsSimple", "[", 
            RowBox[{"sortedintegerlist", ",", "y"}], "]"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"sortedintegerlist", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ">", 
             RowBox[{"y", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"sortedintegerlist", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "<", 
             RowBox[{"y", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"st", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"step", "===", "0"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "l", "]"}], "//", "Round"}], ",", "step"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"indxpos", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", 
             RowBox[{"l", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"st", "/", "2"}], "//", "Round"}], ")"}]}], ",", 
             "st"}], "]"}], ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"indx", "=", 
         RowBox[{"sortedintegerlist", "[", 
          RowBox[{"[", "indxpos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"ps", "=", 
         RowBox[{"BoundaryPositionsSimple", "[", 
          RowBox[{"indx", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{"indxpos", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ps", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", "1"}], 
              "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ps", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{"Length", "[", "indx", "]"}]}], "]"}]}], "}"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", "1", "+", 
         RowBox[{"BoundaryPositionsSimple", "[", 
          RowBox[{
           RowBox[{"sortedintegerlist", "[", 
            RowBox[{"[", 
             RowBox[{"Range", "@@", "pos"}], "]"}], "]"}], ",", "y"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.585576389514629*^9, 3.585576519460656*^9}, {
   3.585577278011499*^9, 3.5855773240225487`*^9}, {3.58557736543118*^9, 
   3.58557736710991*^9}, {3.585577996085836*^9, 3.585577998166531*^9}, 
   3.585578139717249*^9, {3.5856546996704197`*^9, 3.585654700306406*^9}, {
   3.5856548183659077`*^9, 3.585654851738524*^9}, 3.58565738503782*^9, {
   3.585658581953369*^9, 3.585658588210923*^9}, {3.585658636744948*^9, 
   3.5856587051775293`*^9}, {3.585658781014146*^9, 3.58565880086427*^9}, {
   3.600086636650999*^9, 3.6000867048190603`*^9}, {3.6000867816927357`*^9, 
   3.60008701294981*^9}, {3.600088509639057*^9, 3.600088690502871*^9}, {
   3.6000890521544523`*^9, 3.6000890777529*^9}, {3.600171430366047*^9, 
   3.600171448271706*^9}, {3.607927832605056*^9, 3.6079278670519857`*^9}, {
   3.607927965506505*^9, 3.607927967942276*^9}, {3.6322268196043673`*^9, 
   3.632226830669071*^9}, {3.633358779252982*^9, 3.633358854662929*^9}, 
   3.6334280623278103`*^9, {3.6369690007034683`*^9, 3.63696900175187*^9}, {
   3.6754967865575776`*^9, 3.6754967871826134`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectSequences", "[", 
    RowBox[{"seqcoord_List", ",", "coords_List", ",", 
     RowBox[{"readlength_Integer:", "100"}]}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"cas", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"Range", "@@", 
         RowBox[{"BoundaryPositions", "[", 
          RowBox[{
           RowBox[{"cas", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", "readlength"}], ",", 
             RowBox[{"coords", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", "1"}], 
       "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cas", ",", "seqcoord"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.600429343519822*^9, 3.6004294365412493`*^9}, {
  3.601290396055688*^9, 3.601290396114046*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountReadCasesTop", "[", 
   RowBox[{"coordinatesandbasecounts_List", ",", "sequences_List", ",", 
    RowBox[{"leftvariants_List:", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"rightvariantfirstcoord_Integer:", "-", "1"}], ",", 
    RowBox[{"optns", ":", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{"CountReadCases", ",", "GetSequenceFromGenomeFasta"}], "}"}], 
      "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "firstcount", ",", "varsreduced", ",", "newcoords", ",", "newbasecounts",
       ",", "secondcount"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"firstcount", "=", 
      RowBox[{"CountReadCases", "[", 
       RowBox[{
       "coordinatesandbasecounts", ",", "sequences", ",", "leftvariants", ",",
         "rightvariantfirstcoord", ",", "optns"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "firstcount", "]"}], ",", 
       RowBox[{"Return", "[", "firstcount", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"firstcount", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "2"}], ",", 
       RowBox[{"Return", "[", "\"\<No variants\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varsreduced", "=", 
      RowBox[{"ReduceVariants", "[", 
       RowBox[{"firstcount", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varsreduced", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "===", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"Prepend", "[", 
         RowBox[{"firstcount", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"coordinatesandbasecounts", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"newcoords", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"coordinatesandbasecounts", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"varsreduced", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"varsreduced", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newbasecounts", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "#", "]"}], ",", 
          RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "@", 
       RowBox[{"(", 
        RowBox[{"StringLength", "/@", 
         RowBox[{"varsreduced", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<=================\\n\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"newcoords", ",", "newbasecounts"}], "}"}], ",", 
         "\"\<\\n=================\>\""}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"secondcount", "=", 
      RowBox[{"CountReadCases", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newcoords", ",", "newbasecounts"}], "}"}], ",", "sequences",
         ",", "leftvariants", ",", "rightvariantfirstcoord", ",", "optns"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "secondcount", "]"}], ",", "secondcount", ",", 
       
       RowBox[{"Prepend", "[", 
        RowBox[{"secondcount", ",", "newcoords"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.599914531460741*^9, 3.599914532428523*^9}, {
   3.599914675018001*^9, 3.599914712809289*^9}, {3.599914744703969*^9, 
   3.599914767289771*^9}, {3.599914863456443*^9, 3.599914864080022*^9}, {
   3.599915758646574*^9, 3.599915916425829*^9}, {3.599916520081321*^9, 
   3.599916541280566*^9}, {3.5999165757843437`*^9, 3.599916772595086*^9}, {
   3.599917014674904*^9, 3.599917016384851*^9}, {3.599917391766371*^9, 
   3.5999174282161016`*^9}, {3.600090621831058*^9, 3.600090692914338*^9}, {
   3.600090964738894*^9, 3.600090965423287*^9}, {3.600414376351554*^9, 
   3.600414432233201*^9}, {3.601625076658947*^9, 3.601625077110271*^9}, {
   3.6016251636718397`*^9, 3.6016251641697407`*^9}, {3.6017975763032007`*^9, 
   3.6017976103913794`*^9}, {3.601987598737275*^9, 3.6019876023772383`*^9}, {
   3.6106146895450077`*^9, 3.6106146934727373`*^9}, {3.632557378585969*^9, 
   3.632557448916095*^9}, 3.641731948357136*^9, 3.641733606077415*^9, 
   3.644585411967098*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{"Join", " ", "two", " ", 
    RowBox[{"(", 
     RowBox[{"or", " ", "more"}], ")"}], " ", "subsequent", " ", "regions", 
    " ", "to", " ", 
    RowBox[{"one", "."}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CombineTwoRegionsWithCounts", "[", "regionsall_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"regions", ",", "rg", ",", "ct"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"regions", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"regionsall", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rg", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"regions", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{"regions", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ct", "=", 
         RowBox[{
          RowBox[{"rg", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"rg", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1", "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"regions", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}], "-", 
             RowBox[{"regions", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "2"}], "]"}], "]"}], "+", 
             RowBox[{"regions", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "1"}], "]"}], "]"}], "-", "1"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "regions", "]"}]}], "}"}]}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"rg", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"ct", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{"ct", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "\[IndentingNewLine]", 
    RowBox[{
    "Joins", " ", "all", " ", "subsequent", " ", "regions", " ", "with", " ", 
     "distance", " ", "between", " ", "them", " ", "less", " ", "or", " ", 
     "equal", " ", "to", " ", 
     RowBox[{
      RowBox[{"OptionValue", "[", "CombineDistance", "]"}], ".", 
      "\[IndentingNewLine]", "Input"}], " ", "is", " ", "in", " ", "a", " ", 
     "form", " ", "of", " ", "list", " ", "of", " ", "pairs", " ", "of", " ", 
     
     RowBox[{"numbers", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "CombineRegionsWithCounts", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ApplySort", "\[Rule]", "True"}], ",", 
       RowBox[{"CombineDistance", "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CombineRegionsWithCounts", "[", 
      RowBox[{"regions_List", ",", 
       RowBox[{"OptionsPattern", "[", "CombineRegionsWithCounts", "]"}]}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xxx", ",", "res", ",", "crnt", ",", "xxj", ",", "dist"}], 
        "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"regions", "===", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"xxx", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ApplySort", "]"}], ",", 
           RowBox[{"SortBy", "[", 
            RowBox[{"regions", ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "&"}]}], 
            "]"}], ",", "regions"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dist", "=", 
         RowBox[{"OptionValue", "[", "CombineDistance", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"crnt", "=", 
         RowBox[{"xxx", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xxj", "=", 
            RowBox[{"xxx", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"xxj", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
               RowBox[{"crnt", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[LessEqual]", 
              "dist"}], ",", "\[IndentingNewLine]", 
             RowBox[{"crnt", "=", 
              RowBox[{"CombineTwoRegionsWithCounts", "[", 
               RowBox[{"{", 
                RowBox[{"crnt", ",", "xxj"}], "}"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"res", ",", "crnt"}], "]"}], ";", 
               RowBox[{"crnt", "=", "xxj"}]}], ")"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "2", ",", 
            RowBox[{"Length", "[", "xxx", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"res", ",", "crnt"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.600173070620729*^9, 3.600173099020163*^9}, {
  3.6004170560041943`*^9, 3.6004170942196503`*^9}, {3.600426751112482*^9, 
  3.600426753625929*^9}, {3.6113010861925364`*^9, 3.611301101021513*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindAllelesAndCountReads", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"AnticipatedReadLength", "\[Rule]", "300"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindAllelesAndCountReads", "[", 
    RowBox[{"bamfiles_", ",", "region_List", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{
        "FindAllelesAndCountReads", ",", "ScanForVariantCandidates", ",", 
         "GetReadsFromBamFiles"}], "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "flbam", ",", "chr", ",", "suspectedvariants", ",", "l", ",", 
       "readlength", ",", "actualreadlength", ",", "seqcoord", ",", "res", 
       ",", "reslength", ",", "previousvars", ",", "varj", ",", "seqj", ",", 
       "countsj", ",", "problems", ",", "tm", ",", "logs"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{"bamfiles", ",", "_List", ",", 
        RowBox[{"flbam", "=", "bamfiles"}], ",", "_String", ",", 
        RowBox[{"flbam", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<!ls \>\"", "<>", "bamfiles"}], ",", "String"}], 
          "]"}]}], ",", "_", ",", 
        RowBox[{
        "Return", "[", "\"\<The bam files are ill-defined\>\"", "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"problems", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"chr", "=", 
       RowBox[{"region", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"readlength", "=", 
       RowBox[{"OptionValue", "[", "AnticipatedReadLength", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Scanning finished: \>\"", ","}]}], "*)"}], 
      RowBox[{"suspectedvariants", "=", 
       RowBox[{"CombineRegionsWithCounts", "[", 
        RowBox[{"ScanForVariantCandidates", "[", 
         RowBox[{"flbam", ",", "region", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "optns", "}"}], ",", 
            RowBox[{"Options", "[", "ScanForVariantCandidates", "]"}]}], 
           "]"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"//", "AbsoluteTiming"}], ",", "\"\<\\n\>\"", ",", 
          RowBox[{"suspectedvariants", "//", "Length"}], ",", 
          "\"\< possible variants.\>\""}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"suspectedvariants", "===", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "suspectedvariants", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Label", "[", "\"\<again\>\"", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Preparing sequences:\\t\>\"", ","}]}], "*)"}], 
      RowBox[{"seqcoord", "=", 
       RowBox[{"GetReadsFromBamFiles", "[", 
        RowBox[{"flbam", ",", 
         RowBox[{"{", 
          RowBox[{"chr", ",", 
           RowBox[{"CombineRegions", "[", 
            RowBox[{
             RowBox[{"suspectedvariants", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"CombineDistance", "\[Rule]", 
              RowBox[{"2", "readlength"}]}]}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"suspectedvariants", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"suspectedvariants", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", "2"}], "]"}], "]"}]}], 
           "*)"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "optns", "}"}], ",", 
           RowBox[{"Options", "[", "GetReadsFromBamFiles", "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"//", "AbsoluteTiming"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"actualreadlength", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"StringLength", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"seqcoord", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", 
               RowBox[{"-", "1"}], ";;", "1000"}], ",", "1"}], "]"}], "]"}], 
           "]"}], "]"}], "//", "Max"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"actualreadlength", ">", 
         RowBox[{"1.2", "readlength"}]}], ",", 
        RowBox[{
         RowBox[{"readlength", "=", "actualreadlength"}], ";", 
         RowBox[{"Goto", "[", "\"\<again\>\"", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"logs", "=", 
       RowBox[{"OptionValue", "[", "LogStream", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logs", "=!=", "False"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"logs", ",", 
          RowBox[{"tm", "=", 
           RowBox[{"DateString", "[", "]"}]}], ",", 
          "\"\<\\tStarted evaluation of variant sites.\\n\>\""}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Calculations:\\t\>\"", ","}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"previousvars", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"j", ",", "\"\<\\t\>\"", ",", 
              RowBox[{"suspectedvariants", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"reslength", "=", 
             RowBox[{"Length", "[", "res", "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Catch", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"previousvars", "===", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"varj", "=", 
                 RowBox[{"suspectedvariants", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                RowBox[{"varj", "=", 
                 RowBox[{"CombineTwoRegionsWithCounts", "[", 
                  RowBox[{"{", 
                   RowBox[{"previousvars", ",", 
                    RowBox[{"suspectedvariants", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "]"}]}]}], 
               RowBox[{"(*", 
                RowBox[{";", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<--->\>\"", ",", "j", ",", "\"\<\\t\>\"", ",", "varj"}],
                   "]"}]}], "*)"}], "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Print", "[", 
                RowBox[{"varj", ",", "\"\<\\t\>\"", ","}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"countsj", "=", 
               RowBox[{"CountReadCasesTop", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"chr", ",", 
                    RowBox[{"varj", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"varj", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "seqcoord", 
                 ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"reslength", ">", "5"}], ",", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "5"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "res"}], "]"}]}],
                  ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"j", "===", "l"}], ",", 
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"suspectedvariants", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"j", "+", "1"}], ",", "1", ",", "1"}], "]"}], 
                    "]"}]}], "]"}], ",", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"{", "optns", "}"}], ",", 
                   RowBox[{
                   "Options", "[", "GetSequenceFromGenomeFasta", "]"}]}], 
                  "]"}]}], "]"}]}], ";", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{"//", "AbsoluteTiming"}], "]"}], ";"}], "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"countsj", "===", "\"\<No variants\>\""}], ",", 
                RowBox[{
                 RowBox[{"previousvars", "=", 
                  RowBox[{"{", "}"}]}], ";", 
                 RowBox[{"Throw", "[", "1", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                "countsj", "===", 
                 "\"\<Right primer cannot be prolonged\>\""}], ",", 
                RowBox[{
                 RowBox[{"previousvars", "=", "varj"}], ";", 
                 RowBox[{"Throw", "[", "1", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"StringQ", "[", "countsj", "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"PrintError", "[", 
                   RowBox[{
                   "\"\<Something is wrong!\\n\>\"", ",", "varj", ",", 
                    "\"\<\\n\>\"", ",", "countsj"}], "]"}], ";"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"problems", ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"chr", ",", 
                    RowBox[{"varj", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"varj", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "countsj", 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"reslength", ">", "5"}], ",", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "5"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "res"}], "]"}]}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"j", "===", "l"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"suspectedvariants", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"j", "+", "1"}], ",", "1", ",", "1"}], "]"}], 
                    "]"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"Insert", "[", 
                    RowBox[{"varj", ",", "chr", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "*)"}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"previousvars", "=", 
                  RowBox[{"{", "}"}]}], ";", 
                 RowBox[{"Throw", "[", "1", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<result:\>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"countsj", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", "Bold"}], 
                   "]"}], ",", "\"\<\\n\>\"", ",", 
                  RowBox[{"VariantPlot", "[", "countsj", "]"}]}], "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"res", ",", "countsj"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"previousvars", "=", 
               RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Throw", "[", "0", "]"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Print", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"StringQ", "[", "countsj", "]"}], ",", "countsj", ",", 
               
               RowBox[{"countsj", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
            "*)"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"logs", "=!=", "False"}], ",", 
         RowBox[{"WriteString", "[", 
          RowBox[{"logs", ",", 
           RowBox[{"DateString", "[", "]"}], ",", 
           "\"\<\\tFinished evaluation of variant sites.\\t\>\"", ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"DateDifference", "[", 
                RowBox[{"tm", ",", "\"\<Second\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "1"}], "}"}], ",", 
             RowBox[{"ExponentFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"Null", "&"}], ")"}]}]}], "]"}], ",", 
           "\"\< seconds.\\n\>\""}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "flbam", ",", "chr", ",", "suspectedvariants", ",", "l", ",", 
        "readlength", ",", "actualreadlength", ",", "seqcoord", ",", 
        "reslength", ",", "previousvars", ",", "varj", ",", "seqj", ",", 
        "countsj", ",", "tm", ",", "logs"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"problems", "=!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"PrintError", "[", 
           RowBox[{"\"\<problems:\\n\>\"", ",", "problems"}], "]"}]}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"res", ",", "problems"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60016956242834*^9, 3.600169670774221*^9}, {
   3.600169745407084*^9, 3.600169932477412*^9}, {3.60017012319333*^9, 
   3.6001701393351517`*^9}, {3.600170250938273*^9, 3.600170461692069*^9}, {
   3.60017064101217*^9, 3.600170704414106*^9}, 3.600170764859178*^9, {
   3.600170798337331*^9, 3.600170869958452*^9}, {3.600170914505324*^9, 
   3.600170963567183*^9}, {3.600171008203574*^9, 3.600171098944364*^9}, {
   3.600171167696712*^9, 3.600171236727192*^9}, {3.600171287519796*^9, 
   3.600171360931336*^9}, {3.600171453266995*^9, 3.600171453659458*^9}, {
   3.600171641641225*^9, 3.600171642380898*^9}, {3.600171674658073*^9, 
   3.600171679134894*^9}, {3.600171710180197*^9, 3.6001717513773737`*^9}, {
   3.6001718709469357`*^9, 3.600171879907269*^9}, {3.6001719425263166`*^9, 
   3.600171988169923*^9}, {3.6001720240254993`*^9, 3.6001720369231052`*^9}, 
   3.60017208469141*^9, {3.600172122063979*^9, 3.6001721449843597`*^9}, {
   3.600172319264368*^9, 3.600172333763927*^9}, {3.600172367175892*^9, 
   3.600172428876604*^9}, {3.600172462101659*^9, 3.60017252264054*^9}, {
   3.600172648137106*^9, 3.600172649378758*^9}, {3.600172695868803*^9, 
   3.6001727149040956`*^9}, {3.600172845862926*^9, 3.6001728603641043`*^9}, {
   3.60017315224154*^9, 3.6001732445534573`*^9}, {3.6001732755441847`*^9, 
   3.600173276341792*^9}, {3.600173689201486*^9, 3.60017376229775*^9}, {
   3.600173869010819*^9, 3.600174068348015*^9}, {3.600174168777093*^9, 
   3.600174176614715*^9}, {3.600174334118363*^9, 3.6001743391165123`*^9}, {
   3.6001744138712053`*^9, 3.6001744674172983`*^9}, {3.60017469724784*^9, 
   3.60017470844983*^9}, 3.600413522728546*^9, {3.600414104245523*^9, 
   3.600414142428926*^9}, 3.600414172709567*^9, {3.600414578529313*^9, 
   3.600414588484517*^9}, 3.60041504548184*^9, {3.6004150943392363`*^9, 
   3.600415119981583*^9}, {3.6004171923057537`*^9, 3.6004171963555193`*^9}, {
   3.600429981307311*^9, 3.600429988101663*^9}, {3.600612889362005*^9, 
   3.600612903652595*^9}, {3.6006130182893343`*^9, 3.600613030965846*^9}, {
   3.600613196991136*^9, 3.600613203252762*^9}, {3.600613245111978*^9, 
   3.6006132725631742`*^9}, {3.600613525243973*^9, 3.600613533228529*^9}, 
   3.600615839194129*^9, {3.601036388353868*^9, 3.601036423487582*^9}, {
   3.601044151514307*^9, 3.601044152794118*^9}, {3.601207665742077*^9, 
   3.601207685524891*^9}, {3.601217040688671*^9, 3.6012171360420856`*^9}, {
   3.6012171824091053`*^9, 3.6012172490750427`*^9}, {3.6012180547881727`*^9, 
   3.601218084950267*^9}, {3.601218158161154*^9, 3.60121822398514*^9}, {
   3.6012187143235407`*^9, 3.6012187473020573`*^9}, {3.601290396347533*^9, 
   3.6012903963617353`*^9}, {3.601625346277884*^9, 3.601625372799515*^9}, {
   3.601717454899013*^9, 3.601717489752285*^9}, {3.60172011289354*^9, 
   3.601720126853119*^9}, 3.601987344155924*^9, {3.601987629812858*^9, 
   3.601987658060256*^9}, {3.601987709990402*^9, 3.601987761274086*^9}, {
   3.6019878438091383`*^9, 3.601987860816105*^9}, {3.6019879119631968`*^9, 
   3.601987946101803*^9}, {3.601987980699939*^9, 3.6019879834986467`*^9}, {
   3.607419310479539*^9, 3.607419346672861*^9}, {3.6076733898123207`*^9, 
   3.6076734223831472`*^9}, {3.6076735537080507`*^9, 3.607673602490376*^9}, {
   3.607673986293273*^9, 3.607674016354789*^9}, {3.607679120337384*^9, 
   3.6076791246891336`*^9}, {3.607680405211872*^9, 3.607680412904581*^9}, {
   3.607766163515388*^9, 3.6077662103240757`*^9}, {3.607766464038426*^9, 
   3.6077665308492203`*^9}, {3.6077684092765303`*^9, 3.607768411040608*^9}, {
   3.607865447542904*^9, 3.607865450505968*^9}, {3.607865482308723*^9, 
   3.607865487277317*^9}, {3.607865990682708*^9, 3.607865994332073*^9}, {
   3.607866027862481*^9, 3.607866053687353*^9}, {3.607936715428835*^9, 
   3.607936751224752*^9}, {3.6079369255135403`*^9, 3.607936995878808*^9}, {
   3.607937114239163*^9, 3.6079371483800783`*^9}, {3.607937618315421*^9, 
   3.607937624407563*^9}, {3.61130116432504*^9, 3.6113011975955753`*^9}, {
   3.611303154940074*^9, 3.6113031572004337`*^9}, {3.6322255771296253`*^9, 
   3.6322255787276*^9}, {3.6322269294024*^9, 3.632226942540921*^9}, {
   3.63255714382127*^9, 3.632557188640073*^9}, {3.632557243173704*^9, 
   3.632557283888288*^9}, {3.632557353357769*^9, 3.6325573549329023`*^9}, 
   3.6325579217607527`*^9, {3.6325582405803022`*^9, 3.6325582629581547`*^9}, {
   3.6344615441751137`*^9, 3.634461558956489*^9}, {3.635764570641761*^9, 
   3.6357645813734407`*^9}, 3.636101654939975*^9, {3.636101695157177*^9, 
   3.63610171795894*^9}, {3.636101765896587*^9, 3.636101770104298*^9}, {
   3.636103212980542*^9, 3.636103276480608*^9}, 3.636186530603395*^9, {
   3.636188798064754*^9, 3.6361888225377073`*^9}, {3.636193309861369*^9, 
   3.636193337535466*^9}, {3.636196582798586*^9, 3.636196593133985*^9}, {
   3.6361967654987383`*^9, 3.636196771256344*^9}, {3.636196887217744*^9, 
   3.636196887943804*^9}, {3.636196961233026*^9, 3.6361971557692213`*^9}, {
   3.636197211185804*^9, 3.6361972136845284`*^9}, {3.636197246450961*^9, 
   3.636197253806293*^9}, {3.636197610763523*^9, 3.636197614363521*^9}, {
   3.6361976983354177`*^9, 3.6361977112558203`*^9}, 3.6374075279440117`*^9, {
   3.6374076180098124`*^9, 3.637407643871084*^9}, {3.63740788368848*^9, 
   3.637407893996471*^9}, {3.637407924186676*^9, 3.637408016136867*^9}, {
   3.637408096808229*^9, 3.6374081294325867`*^9}, {3.637408982533478*^9, 
   3.6374089826504307`*^9}, {3.63740904587075*^9, 3.637409056111093*^9}, {
   3.637409134537386*^9, 3.6374091358891497`*^9}, {3.637409188150194*^9, 
   3.637409282518602*^9}, 3.640437679358358*^9, {3.640605608788744*^9, 
   3.6406056265576363`*^9}, {3.642332288272071*^9, 3.642332306018458*^9}, 
   3.642332434551567*^9, {3.64361137776622*^9, 3.643611416203649*^9}, {
   3.6436114820293703`*^9, 3.643611532900107*^9}, {3.643611881750414*^9, 
   3.6436119707354803`*^9}, 3.643613085342514*^9, {3.643630289120098*^9, 
   3.6436303748087683`*^9}, {3.643630489675866*^9, 3.643630501913333*^9}, {
   3.644323050730926*^9, 3.64432307929247*^9}, {3.6445690069862127`*^9, 
   3.6445690073422956`*^9}, 3.644585413801957*^9, {3.675496816457288*^9, 
   3.6754968335812674`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["First scan", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5982552133474607`*^9, 3.5982552340573063`*^9}, {
  3.60009495362247*^9, 3.6000949609105043`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ScanForVariantCandidates", "::", "usage"}], "=", 
   "\"\<ScanForVariantCandidates[bamfiles_, inputregion_, \
FastaFileName->FastaPath<>\\\"human_g1k_v37.fa\\\", MinimalCoverage\[Rule]6, \
VariantThreshold\[Rule]0.2, SamtoolsFlagFilter\[Rule]\\\"0x704\\\", \
MinimalBaseSequencingScore\[Rule]13, MinimalReadMappingScore\[Rule]30, \
SaveCoverage\[Rule]False]\nThe function runs samtools mpileup, loads the \
output as a table, identifies the samples and positions where there is some \
variation, i.e. read number >= MinimalCoverage and number of nonreference \
reads > VariantThreshold times total number of reads for the sample. Produces \
the coordinates of identified variants, the min and max estimates of variant \
base length and the maximal non-reference read ratio.\nInput: bamfiles is a \
list of bam files (one individual per each file) or a string like \\\"*.bam\\\
\" or \\\"D????_duplmarked.bam\\\" that is converted to a list of files using \
unix command 'ls'. \ninputregion specifies the region to scan for variant \
candidates in. It can be in the form of a coordinate string like \
\\\"chr1:10000000-10000300\\\", or coordinate list like \
{chr1,10000000,10000300}, or for multiple regions to be scanned in one go \
like {chr1,{{10000000,10000300},{20000000,20000300}...}}.\nOutput: A list of \
variant candidates, each in the following format: {{2784882,2784886}, {1,5}, \
0.224}, where the first two numbers are the coordinates of the affected site \
on the reference genome, the second two numbers are the estimate for the min \
and max size of the allele sequences, the last number is the maximal ratio of \
nonreference reads per individual. \nOption FastaFileName specifies the fasta \
file with the DNA sequence, must be the same as the one used for read \
alignment.\nOption MinimalCoverage specifies the minimal (among the \
individuals) read coverage for the site to be scanned.\nOption \
VariantThreshold gives the ratio of non-reference reads to total reads that \
at least one individual must exceed for the cite to be taken into account.\n\
Option SamtoolsFlagFilter->\\\"0x704\\\" specifies the filter flags --ff in \
samtools mpileup command. The default filters out all reads for which one of \
the following flags is set:\[IndentingNewLine]0x4 (unmapped), 0x100 (not \
primary), 0x200 (failure), 0x400 (duplicate).\nOption \
MinimalBaseSequencingScore\[Rule]13 specifies the minimal base sequencing \
quality score to be taken into account in mpileup. The default 13 corresponds \
to 10^(-1.3)=0.05 chance that the base was called in a wrong way.\nOption \
MinimalReadMappingScore\[Rule]1 specifies the minimal alignment score for the \
read to be included in mpileup. The score 0 is excluded by default, score 0 \
means that the read maps equally well to more than one location.\nLast \
modification: 8 May 2015.\>\""}], ";", 
  RowBox[{
   RowBox[{"Options", "[", "ScanForVariantCandidates", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FastaFileName", "\[Rule]", "GenomeFastaFile"}], ",", 
     RowBox[{"MinimalCoverage", "\[Rule]", "6"}], ",", 
     RowBox[{"VariantThreshold", "\[Rule]", "0.2"}], ",", 
     RowBox[{"SamtoolsFlagFilter", "\[Rule]", "\"\<0x704\>\""}], ",", 
     RowBox[{"MinimalBaseSequencingScore", "\[Rule]", "13"}], ",", 
     RowBox[{"MinimalReadMappingScore", "\[Rule]", "30"}], ",", 
     RowBox[{"SaveCoverage", "\[Rule]", "False"}], ",", 
     RowBox[{"LogStream", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScanForVariantCandidates", "[", 
    RowBox[{"bamfiles_", ",", "inputregion_", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", "ScanForVariantCandidates", "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cov", ",", "thr", ",", "genomefasta", ",", "cmd", ",", "awkcmd", ",", 
       "flbam", ",", "l", ",", "region", ",", "types", ",", "mpileup", ",", 
       "coverage", ",", "highcovpos", ",", "highcovmpileup", ",", "strcount", 
       ",", "posabovethreshold", ",", "varpos", ",", "deletioninsertioncases",
        ",", "varlength", ",", "sublength", ",", "un", ",", "selectpositions",
        ",", "multiregioncalculation", ",", "regionbedfile", ",", "maxscores",
        ",", "result", ",", "savecoverage", ",", "teecmd", ",", 
       "coveragefile", ",", "logs", ",", "tm"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cov", "=", 
       RowBox[{"OptionValue", "[", "MinimalCoverage", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"thr", "=", 
       RowBox[{"OptionValue", "[", "VariantThreshold", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"genomefasta", "=", " ", 
       RowBox[{"OptionValue", "[", "FastaFileName", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CheckFileExistence", "[", "genomefasta", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"logs", "=", 
       RowBox[{"OptionValue", "[", "LogStream", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logs", "=!=", "False"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"logs", ",", 
          RowBox[{"tm", "=", 
           RowBox[{"DateString", "[", "]"}]}], ",", 
          "\"\<\\tStarted the initial variant scan.\\n\>\""}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "SaveCoverage", "]"}], ",", 
        "\[IndentingNewLine]", "True", ",", 
        RowBox[{
         RowBox[{"savecoverage", "=", "True"}], ";", 
         RowBox[{"coveragefile", "=", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"TidyVarTmpDirectory", ",", "\"\<coverage.txt\>\""}], 
            "}"}], "]"}]}]}], ",", "\[IndentingNewLine]", "False", ",", 
        RowBox[{"savecoverage", "=", "False"}], ",", "\[IndentingNewLine]", 
        "_String", ",", 
        RowBox[{
         RowBox[{"savecoverage", "=", "True"}], ";", 
         RowBox[{"coveragefile", "=", 
          RowBox[{"OptionValue", "[", "SaveCoverage", "]"}]}]}], ",", 
        "\[IndentingNewLine]", "_", ",", 
        RowBox[{
         RowBox[{"PrintError", "[", 
          RowBox[{"\"\<Wrong value of Option SaveCoverage: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"OptionValue", "[", "SaveCoverage", "]"}], "]"}]}], "]"}],
          ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"multiregioncalculation", "=", 
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "inputregion", "]"}], ",", 
         RowBox[{"MatrixQ", "[", 
          RowBox[{"inputregion", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"multiregioncalculation", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"regionbedfile", "=", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"TidyVarTmpDirectory", ",", 
              RowBox[{"\"\<region_temp_\>\"", "<>", 
               RowBox[{"FromCharacterCode", "[", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"97", ",", "122"}], "}"}], ",", "10"}], "]"}], 
                "]"}], "<>", "\"\<.bed\>\""}]}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"regionbedfile", ",", "\[IndentingNewLine]", 
            RowBox[{"StringJoinWith", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"StringJoinWith", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"inputregion", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "}"}], ",", 
                  "\"\<\\t\>\""}], "]"}], "&"}], "/@", 
               RowBox[{"inputregion", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "\"\<\\n\>\""}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Close", "[", "regionbedfile", "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"bamfiles", ",", "_List", ",", 
        RowBox[{"flbam", "=", "bamfiles"}], ",", "_String", ",", 
        RowBox[{"flbam", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<!ls \>\"", "<>", "bamfiles"}], ",", "String"}], 
          "]"}]}], ",", "_", ",", 
        RowBox[{
         RowBox[{
         "PrintError", "[", 
          "\"\<The bam files are ill-defined.\\nAborting!\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Get", " ", "the", " ", "pileup", " ", "using", " ", "samtools", " ", 
        "mpileup"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"flbam", "//", "Length"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inputregion", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "[", "#", "]"}], ",", 
             RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"inputregion", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "The", " ", "awk", " ", "command", " ", "checks", " ", "that", " ", 
        "the", " ", "coverage", " ", "of", " ", "at", " ", "least", " ", 
        "one", " ", "sample", " ", "is", " ", "above", " ", "the", " ", 
        "threshold", " ", "and", " ", "also", " ", "removes", " ", "the", " ",
         "base", " ", "quality", " ", "columns"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"awkcmd", "=", 
       RowBox[{
       "\"\<awk '\>\"", "<>", "\[IndentingNewLine]", 
        "\"\<BEGIN {FS=\\\"\\\\t\\\"; OFS=\\\"\\\\t\\\"} \>\"", "<>", 
        "\[IndentingNewLine]", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\"\<$\>\"", "<>", 
               RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<>=\>\"", "<>", 
               
               RowBox[{"ToString", "[", "cov", "]"}], "<>", "\"\<||\>\""}], 
              ")"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", 
               RowBox[{"Range", "[", "l", "]"}]}]}], ")"}]}], "]"}], ",", 
          RowBox[{"-", "2"}]}], "]"}], "<>", "\"\< {print $1,$2,$3\>\"", "<>", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<,$\>\"", "<>", 
             RowBox[{"ToString", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", 
               RowBox[{"Range", "[", "l", "]"}]}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"3", 
               RowBox[{"Range", "[", "l", "]"}]}]}], ")"}]}], "]"}]}], "]"}], 
        "<>", "\"\< }'\>\""}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"cutcmd", "=", 
         RowBox[{"\"\<cut --complement -f\>\"", "<>", 
          RowBox[{"StringJoinWithCommas", "[", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"3", 
              RowBox[{"Range", "[", "l", "]"}]}]}], ")"}], "]"}], "<>", 
          "\"\< -\>\""}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"savecoverage", ",", 
        RowBox[{"teecmd", "=", 
         RowBox[{"\"\< | tee /dev/fd/3 | cut --complement -f \>\"", "<>", 
          RowBox[{"StringJoinWith", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "l"}], "]"}]}]}], ")"}], ",", "\"\<,\>\""}],
            "]"}], "<>", "\"\< >> \>\"", "<>", "coveragefile", "<>", 
          "\"\< ) 3>&1\>\""}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "sedcmd", "=", "\"\<sed 's/\\\\(\\\\,\\\\|\\\\.\\\\)//g'\>\""}], 
        ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cmd", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<(\>\"", 
           RowBox[{
           "(*", " ", "\"\<samtools mpileup -BQ0 -d 10000 -A -f\>\"", " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"SamtoolsPath", "<>", "\"\<samtools mpileup\>\""}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}], "===", 
             "0"}], ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<--ff\>\"", ",", 
              RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", "\"\<-B -A\>\"", ",",
           "\[IndentingNewLine]", "\"\<-Q\>\"", ",", 
          RowBox[{"OptionValue", "[", "MinimalBaseSequencingScore", "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}], "===",
              "0"}], ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<-q\>\"", ",", 
              RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\"\<-d 1000\>\"", ","}], "*)"}], "\[IndentingNewLine]", 
          "\"\<-f\>\"", " ", ",", "genomefasta", ",", "\[IndentingNewLine]", 
          " ", "\"\<-r\>\"", ",", 
          RowBox[{"(", 
           RowBox[{"region", "//", "MakeCoordinateString"}], ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"multiregioncalculation", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<-l\>\"", ",", "regionbedfile"}], "}"}], ",", 
            "\"\<\>\""}], "]"}], ",", "\[IndentingNewLine]", "flbam", ",", 
          "\[IndentingNewLine]", "\"\<|\>\"", ",", "awkcmd", 
          RowBox[{"(*", "cutcmd", "*)"}], "\[IndentingNewLine]", ",", 
          RowBox[{"If", "[", 
           RowBox[{"savecoverage", ",", "teecmd", ",", "\"\<)\>\""}], "]"}]}],
          "}"}], "//", "StringJoinWith"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"types", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"Word", ",", "Number", ",", "Word", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Number", ",", "Word"}], "}"}], ",", 
            RowBox[{"{", "l", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"RunExternal", "[", 
          RowBox[{"cmd", ",", "String"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"mpileup", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{"cmd", ",", "types", ",", 
         RowBox[{"WordSeparators", "\[Rule]", "\"\<\\t\>\""}], ",", 
         RowBox[{"NullWords", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"mpileup", "//", "Dimensions"}], ")"}], "//", 
          "AbsoluteTiming"}], "//", "Print"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"multiregioncalculation", ",", 
        RowBox[{"DeleteFile", "[", "regionbedfile", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "The", " ", "coverage", " ", "columns", " ", "are", " ", "flattened", 
        " ", "to", " ", "one", " ", "long", " ", "list"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"coverage", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"mpileup", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "1"}], ";;", "2"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"highcovpos", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{"coverage", "-", 
            RowBox[{"(", 
             RowBox[{"cov", "-", "1"}], ")"}]}], "]"}], ",", "1", ",", 
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"highcovmpileup", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Join", "@@", 
          RowBox[{"mpileup", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"5", ";;", 
              RowBox[{"-", "1"}], ";;", "2"}]}], "]"}], "]"}]}], ")"}], "[", 
        RowBox[{"[", "highcovpos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"strcount", "=", 
       RowBox[{"StringCount", "[", 
        RowBox[{"highcovmpileup", ",", "LetterCharacter", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<+\>\"", "~~", 
             RowBox[{"DigitCharacter", ".."}], "~~", 
             RowBox[{"LetterCharacter", ".."}]}], ",", 
            RowBox[{"\"\<-\>\"", "~~", 
             RowBox[{"DigitCharacter", ".."}], "~~", 
             RowBox[{"LetterCharacter", ".."}]}], ",", "LetterCharacter"}], 
           "}"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Not", " ", "really", " ", "right"}], " ", "*)"}], ",", 
         RowBox[{"Overlaps", "\[Rule]", "False"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"posabovethreshold", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"strcount", "//", "N"}], 
             RowBox[{
              RowBox[{"coverage", "[", 
               RowBox[{"[", "highcovpos", "]"}], "]"}], "//", "N"}]], "-", 
            "thr"}], "]"}], ",", "1", ",", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"posabovethreshold", "===", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"posabovethreshold", "=!=", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Looks", " ", "for", " ", "deletions", " ", "and", " ", "insertions",
           " ", "and", " ", "gives", " ", "the", " ", "number", " ", "of", 
          " ", "bases", " ", "that", " ", "may", " ", "have", " ", "been", 
          " ", "deleted", " ", "and", " ", "inserted"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"deletioninsertioncases", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Min", "[", "#", "]"}], ",", "0"}], "]"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", "#", "]"}], ",", "0"}], "]"}]}], 
               "}"}]}], 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Sort", "[", 
                RowBox[{"Append", "[", 
                 RowBox[{"#", ",", "0"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "*)"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Map", "[", 
            RowBox[{"ToExpression", ",", 
             RowBox[{"StringCases", "[", 
              RowBox[{
               RowBox[{"highcovmpileup", "[", 
                RowBox[{"[", "posabovethreshold", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\"\<+\>\"", "|", "\"\<-\>\""}], ")"}], "~~", 
                RowBox[{"DigitCharacter", ".."}]}]}], 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{"yyy", ":", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"\<+\>\"", "|", "\"\<-\>\""}], ")"}], "~~", 
                    RowBox[{"DigitCharacter", ".."}]}], ")"}]}], "~~", 
                 RowBox[{"LetterCharacter", ".."}]}], "\[Rule]", "yyy"}], 
               "*)"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Unflattens", " ", "the", " ", "long", " ", "list"}], ",", 
           " ", 
           RowBox[{"counts", " ", "the", " ", "position"}], ",", " ", 
           RowBox[{
           "length", " ", "and", " ", "possible", " ", "number", " ", "of", 
            " ", "bases", " ", "for", " ", "each", " ", "variant"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "varpos", ",", "varlength", ",", "sublength", ",", "maxscores"}], 
           "}"}], "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"un", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Union", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ")"}]}], ")"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]}], ";", 
                RowBox[{"-", 
                 RowBox[{"un", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
               RowBox[{"un", "-", 
                RowBox[{"un", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}], 
             "&"}], "/@", 
            RowBox[{"GatherBy", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Quotient", "[", 
                   RowBox[{
                    RowBox[{"highcovpos", "[", 
                    RowBox[{"[", "posabovethreshold", "]"}], "]"}], ",", "l", 
                    ",", "1"}], "]"}], "+", "1"}], ",", 
                 "deletioninsertioncases", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"strcount", "[", 
                    RowBox[{"[", "posabovethreshold", "]"}], "]"}], "//", 
                    "N"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"coverage", "[", 
                    RowBox[{"[", 
                    RowBox[{"highcovpos", "[", 
                    RowBox[{"[", "posabovethreshold", "]"}], "]"}], "]"}], 
                    "]"}], "//", "N"}], ")"}]}]}], "}"}], "]"}], ",", 
              "First"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"result", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"mpileup", "[", 
                 RowBox[{"[", 
                  RowBox[{"varpos", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"mpileup", "[", 
                  RowBox[{"[", 
                   RowBox[{"varpos", ",", "2"}], "]"}], "]"}], "+", 
                 "varlength"}]}], "}"}], "]"}], ",", "sublength", ",", 
             "maxscores"}], "}"}], "//", "Transpose"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logs", "=!=", "False"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"logs", ",", 
          RowBox[{"DateString", "[", "]"}], ",", 
          "\"\<\\tFinished the initial variant scan. Found \>\"", ",", 
          RowBox[{"Length", "[", "result", "]"}], ",", 
          "\"\< potential variant locations.\\t\>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"DateDifference", "[", 
               RowBox[{"tm", ",", "\"\<Second\>\""}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "1"}], "}"}], ",", 
            RowBox[{"ExponentFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"Null", "&"}], ")"}]}]}], "]"}], ",", 
          "\"\< seconds.\\n\>\""}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "cov", ",", "thr", ",", "genomefasta", ",", "cmd", ",", "awkcmd", ",", 
        "flbam", ",", "l", ",", "region", ",", "types", ",", "mpileup", ",", 
        "coverage", ",", "highcovpos", ",", "highcovmpileup", ",", "strcount",
         ",", "posabovethreshold", ",", "varpos", ",", 
        "deletioninsertioncases", ",", "varlength", ",", "sublength", ",", 
        "un", ",", "selectpositions", ",", "multiregioncalculation", ",", 
        "regionbedfile", ",", "maxscores", ",", "savecoverage", ",", "teecmd",
         ",", "coveragefile", ",", "logs", ",", "tm"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.586259867946371*^9, 3.5862599301742373`*^9}, {
   3.586260092490796*^9, 3.5862601355216303`*^9}, {3.586260169510846*^9, 
   3.586260170220323*^9}, {3.586260209080709*^9, 3.586260209384048*^9}, {
   3.586260241913164*^9, 3.586260387390892*^9}, {3.5862604443104362`*^9, 
   3.586260518320074*^9}, {3.586260552705954*^9, 3.586260595470293*^9}, {
   3.586260650799951*^9, 3.586260717341589*^9}, {3.586260791463304*^9, 
   3.5862607991179237`*^9}, {3.5862608690739937`*^9, 3.586260911115329*^9}, {
   3.586262060023808*^9, 3.586262094008614*^9}, {3.586262172987187*^9, 
   3.586262245288315*^9}, {3.586262281013772*^9, 3.586262343253696*^9}, {
   3.5862625468744926`*^9, 3.586262547846745*^9}, {3.586262602564295*^9, 
   3.586262655765347*^9}, {3.586262742109387*^9, 3.5862627495424747`*^9}, {
   3.586262787321733*^9, 3.586262847867207*^9}, {3.586263097399124*^9, 
   3.5862630974759073`*^9}, {3.586263427227284*^9, 3.586263487697054*^9}, {
   3.586263559966213*^9, 3.586263597894733*^9}, {3.5862637069025583`*^9, 
   3.586263720631817*^9}, {3.5862651512046223`*^9, 3.58626529725074*^9}, {
   3.586269894464429*^9, 3.58626989755127*^9}, {3.5862700981164427`*^9, 
   3.586270098319116*^9}, {3.5866104305265503`*^9, 3.58661043159065*^9}, {
   3.586695563230844*^9, 3.5866955692769938`*^9}, {3.586695601211006*^9, 
   3.586695624168688*^9}, {3.586695654775106*^9, 3.5866956643050117`*^9}, {
   3.5866957043466177`*^9, 3.586695741533021*^9}, {3.586695852769668*^9, 
   3.586695879033824*^9}, 3.586698607682021*^9, {3.6000949651735563`*^9, 
   3.600095025905301*^9}, {3.600095234874733*^9, 3.600095261793874*^9}, {
   3.600095299071013*^9, 3.600095323373156*^9}, {3.600095506437827*^9, 
   3.600095508428424*^9}, {3.600095551069878*^9, 3.600095645972294*^9}, {
   3.600095678303372*^9, 3.6000959251595373`*^9}, {3.60009598506966*^9, 
   3.6000960623223333`*^9}, {3.600096465934245*^9, 3.600096531162304*^9}, {
   3.600096789207345*^9, 3.600096837776676*^9}, {3.600097150228423*^9, 
   3.600097150751255*^9}, {3.600097465709648*^9, 3.60009747627464*^9}, {
   3.6000975507771807`*^9, 3.6000976237319517`*^9}, {3.600098585049357*^9, 
   3.6000986779450006`*^9}, 3.6001564914979763`*^9, {3.600167149572049*^9, 
   3.60016715470055*^9}, {3.601407004799687*^9, 3.601407017484779*^9}, 
   3.6016264020895157`*^9, {3.6113008782479277`*^9, 3.61130089468978*^9}, {
   3.611301425248461*^9, 3.61130142543884*^9}, {3.613385816595818*^9, 
   3.613385832348544*^9}, {3.613387245710546*^9, 3.613387267948881*^9}, 
   3.6297061477622557`*^9, {3.6297065712527323`*^9, 3.629706573983748*^9}, {
   3.632558083410633*^9, 3.632558134177367*^9}, {3.632558165726223*^9, 
   3.6325581901781597`*^9}, {3.635667143404695*^9, 3.635667157035273*^9}, {
   3.635667244790636*^9, 3.63566724496605*^9}, {3.63567619618731*^9, 
   3.635676203875272*^9}, {3.6356762736499357`*^9, 3.63567636755479*^9}, {
   3.6356764565361967`*^9, 3.635676473800284*^9}, 3.635676504953539*^9, 
   3.635676545755558*^9, {3.635676961053341*^9, 3.635676976438284*^9}, {
   3.635677083473124*^9, 3.635677116360751*^9}, {3.635677159643276*^9, 
   3.635677163789246*^9}, {3.635679021762433*^9, 3.635679094873115*^9}, {
   3.635679146596842*^9, 3.635679155405476*^9}, {3.63567945403199*^9, 
   3.635679461531646*^9}, {3.635683239369269*^9, 3.635683257432292*^9}, {
   3.635683291554171*^9, 3.635683381705771*^9}, {3.6356837160170593`*^9, 
   3.635683725998187*^9}, {3.635683935185902*^9, 3.635683937255328*^9}, {
   3.635692328067072*^9, 3.635692348339541*^9}, 3.635756738257156*^9, {
   3.6357633439295607`*^9, 3.6357634045267363`*^9}, {3.635763442710587*^9, 
   3.635763559352338*^9}, {3.63576387362112*^9, 3.635763874540236*^9}, {
   3.635764638935054*^9, 3.635764643776907*^9}, {3.64345623085569*^9, 
   3.643456239115206*^9}, {3.6434633493966722`*^9, 3.643463354638435*^9}, {
   3.6435398214632397`*^9, 3.6435398411383133`*^9}, {3.6435398940647993`*^9, 
   3.6435399857787733`*^9}, {3.6435400921013327`*^9, 3.643540107566733*^9}, {
   3.643540142014727*^9, 3.643540325837126*^9}, 3.643548389888623*^9, 
   3.643549126799782*^9, {3.643613143401037*^9, 3.6436131619380713`*^9}, {
   3.643613350395492*^9, 3.6436133762224894`*^9}, {3.643630395293028*^9, 
   3.643630399913142*^9}, {3.644316970960588*^9, 3.644317047607304*^9}, 
   3.6445652764712477`*^9, {3.644583244982443*^9, 3.644583348463859*^9}, {
   3.644586634657324*^9, 3.644586635723597*^9}, {3.6445867158901997`*^9, 
   3.644586719072493*^9}, 3.646047036059126*^9, {3.646047776605447*^9, 
   3.64604777663999*^9}, 3.646047852546159*^9, {3.646047986847954*^9, 
   3.646047986927548*^9}, 3.646048025831337*^9, {3.6460512344195023`*^9, 
   3.6460512346277933`*^9}, {3.6483950631625767`*^9, 3.648395078864251*^9}, 
   3.648814502909926*^9, 3.648814625709605*^9, {3.6488860169799137`*^9, 
   3.648886047878427*^9}, {3.648892722055565*^9, 3.64889274890625*^9}, {
   3.648892962935347*^9, 3.648892970328413*^9}, 3.648911141844421*^9, {
   3.648911461326997*^9, 3.648911466796652*^9}, {3.64891160481004*^9, 
   3.648911623276133*^9}, {3.6489117194617233`*^9, 3.64891172037108*^9}, {
   3.668507557038978*^9, 3.6685076025035787`*^9}, {3.675496872837513*^9, 
   3.6754968827830815`*^9}, {3.6754969312078514`*^9, 3.675496932491925*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetReadsFromBamFiles", "::", "usage"}], "=", 
   "\"\<GetReadsFromBamFiles[bamfiles_, region_, \
SamtoolsFlagFilter\[Rule]\\\"0x704\\\", MinimalReadMappingScore\[Rule]30, \
LogStream\[Rule]False]\nThe function runs samtools view for each bam file in \
bamfiles (must be sorted and indexed) and outputs 3 sam format columns: the \
read sequence, the coordinate (no chromosome) and the CIGAR string for each \
read in the specified region.\nInput: bamfiles is a list of bam files (one \
individual per each file) or a string like \\\"*.bam\\\" that is converted to \
a list of files using unix command 'ls'.\ninputregion specifies the region to \
scan for variant candidates in. It can be in the form of a coordinate string \
like \\\"chr1:10000000-10000300\\\", or coordinate list like \
{chr1,10000000,10000300}, or for multiple regions to be scanned in one go \
like {chr1,{{10000000,10000300},{20000000,20000300}...}}.\nOutput: a list of \
matrices, one matrix per bam file. Each matrix has 3 columns: the read \
sequence, the left read coordinate (no chromosome) and the CIGAR string.\n\
Option SamtoolsFlagFilter->\\\"0x704\\\" specifies the filter flags in \
samtools view command. The default filters out all reads for which one of the \
following flags is set:\[IndentingNewLine]0x4 (unmapped), 0x100 (not \
primary), 0x200 (failure), 0x400 (duplicate).\nLast modification: 8 May 2015.\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GetReadsFromBamFiles", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SamtoolsFlagFilter", "\[Rule]", "\"\<0x704\>\""}], ",", 
     RowBox[{"MinimalReadMappingScore", "\[Rule]", "30"}], ",", 
     RowBox[{"LogStream", "\[Rule]", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetReadsFromBamFiles", "[", 
    RowBox[{"bamfiles_", ",", "inputregion_", ",", 
     RowBox[{"OptionsPattern", "[", "GetReadsFromBamFiles", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cmd", ",", "flbam", ",", "types", ",", "region", ",", 
       "multiregioncalculation", ",", "logs", ",", "tm", ",", "result"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{"bamfiles", ",", "_List", ",", 
        RowBox[{"flbam", "=", "bamfiles"}], ",", "_String", ",", 
        RowBox[{"flbam", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<!ls \>\"", "<>", "bamfiles"}], ",", "String"}], 
          "]"}]}], ",", "_", ",", 
        RowBox[{
        "Return", "[", "\"\<The bam files are ill-defined\>\"", "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"logs", "=", 
       RowBox[{"OptionValue", "[", "LogStream", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logs", "=!=", "False"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"logs", ",", 
          RowBox[{"tm", "=", 
           RowBox[{"DateString", "[", "]"}]}], ",", 
          "\"\<\\tStarted to prepare the reads.\\n\>\""}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"multiregioncalculation", "=", 
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"ListQ", "[", "inputregion", "]"}], ",", 
         RowBox[{"MatrixQ", "[", 
          RowBox[{"inputregion", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"If", "[", 
        RowBox[{"multiregioncalculation", ",", "\[IndentingNewLine]", 
         RowBox[{"StringJoinWith", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MakeCoordinateString", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"inputregion", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "}"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"inputregion", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"inputregion", "//", "MakeCoordinateString"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"types", "=", 
       RowBox[{"{", 
        RowBox[{"Word", ",", "Number", ",", "Word"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "\"\<-F 0x704\>\"", " ", "filters", " ", "out", " ", "all", " ", 
           "the", " ", "sequences", " ", "for", " ", "which", " ", "one", " ",
            "of", " ", "the", " ", "following", " ", "flags", " ", "is", " ", 
           
           RowBox[{"set", ":", "\[IndentingNewLine]", 
            RowBox[{"0", "x4", " ", 
             RowBox[{"(", "unmapped", ")"}]}]}]}], ",", 
          RowBox[{"0", "x100", " ", 
           RowBox[{"(", 
            RowBox[{"not", " ", "primary"}], ")"}]}], ",", 
          RowBox[{"0", "x200", " ", 
           RowBox[{"(", "failure", ")"}]}], ",", 
          RowBox[{"0", "x400", " ", 
           RowBox[{"(", "duplicate", ")"}]}]}], "\[IndentingNewLine]", "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"cmd", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"SamtoolsPath", "<>", "\"\<samtools view\>\""}], ",", 
              " ", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}], "===",
                  "0"}], ",", "\"\<\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<-F\>\"", ",", 
                  RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}]}], 
                 "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}],
                  "===", "0"}], ",", "\"\<\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<-q\>\"", ",", 
                  RowBox[{
                  "OptionValue", "[", "MinimalReadMappingScore", "]"}]}], 
                 "}"}]}], "]"}], ",", "\[IndentingNewLine]", "rr", ",", 
              "region", ",", "\[IndentingNewLine]", "\"\<|\>\"", ",", 
              "\"\<awk '{print $10,$4,$6}'\>\""}], "}"}], "//", 
            "StringJoinWith"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"RunExternal", "[", 
           RowBox[{"cmd", ",", "types"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"rr", ",", "flbam"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"logs", "=!=", "False"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"logs", ",", 
          RowBox[{"DateString", "[", "]"}], ",", 
          "\"\<\\tFinished to prepare the reads.\\t\>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              RowBox[{"DateDifference", "[", 
               RowBox[{"tm", ",", "\"\<Second\>\""}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "1"}], "}"}], ",", 
            RowBox[{"ExponentFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"Null", "&"}], ")"}]}]}], "]"}], ",", 
          "\"\< seconds.\\n\>\""}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "cmd", ",", "flbam", ",", "types", ",", "region", ",", 
        "multiregioncalculation", ",", "logs", ",", "tm"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.634459264881137*^9, 3.634459265457531*^9}, {
   3.6344593036641407`*^9, 3.6344593399968767`*^9}, {3.634459967166922*^9, 
   3.6344599938236303`*^9}, {3.6344604094235783`*^9, 
   3.6344604109893436`*^9}, {3.634460441400854*^9, 3.634460448561693*^9}, {
   3.634460498360979*^9, 3.634460518573456*^9}, 3.636106327685615*^9, {
   3.6361111190480757`*^9, 3.636111391434443*^9}, 3.636111584544066*^9, 
   3.636982269849844*^9, {3.636982383301766*^9, 3.6369824004809103`*^9}, {
   3.636982467064601*^9, 3.636982605910261*^9}, {3.636982899313303*^9, 
   3.636983063742304*^9}, {3.636983096592989*^9, 3.6369832294356956`*^9}, {
   3.636983270996388*^9, 3.636983478439872*^9}, 3.637396536237403*^9, {
   3.64008062693681*^9, 3.64008063124632*^9}, {3.640082388017139*^9, 
   3.640082424828401*^9}, {3.640082877394924*^9, 3.6400828911145487`*^9}, {
   3.6400833113596992`*^9, 3.64008331171559*^9}, {3.641906664334317*^9, 
   3.641906667541355*^9}, {3.641906701680188*^9, 3.641906704564439*^9}, {
   3.643551428768121*^9, 3.643551453127973*^9}, {3.6435514981120853`*^9, 
   3.643551539800088*^9}, {3.643551586715012*^9, 3.643551679017758*^9}, {
   3.643551767687372*^9, 3.643551776657796*^9}, {3.6436131967208853`*^9, 
   3.64361321808508*^9}, {3.64361325343324*^9, 3.643613291827135*^9}, {
   3.6436327373961973`*^9, 3.643632749786654*^9}, {3.644565279024506*^9, 
   3.6445652799351187`*^9}, {3.644569007524329*^9, 3.6445690082230864`*^9}, {
   3.644583405659836*^9, 3.6445834201546164`*^9}, {3.645272393007825*^9, 
   3.645272407684985*^9}, {3.648395100161168*^9, 3.648395107930636*^9}, 
   3.648814505011341*^9, 3.648814630239327*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetGenomicSpreadOfRead", "[", "x_String", "]"}], ":=", 
   RowBox[{
    RowBox[{"GetGenomicSpreadOfRead", "[", "x", "]"}], "=", 
    RowBox[{"CigarLength", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CountDeletionsInRead", "[", "cigar_String", "]"}], ":=", 
    RowBox[{
     RowBox[{"CountDeletionsInRead", "[", "cigar", "]"}], "=", 
     RowBox[{"CigarDeletions", "[", "cigar", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CigarLength", "[", "x_String", "]"}], ":=", 
    RowBox[{"Plus", "@@", 
     RowBox[{"(", 
      RowBox[{"FromDigits", "/@", 
       RowBox[{"StringCases", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"md", ":", 
            RowBox[{"DigitCharacter", ".."}]}], "~~", 
           RowBox[{"(", 
            RowBox[{"\"\<M\>\"", "|", "\"\<D\>\""}], ")"}]}], "\[Rule]", 
          "md"}]}], "]"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"CigarLengthBasic", "/@", 
     RowBox[{"StringCases", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"DigitCharacter", ".."}], "~~", "LetterCharacter"}]}], 
      "]"}]}], "//", "Total"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CigarDeletions", "[", "x_String", "]"}], ":=", 
   RowBox[{"Plus", "@@", 
    RowBox[{"FromDigits", "/@", 
     RowBox[{"StringCases", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"dd", ":", 
          RowBox[{"(", 
           RowBox[{"DigitCharacter", ".."}], ")"}]}], "~~", "\"\<D\>\""}], 
        "\[Rule]", "dd"}]}], "]"}]}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.614671886363223*^9, 3.6146718889597483`*^9}, {
  3.614671992607106*^9, 3.614672047054171*^9}, {3.6146721943794107`*^9, 
  3.614672195537446*^9}, {3.644586377790052*^9, 3.6445863832989693`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CutReadSlice", "::", "usage"}], "=", 
   "\"\<CutReadSlice[seqcoordcigar_List, {coord1_Integer,coord2_Integer}, \
initialreadlength_Integer:100, FlankingBases\[Rule]{20,20}]\nThe function \
selects the reads that bridge over the fragment and trims the read sequences \
leaving only the sequence above the fragment and a number of flanking bases.\n\
Input: seqcoordcigar is a list of matrices (one matrix per each sample), the \
matrix has 3 columns: read sequences, the left position of the read alignment \
to the genome, the reads cigar annotation (columns 10, 4, 6 from sam table). \
{coord1, coord2} are the coordinates of the fragment, that we want to cut the \
read slice around it. initialreadlength is the estimation of the max read \
length. (If the estimation is too small it will be corrected.)\nOutput: A \
list (one per sample) of lists of trimmed sequences.\nOption FlankingBases \
gives the number of bases to leave before trimming on the left and on the \
right.\nLast modification: 5 Feb 2015.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CutReadSlice", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"FlankingBases", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"20", ",", "20"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CutReadSlice", "[", 
    RowBox[{"seqcoordcigar_List", ",", 
     RowBox[{"{", 
      RowBox[{"coord1_Integer", ",", "coord2_Integer"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"initialreadlength_Integer:", "100"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l", ",", "flanks", ",", "readlength", ",", "chosenseqcoordcigar", ",", 
       "ends", ",", "psok", ",", "readspread", ",", "seqcoordcigarok", ",", 
       "readspreadok", ",", "del", ",", "leftends", ",", "rightends", ",", 
       "cutstarts", ",", "cutends", ",", "seqlengths", ",", "again", ",", 
       "result"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"flanks", "=", 
       RowBox[{"OptionValue", "[", "FlankingBases", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "seqcoordcigar", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"readlength", "=", "initialreadlength"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Label", "[", "again", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "First", " ", "select", " ", "sequences", " ", "that", " ", "start", 
        " ", "not", " ", "too", " ", "far", " ", "on", " ", "the", " ", 
        "left", " ", "and", " ", "not", " ", "after", " ", "coord1", " ", 
        "to", " ", "be", " ", "able", " ", "to", " ", "bridge", " ", "over", 
        " ", "the", " ", "fragment"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"chosenseqcoordcigar", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", 
           RowBox[{"BoundaryPositions", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"coord1", "-", 
                RowBox[{"Round", "[", 
                 RowBox[{"1.5", "readlength"}], "]"}]}], ",", "coord1"}], 
              "}"}]}], "]"}]}], "]"}], "&"}], "/@", "seqcoordcigar"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Calculate", " ", "from", " ", "cigar", " ", "how", " ", "many", " ", 
        "bases", " ", "in", " ", "the", " ", "genome", " ", "the", " ", 
        "read", " ", 
        RowBox[{
        "spands", ".", "\[IndentingNewLine]", "GetGenomicSpreadOfRead"}], " ",
         "is", " ", "basically", " ", "CigarLength", " ", "but", " ", "it", 
        " ", "remembers", " ", "its", " ", "values"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"readspread", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"GetGenomicSpreadOfRead", ",", 
         RowBox[{"chosenseqcoordcigar", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ends", "=", 
       RowBox[{
        RowBox[{"chosenseqcoordcigar", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}], "+", 
        "readspread"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "The", " ", "right", " ", "position", " ", "of", " ", "the", " ", 
        "read", " ", "must", " ", "fall", " ", "after", " ", "coord2"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"psok", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Sign", "[", 
             RowBox[{"#", "-", "coord2"}], "]"}], ",", "1", ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], "&"}], "/@", 
        "ends"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"seqcoordcigarok", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"chosenseqcoordcigar", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", 
            RowBox[{"psok", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"readspreadok", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"readspread", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", 
            RowBox[{"psok", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"seqlengths", "=", 
       RowBox[{"(", 
        RowBox[{"StringLength", "/@", 
         RowBox[{"seqcoordcigarok", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ")"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "If", " ", "the", " ", "reads", " ", "are", " ", "longer", " ", "than",
         " ", "the", " ", "initial", " ", "istimate", " ", "one", " ", 
        "should", " ", "redo", " ", "the", " ", "previous", " ", "analysis"}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", "seqlengths", "]"}], ">", 
         RowBox[{"1.1", "readlength"}]}], ",", 
        RowBox[{
         RowBox[{"readlength", "=", 
          RowBox[{"Max", "[", "seqlengths", "]"}]}], ";", 
         RowBox[{"Goto", "[", "again", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Number", " ", "of", " ", "deleted", " ", "bases", " ", "should", " ",
          "be", " ", "substracted", " ", "later", " ", "from", " ", "the", 
         " ", "number", " ", "of", " ", "bases", " ", "to", " ", 
         RowBox[{"trim", ".", " ", "CountDeletionsInRead"}], " ", "is", " ", 
         "CigarDeletions"}], ",", " ", 
        RowBox[{"but", " ", "remembers", " ", "its", " ", 
         RowBox[{"values", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"del", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"CountDeletionsInRead", ",", 
         RowBox[{"seqcoordcigarok", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"leftends", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"coord1", "-", 
          RowBox[{"flanks", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ")"}], "-", "del", "-", 
        RowBox[{"seqcoordcigarok", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rightends", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"coord2", "+", 
          RowBox[{"flanks", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}], "+", "del", "-", 
        RowBox[{"seqcoordcigarok", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}], "-", 
        "readspreadok"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cutstarts", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", "#"}], "]"}], "&"}], ",", "leftends", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"cutends", "=", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"0", ",", "#"}], "]"}], "&"}], ",", "rightends", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "+", "seqlengths"}]}], 
      RowBox[{"(*", "readlength", "*)"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"seqcoordcigarok", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"cutstarts", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"cutends", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "l"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "l", ",", "flanks", ",", "readlength", ",", "chosenseqcoordcigar", ",",
         "ends", ",", "psok", ",", "readspread", ",", "seqcoordcigarok", ",", 
        "readspreadok", ",", "del", ",", "leftends", ",", "rightends", ",", 
        "cutstarts", ",", "cutends", ",", "seqlengths", ",", "again"}], "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.60130776948769*^9, 3.601307968046679*^9}, {
   3.60130801315812*^9, 3.6013081869547997`*^9}, {3.601308351753545*^9, 
   3.601308391772952*^9}, {3.601308500685321*^9, 3.601308510983223*^9}, {
   3.601308555042951*^9, 3.601308556839878*^9}, {3.6013086051265173`*^9, 
   3.6013086738484917`*^9}, {3.601308782089549*^9, 3.601308782241466*^9}, 
   3.601401954306415*^9, {3.6014019931449842`*^9, 3.601402070354903*^9}, {
   3.6014021037792463`*^9, 3.601402108396606*^9}, {3.601402227075542*^9, 
   3.601402235807732*^9}, {3.601403693776346*^9, 3.6014036998755074`*^9}, {
   3.601404405427904*^9, 3.601404588445592*^9}, {3.601404619149336*^9, 
   3.60140467636102*^9}, {3.601404710866618*^9, 3.601404728766942*^9}, {
   3.601404773160286*^9, 3.601404915369433*^9}, {3.6014049468661337`*^9, 
   3.601405040095315*^9}, {3.601405096590036*^9, 3.601405147144125*^9}, {
   3.601405182070569*^9, 3.601405283335043*^9}, {3.601405329360832*^9, 
   3.601405405622129*^9}, {3.601405446369355*^9, 3.601405467538766*^9}, 
   3.601405530305142*^9, {3.6014055618772297`*^9, 3.60140558857764*^9}, {
   3.601405645955917*^9, 3.601405651181731*^9}, {3.60140578166894*^9, 
   3.6014058393908854`*^9}, {3.601405905454298*^9, 3.601405938569092*^9}, {
   3.601405976097548*^9, 3.60140598497935*^9}, 3.6014063260705223`*^9, {
   3.601406990097793*^9, 3.6014069919367437`*^9}, 3.60140703773833*^9, {
   3.6017136510031137`*^9, 3.60171367730689*^9}, {3.612597539200902*^9, 
   3.61259770418056*^9}, {3.6146719568164186`*^9, 3.6146719847818117`*^9}, {
   3.614672127871557*^9, 3.614672133408935*^9}, {3.614672203391226*^9, 
   3.6146722052152243`*^9}, {3.631955576857411*^9, 3.63195559284258*^9}, {
   3.631970214591506*^9, 3.631970245614249*^9}, {3.6319704518980494`*^9, 
   3.6319704980111923`*^9}, {3.6320539648347397`*^9, 3.632053967128768*^9}, {
   3.6320540164244957`*^9, 3.632054029461917*^9}, {3.6320541342039433`*^9, 
   3.632054198968978*^9}, {3.6320547067068357`*^9, 3.632054843042033*^9}, {
   3.6320607099096327`*^9, 3.632060759678074*^9}, {3.6320611479519663`*^9, 
   3.6320611688084793`*^9}, 3.632061352052326*^9, 3.632061853142008*^9, {
   3.632062217581456*^9, 3.632062322496223*^9}, {3.63206236365338*^9, 
   3.632062405111825*^9}, {3.632062438279158*^9, 3.632062520140134*^9}, {
   3.632062553229665*^9, 3.632062576271484*^9}, {3.632062629167869*^9, 
   3.63206273624531*^9}, {3.632062919569462*^9, 3.632062926803143*^9}, {
   3.632062960856956*^9, 3.632062963399302*^9}, {3.632063025773589*^9, 
   3.632063027997341*^9}, {3.632063075190845*^9, 3.6320630753951674`*^9}, {
   3.6320633463010283`*^9, 3.63206338537228*^9}, {3.6320634337547197`*^9, 
   3.632063491442593*^9}, {3.6320635459663143`*^9, 3.632063644341322*^9}, {
   3.632115159316493*^9, 3.632115202246255*^9}, {3.632115259245618*^9, 
   3.632115353065668*^9}, {3.63211539292973*^9, 3.632115400827353*^9}, {
   3.632116151111453*^9, 3.632116596839773*^9}, {3.6321166509944973`*^9, 
   3.632116728157826*^9}, {3.632116764698103*^9, 3.632116928102113*^9}, {
   3.6321171911927443`*^9, 3.632117298358539*^9}, {3.6321180379450083`*^9, 
   3.632118038102813*^9}, {3.6321181538317747`*^9, 3.632118238622499*^9}, {
   3.632118272046447*^9, 3.632118584595818*^9}, {3.635679550632977*^9, 
   3.6356795570664377`*^9}, {3.6460472700526667`*^9, 3.646047278599153*^9}, {
   3.675496993519415*^9, 3.675496994519472*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Running", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5982552133474607`*^9, 3.5982552340573063`*^9}, {
  3.60009495362247*^9, 3.6000949609105043`*^9}, {3.64346170526652*^9, 
  3.643461708226696*^9}, {3.646124601140167*^9, 3.6461246029221687`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CallVariants", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<CallVariants[bamfiles_, outputvcffile_String, targets_:\\\"\\\", \
region_:\\\"\\\", FailedLogFileName\[Rule]Automatic, LogFileName->Automatic]\n\
The function calls variants and saves them in a vcf file.\nInput: bamfiles is \
a list of bam files (one individual per each bam file) or a string like \
\\\"*.bam\\\" or \\\"D????_duplmarked.bam\\\" that is converted to a list of \
files using unix command 'ls'.\ntargets is a list of regions in the form \
accepted by ScanForVariantCandidates.\noutputvcffile is the name of the file \
to save the variants in.\n Output: the total number of variants (lines in the \
VCF file) detected.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CallVariants", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"SampleLabels", "\[Rule]", "\"\<FromFileNames\>\""}], "*)"}], 
    RowBox[{
     RowBox[{"FailedLogFileName", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"LogFileName", "->", "Automatic"}], ",", 
     RowBox[{"OptimiseTargets", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CallVariants", "[", 
    RowBox[{"bamfiles_", ",", "outputvcffile_String", ",", 
     RowBox[{"targets0_:", "\"\<\>\""}], ",", 
     RowBox[{"region0_:", "\"\<\>\""}], ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{
        "LoadBedTargets", ",", "FindAllelesAndCountReads", ",", 
         "ScanForVariantCandidates", ",", "GetReadsFromBamFiles", ",", 
         "GetSequenceFromGenomeFasta", ",", "Split2D", ",", "CallVariants", 
         ",", "OptimiseTargets", ",", "OptimiseTargetsChromosome"}], "}"}], 
       "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "flbam", ",", "samples", ",", "header", ",", "stream", ",", "res", ",", 
       "vcflines", ",", "problems", ",", "strng", ",", "problemfile", ",", 
       "problemstream", ",", "varcount", ",", "logfile", ",", "logstream", 
       ",", "coveragefile", ",", "region", ",", "samtoolscheck", ",", "tm", 
       ",", "tm0", ",", "targets", ",", "optimisedtargets", ",", 
       "optnstoreport", ",", "outputvcffilekeepall", ",", "keepallstream", 
       ",", "vcflinesnofake", ",", "vcflinesnofakepass", ",", "vcfmeta"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"optnstoreport", "=", 
       RowBox[{"{", 
        RowBox[{
        "FastaFileName", ",", "ExtendTargetsBy", ",", 
         "MinimalBaseSequencingScore", ",", "MinimalReadMappingScore", ",", 
         "MinimalCoverage", ",", "SamtoolsFlagFilter", ",", 
         "VariantThreshold", ",", "SaveCoverage", ",", "LogFileName", ",", 
         "FailedLogFileName"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tm0", "=", 
       RowBox[{"DateList", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
        RowBox[{
         RowBox[{
         "PrintError", "[", 
          "\"\<Sorry TidyVar doesn't work under Windows operating system, \
please try it on Linux or MacOS.\\nAborting.\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"samtoolscheck", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{"SamtoolsPath", "<>", "\"\<samtools --version 2>&1\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"And", "@@", 
          RowBox[{"StringFreeQ", "[", 
           RowBox[{"samtoolscheck", ",", "\"\<not found\>\""}], "]"}]}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{
         "PrintError", "[", "\"\<samtools not found!\\nAborting.\>\"", "]"}], 
         ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"bamfiles", ",", "_List", ",", 
        RowBox[{"flbam", "=", "bamfiles"}], ",", "_String", ",", 
        RowBox[{"flbam", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"\"\<!ls \>\"", "<>", "bamfiles"}], ",", "String"}], 
          "]"}]}], ",", "_", ",", 
        RowBox[{
        "Return", "[", "\"\<The bam files are ill-defined\>\"", "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"varcount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"samples", "=", 
       RowBox[{"FileBaseName", "/@", "flbam"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"coveragefile", "=", 
       RowBox[{"OptionValue", "[", "SaveCoverage", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"coveragefile", ",", 
        RowBox[{"coveragefile", "=", 
         RowBox[{"AppendFileName", "[", 
          RowBox[{
          "outputvcffile", ",", "\"\<.coverage\>\"", ",", "\"\<txt\>\""}], 
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"StringQ", "[", "coveragefile", "]"}], ",", 
          RowBox[{"FileExistsQ", "[", "coveragefile", "]"}]}], "]"}], ",", 
        RowBox[{"RenameFileForced", "[", 
         RowBox[{"coveragefile", ",", 
          RowBox[{"AppendFileName", "[", 
           RowBox[{"coveragefile", ",", "\"\<.old\>\""}], "]"}], ",", 
          RowBox[{"KeepOldFile", "\[Rule]", "False"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "coveragefile", "]"}], ",", 
        RowBox[{
         RowBox[{"WriteString", "[", 
          RowBox[{"coveragefile", ",", 
           RowBox[{"StringJoinWith", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<#CHROM\>\"", ",", "\"\<POS\>\""}], "}"}], ",", 
               "samples"}], "]"}], ",", "\"\<\\t\>\""}], "]"}], ",", 
           "\"\<\\n\>\""}], "]"}], ";", 
         RowBox[{"Close", "[", "coveragefile", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"stream", "=", 
       RowBox[{"OpenWrite", "[", "outputvcffile", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"outputvcffilekeepall", "=", 
       RowBox[{"AppendFileName", "[", 
        RowBox[{
        "outputvcffile", ",", "\"\<.KeepAll\>\"", ",", "\"\<vcf\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"keepallstream", "=", 
       RowBox[{"OpenWrite", "[", "outputvcffilekeepall", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"problemfile", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "FailedLogFileName", "]"}], ",", 
         "Automatic", ",", 
         RowBox[{"AppendFileName", "[", 
          RowBox[{
          "outputvcffile", ",", "\"\<.failed\>\"", ",", "\"\<txt\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", "_String", ",", 
         RowBox[{"OptionValue", "[", "FailedLogFileName", "]"}], ",", 
         "\[IndentingNewLine]", "__", ",", 
         RowBox[{
          RowBox[{"PrintError", "[", 
           RowBox[{"\"\<The option value of FailedLogFileName \>\"", ",", 
            RowBox[{"OptionValue", "[", "FailedLogFileName", "]"}], ",", 
            "\"\< is not recognized.\\nIt must be a string or \
'Automatic'.\\nAborting.\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"problemstream", "=", 
       RowBox[{"OpenWrite", "[", "problemfile", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"logfile", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "LogFileName", "]"}], ",", "Automatic", 
         ",", 
         RowBox[{"AppendFileName", "[", 
          RowBox[{"outputvcffile", ",", "\"\<.log\>\"", ",", "\"\<txt\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", "_String", ",", 
         RowBox[{"OptionValue", "[", "LogFileName", "]"}], ",", 
         "\[IndentingNewLine]", "__", ",", 
         RowBox[{
          RowBox[{"PrintError", "[", 
           RowBox[{"\"\<The option value of LogFileName \>\"", ",", 
            RowBox[{"OptionValue", "[", "LogFileName", "]"}], ",", 
            "\"\< is not recognized.\\nIt must be a string or \
'Automatic'.\\nAborting.\>\""}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"logstream", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "logfile", ",", "\[IndentingNewLine]", "\"\<stdout\>\"", ",", 
         "\"\<stdout\>\"", ",", "\[IndentingNewLine]", "\"\<stderr\>\"", ",", 
         "\"\<stderr\>\"", ",", "\[IndentingNewLine]", "__", ",", 
         RowBox[{"OpenWrite", "[", "logfile", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", 
        "\"\<\\tTidyVar by Boris Noyvert, Greg Elgar lab.\\tVersion \>\"", 
        ",", "$TidyVarVersion", ",", "\"\<\\n\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", "\"\<\\tTidyVar Options: \>\"",
         ",", 
        RowBox[{"StringJoinWith", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"rrr", "\[Rule]", 
             RowBox[{"OptionValue", "[", "rrr", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"rrr", ",", "optnstoreport"}], "}"}]}], "]"}], ",", 
          "\"\<, \>\""}], "]"}], ",", "\"\< .\\n\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", 
        "\"\<\\tUsing Wolfram Mathematica.\\tVersion \>\"", ",", "$Version", 
        ",", "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", 
        "\"\<\\tUsing samtools.\\t\>\"", ",", 
        RowBox[{"StringJoinWith", "[", 
         RowBox[{"samtoolscheck", ",", "\"\<\\t\>\""}], "]"}], ",", 
        "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", "\"\<\\tFound \>\"", ",", 
        RowBox[{"Length", "[", "flbam", "]"}], ",", 
        "\"\< bam files.\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "targets0", "]"}], ",", 
        RowBox[{"targets", "=", 
         RowBox[{"LoadBedTargets", "[", 
          RowBox[{"targets0", ",", 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "optns", "}"}], ",", 
             RowBox[{"Options", "[", "LoadBedTargets", "]"}]}], "]"}]}], 
          "]"}]}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", 
           RowBox[{"targets0", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"targets", "=", "targets0"}], ",", 
          RowBox[{"targets", "=", 
           RowBox[{"{", "targets0", "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "OptimiseTargets", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"logstream", ",", 
            RowBox[{"DateString", "[", "]"}], ",", 
            "\"\<\\tStarted target optimisation. The number of original \
targets is \>\"", ",", 
            RowBox[{"Length", "[", "targets", "]"}], ",", "\"\<.\\n\>\""}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"optimisedtargets", "=", 
           RowBox[{"OptimiseTargets", "[", 
            RowBox[{"flbam", ",", "targets", ",", "region0"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"logstream", ",", 
            RowBox[{"DateString", "[", "]"}], ",", 
            "\"\<\\tFinished target optimisation. The number of optimised \
target regions is \>\"", ",", 
            RowBox[{"Length", "[", "optimisedtargets", "]"}], ",", 
            "\"\<.\\n\>\""}], "]"}]}], ")"}], ",", "\[IndentingNewLine]", 
        RowBox[{"optimisedtargets", "=", "targets"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", 
        "\"\<\\tStarted to call variants in \>\"", ",", 
        RowBox[{"Length", "[", "optimisedtargets", "]"}], ",", 
        "\"\< regions.\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"header", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"StringJoinWith", "[", 
          RowBox[{"#", ",", "\"\<\\t\>\""}], "]"}], "&"}], "@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<#CHROM\>\"", ",", "\"\<POS\>\"", ",", "\"\<ID\>\"", ",", 
            "\"\<REF\>\"", ",", "\"\<ALT\>\"", ",", "\"\<QUAL\>\"", ",", 
            "\"\<FILTER\>\"", ",", "\"\<INFO\>\"", ",", "\"\<FORMAT\>\""}], 
           "}"}], ",", "samples"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vcfmeta", "=", 
       RowBox[{"VcfMetaLines", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{
       "stream", ",", "vcfmeta", ",", "\"\<\\n\>\"", ",", "header", ",", 
        "\"\<\\n\>\""}], "]"}], ";", 
      RowBox[{"WriteString", "[", 
       RowBox[{
       "keepallstream", ",", "vcfmeta", ",", "\"\<\\n\>\"", ",", "header", 
        ",", "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"region", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"MakeCoordinateString", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", "#"}],
               "]"}], "]"}], "&"}], "@", 
           RowBox[{"optimisedtargets", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"WriteString", "[", 
          RowBox[{
          "logstream", ",", 
           "\"\<==============================================================\
===\\n\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"tm", "=", 
            RowBox[{"DateString", "[", "]"}]}], ",", 
           "\"\<\\tStarted to process region \>\"", ",", "j", ",", 
           "\"\<.\\tCoordinates \>\"", ",", "region", ",", 
           "\"\<\\tNumber of targets: \>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatrixQ", "[", 
              RowBox[{"optimisedtargets", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"Length", "[", 
              RowBox[{"optimisedtargets", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], ",", "1"}], 
            "]"}], ",", "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{"res", "=", 
           RowBox[{"FindAllelesAndCountReads", "[", 
            RowBox[{"flbam", ",", 
             RowBox[{"optimisedtargets", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"SaveCoverage", "\[Rule]", "coveragefile"}], ",", 
             RowBox[{"LogStream", "\[Rule]", "logstream"}], ",", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"{", "optns", "}"}], ",", 
               RowBox[{"Options", "/@", 
                RowBox[{"{", 
                 RowBox[{
                 "FindAllelesAndCountReads", ",", "ScanForVariantCandidates", 
                  ",", "GetReadsFromBamFiles"}], "}"}]}]}], "]"}]}], "]"}]}], 
          ")"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"WriteString", "[", 
            RowBox[{
            "logstream", ",", 
             "\"\<Finished FindAllelesAndCountReads\\n\>\""}], "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=!=", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vcflines", "=", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ConvertVariantToVcfLine", "[", 
                RowBox[{
                 RowBox[{"res", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}], ",", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"{", "optns", "}"}], ",", 
                   RowBox[{"Options", "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "ConvertVariantToVcfLine", ",", "Split2D", ",", 
                    "GenotypeReadCounts"}], "}"}]}]}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{
                  RowBox[{"res", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"strng", "=", 
             RowBox[{"StringJoinWith", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"StringJoinWith", "[", 
                  RowBox[{"#", ",", "\"\<\\t\>\""}], "]"}], "&"}], "/@", 
                "vcflines"}], ",", "\"\<\\n\>\""}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"WriteString", "[", 
             RowBox[{"keepallstream", ",", "strng", ",", "\"\<\\n\>\""}], 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"vcflinesnofake", "=", 
             RowBox[{"RemoveDummyAlleles", "/@", "vcflines"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"vcflinesnofakepass", "=", 
             RowBox[{"Pick", "[", 
              RowBox[{"vcflinesnofake", ",", 
               RowBox[{"vcflinesnofake", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", "\"\<.\>\""}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"vcflinesnofakepass", "=!=", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"WriteString", "[", 
                 RowBox[{"logstream", ",", 
                  RowBox[{"DateString", "[", "]"}], ",", 
                  "\"\<\\tWriting \>\"", ",", 
                  RowBox[{"vcflinesnofakepass", "//", "Length"}], ",", 
                  "\"\< variants to VCF file.\\n\>\""}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"strng", "=", 
                 RowBox[{"StringJoinWith", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringJoinWith", "[", 
                    RowBox[{"#", ",", "\"\<\\t\>\""}], "]"}], "&"}], "/@", 
                    "vcflinesnofakepass"}], ",", "\"\<\\n\>\""}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"stream", ",", "strng", ",", "\"\<\\n\>\""}], 
                 "]"}]}], ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"varcount", "+=", 
             RowBox[{"Length", "[", "vcflinesnofakepass", "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=!=", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"strng", "=", 
             RowBox[{"StringJoinWith", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"StringJoinWith", "[", 
                  RowBox[{"#", ",", "\"\<\\t\>\""}], "]"}], "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Flatten", "/@", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "6"}]}], "]"}], "]"}], ")"}]}], ",", 
               "\"\<\\n\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"WriteString", "[", 
             RowBox[{"problemstream", ",", "strng", ",", "\"\<\\n\>\""}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"WriteString", "[", 
          RowBox[{"logstream", ",", 
           RowBox[{"DateString", "[", "]"}], ",", 
           "\"\<\\tFinished to process region \>\"", ",", "j", ",", 
           "\"\<.\\tCoordinates \>\"", ",", "region", ",", "\"\<.\\t\>\"", 
           ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"DateDifference", "[", 
                RowBox[{"tm", ",", "\"\<Second\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "1"}], "}"}], ",", 
             RowBox[{"ExponentFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"Null", "&"}], ")"}]}]}], "]"}], ",", 
           "\"\< seconds.\\n\>\"", ",", "\[IndentingNewLine]", 
           "\"\<==============================================================\
===\\n\>\""}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "optimisedtargets", "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"logstream", ",", 
        RowBox[{"DateString", "[", "]"}], ",", 
        "\"\<\\tFinished to call variants.\\tTotal running time \>\"", ",", 
        RowBox[{"MyRunningTime", "[", "tm0", "]"}], ",", "\"\<. Found \>\"", 
        ",", "varcount", ",", "\"\< variant sites.\\n\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "keepallstream", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "problemstream", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"logstream", "=!=", "\"\<stdout\>\""}], ",", 
          RowBox[{"logstream", "=!=", "\"\<stderr\>\""}]}], "]"}], ",", 
        RowBox[{"Close", "[", "logstream", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "samples", ",", "header", ",", "stream", ",", "res", ",", "vcflines", 
        ",", "problems", ",", "strng", ",", "problemfile", ",", 
        "problemstream", ",", "logfile", ",", "logstream", ",", "region", ",",
         "samtoolscheck", ",", "tm", ",", "tm0", ",", "targets", ",", 
        "optimisedtargets", ",", "outputvcffilekeepall", ",", "keepallstream",
         ",", "vcflinesnofake", ",", "vcflinesnofakepass", ",", "vcfmeta"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "varcount"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6404368205101233`*^9, 3.640436890651175*^9}, {
   3.640436925082255*^9, 3.6404369830971003`*^9}, {3.640437017338951*^9, 
   3.640437062402011*^9}, {3.640437121118286*^9, 3.640437200100749*^9}, {
   3.6404372303092823`*^9, 3.640437340794612*^9}, {3.640437370927597*^9, 
   3.640437371528943*^9}, {3.640437441217359*^9, 3.6404376181201887`*^9}, 
   3.6404376749835167`*^9, {3.640438703182187*^9, 3.64043879664612*^9}, {
   3.6406049872524643`*^9, 3.640605086941195*^9}, {3.640605658762116*^9, 
   3.640605673175372*^9}, {3.640672618465562*^9, 3.640672773369375*^9}, {
   3.6406728568769693`*^9, 3.640673055091662*^9}, {3.6406734790519943`*^9, 
   3.64067348431789*^9}, {3.642250517137001*^9, 3.642250528332551*^9}, {
   3.642332048321629*^9, 3.642332068351136*^9}, {3.642332469722538*^9, 
   3.6423325169430447`*^9}, {3.642332757949605*^9, 3.64233276409107*^9}, {
   3.6423328835778*^9, 3.642332886599674*^9}, {3.642332994486209*^9, 
   3.642333010964807*^9}, {3.6423331976940536`*^9, 3.642333199443652*^9}, {
   3.642333291212661*^9, 3.642333300784095*^9}, {3.642333339582878*^9, 
   3.642333377302992*^9}, {3.642333420301178*^9, 3.6423335034538507`*^9}, {
   3.64233374391251*^9, 3.642333774661866*^9}, {3.6423396404350348`*^9, 
   3.642339688440343*^9}, {3.642339828660136*^9, 3.642339840678605*^9}, {
   3.642339892985195*^9, 3.64234003222793*^9}, {3.642340144012821*^9, 
   3.6423401526802197`*^9}, {3.642340321725477*^9, 3.642340330014249*^9}, {
   3.642340535240427*^9, 3.642340611755114*^9}, {3.6423407721917963`*^9, 
   3.642340804089767*^9}, {3.642341158053652*^9, 3.6423411735902843`*^9}, {
   3.642341362999969*^9, 3.642341373234537*^9}, {3.6434550913144827`*^9, 
   3.643455094961569*^9}, {3.6434620949826813`*^9, 3.643462144843645*^9}, {
   3.643462197029463*^9, 3.643462219997643*^9}, {3.643462250847142*^9, 
   3.643462258422859*^9}, {3.643462290344699*^9, 3.643462310177059*^9}, {
   3.6434623752857018`*^9, 3.643462427565786*^9}, {3.6434624637998247`*^9, 
   3.643462540889819*^9}, {3.64346257430791*^9, 3.6434626151565313`*^9}, {
   3.6434626604792852`*^9, 3.643462689744619*^9}, {3.643462743072434*^9, 
   3.643462752584312*^9}, {3.643462789698278*^9, 3.6434628091388617`*^9}, {
   3.643462976995016*^9, 3.643462981500968*^9}, {3.643463512346546*^9, 
   3.643463536759886*^9}, {3.643463585760097*^9, 3.643463751301324*^9}, 
   3.643463859442554*^9, 3.643463941435752*^9, {3.6434639894200487`*^9, 
   3.643464078247623*^9}, {3.643464195862755*^9, 3.643464211509544*^9}, {
   3.643464306554008*^9, 3.643464339921369*^9}, {3.643464378988146*^9, 
   3.6434644763002996`*^9}, {3.643464544012245*^9, 3.643464589752021*^9}, {
   3.643464633191091*^9, 3.643464702232502*^9}, {3.643464916648816*^9, 
   3.6434649785811977`*^9}, {3.6434651089486637`*^9, 3.6434651091473837`*^9}, 
   3.643465183412355*^9, {3.643539691534236*^9, 3.6435396972801447`*^9}, {
   3.643540406874722*^9, 3.643540426547656*^9}, {3.643547922137425*^9, 
   3.643548008600171*^9}, {3.643548041294653*^9, 3.643548054414185*^9}, {
   3.6435480941585817`*^9, 3.643548117292985*^9}, {3.6435481568145847`*^9, 
   3.643548173192524*^9}, {3.643548204805332*^9, 3.6435482391301403`*^9}, {
   3.643548332586245*^9, 3.6435483714813843`*^9}, {3.6435484241108303`*^9, 
   3.64354843257452*^9}, {3.643548475006702*^9, 3.6435484942596693`*^9}, 
   3.6435487317473373`*^9, {3.643548764190303*^9, 3.643548838477312*^9}, {
   3.643548946402762*^9, 3.643548993675157*^9}, {3.6435490459115343`*^9, 
   3.643549054529888*^9}, 3.6435491257957897`*^9, {3.643549984077118*^9, 
   3.643549994697133*^9}, {3.643550024913002*^9, 3.643550053438423*^9}, {
   3.643550094507669*^9, 3.643550175034861*^9}, 3.643550223482568*^9, {
   3.6435503252158327`*^9, 3.643550369563569*^9}, {3.643550405499189*^9, 
   3.643550471945314*^9}, {3.6435505571139593`*^9, 3.643550565216226*^9}, {
   3.6435507593013697`*^9, 3.643550766980411*^9}, {3.643613531661639*^9, 
   3.643613534596094*^9}, {3.643613583387454*^9, 3.643613591451294*^9}, {
   3.6436139717064734`*^9, 3.643613989179187*^9}, {3.643614094994903*^9, 
   3.643614103882896*^9}, {3.643614356058384*^9, 3.643614356279097*^9}, {
   3.643627849917171*^9, 3.6436278543316317`*^9}, {3.64362788753821*^9, 
   3.643627888373541*^9}, {3.643627941975424*^9, 3.643627975169745*^9}, {
   3.6436280234303207`*^9, 3.643628156288515*^9}, {3.64362818814045*^9, 
   3.643628237618593*^9}, {3.643629371170578*^9, 3.6436294187854023`*^9}, {
   3.6436295017442827`*^9, 3.643629534257559*^9}, {3.643629934780439*^9, 
   3.6436299372400913`*^9}, {3.643629972482251*^9, 3.6436300150686493`*^9}, {
   3.644131947582683*^9, 3.644132010902733*^9}, {3.644132050245158*^9, 
   3.644132062503832*^9}, {3.644132095817803*^9, 3.644132107173093*^9}, {
   3.64413227436327*^9, 3.644132316708468*^9}, {3.6441331419385366`*^9, 
   3.644133172038282*^9}, {3.644133206362968*^9, 3.644133305627631*^9}, {
   3.644133338024372*^9, 3.644133346886959*^9}, {3.644134626441152*^9, 
   3.644134626621414*^9}, {3.6441413442437487`*^9, 3.6441413947840567`*^9}, {
   3.6441421209039097`*^9, 3.644142149151927*^9}, {3.644142683484131*^9, 
   3.644142687659896*^9}, {3.64414333906289*^9, 3.644143387003044*^9}, {
   3.644321823178866*^9, 3.644321834323474*^9}, 3.6443223101247272`*^9, {
   3.644323204150395*^9, 3.6443232083268967`*^9}, {3.644323832852664*^9, 
   3.644323905417983*^9}, {3.6443242009312267`*^9, 3.644324253815668*^9}, 
   3.644324304610662*^9, 3.644565280934495*^9, {3.644569006644659*^9, 
   3.6445690068165703`*^9}, {3.644583433140266*^9, 3.64458355645362*^9}, {
   3.644668987190158*^9, 3.644668988060286*^9}, {3.644669024335415*^9, 
   3.644669080338908*^9}, {3.644669173767043*^9, 3.644669176851885*^9}, {
   3.64466943237644*^9, 3.6446694642536583`*^9}, {3.644669496277081*^9, 
   3.644669511330755*^9}, {3.644669559247431*^9, 3.644669560401486*^9}, {
   3.644829417780814*^9, 3.644829434462163*^9}, {3.6448294779345093`*^9, 
   3.644829485910252*^9}, {3.644831103207954*^9, 3.644831114486348*^9}, {
   3.6448311770352173`*^9, 3.644831178432971*^9}, {3.644831629906075*^9, 
   3.644831730152529*^9}, {3.6448318194280252`*^9, 3.644831820679139*^9}, {
   3.6460458741758432`*^9, 3.646045889525916*^9}, 3.6460479869526443`*^9, {
   3.649079018905044*^9, 3.649079026811681*^9}, {3.649082313081561*^9, 
   3.649082385224826*^9}, {3.649082418704967*^9, 3.649082419283413*^9}, {
   3.649082501976426*^9, 3.6490825036014547`*^9}, {3.649082611542947*^9, 
   3.649082613046176*^9}, {3.649082656936184*^9, 3.6490826595832376`*^9}, {
   3.649082732138513*^9, 3.649082802592737*^9}, {3.649082850763894*^9, 
   3.6490828590107727`*^9}, {3.649082923488978*^9, 3.649082950006268*^9}, {
   3.649082998049715*^9, 3.649083066952684*^9}, {3.6490831325008802`*^9, 
   3.649083186750485*^9}, {3.649084235426547*^9, 3.6490844786804323`*^9}, 
   3.6490845120463457`*^9, {3.649084569369047*^9, 3.6490845825423183`*^9}, 
   3.6490846389406424`*^9, {3.6490847296913967`*^9, 3.649084761677155*^9}, 
   3.649084969252419*^9, {3.649085075012453*^9, 3.6490851086526737`*^9}, 
   3.6490857058829517`*^9, {3.650007663843873*^9, 3.650007684243292*^9}, {
   3.650007738180867*^9, 3.650007798244379*^9}, {3.650007833801265*^9, 
   3.650007923552243*^9}, {3.65000800779954*^9, 3.650008109495295*^9}, {
   3.650008445428233*^9, 3.65000865974811*^9}, {3.650008701654612*^9, 
   3.650008717200459*^9}, {3.650008997229537*^9, 3.650008999779969*^9}, {
   3.6506527537338724`*^9, 3.650652775456115*^9}, {3.6506547929995117`*^9, 
   3.6506547978367887`*^9}, {3.6509786337577*^9, 3.650978634964176*^9}, {
   3.6745554685100317`*^9, 3.6745554896312137`*^9}, {3.6745555488207297`*^9, 
   3.6745556323138323`*^9}, 3.6745895738505254`*^9, 3.6745898188437915`*^9, {
   3.675067215435671*^9, 3.6750672166927433`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VcfMetaLines", "[", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringJoinWith", "[", 
      RowBox[{"#", ",", "\"\<\\n\>\""}], "]"}], "&"}], "@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<##fileformat=VCFv4.2\>\"", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<##fileDate=\>\"", "<>", 
       RowBox[{"DateString", "[", 
        RowBox[{
         RowBox[{"Date", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Year\>\"", ",", " ", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
           "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<|\>\"", ",", 
           "\"\<Hour\>\"", ",", "\"\<:\>\"", ",", "\"\<Minute\>\"", ",", 
           "\"\<:\>\"", ",", "\"\<Second\>\""}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<##source=\>\"", "<>", "\"\<TidyVar\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "$TidyVarVersion", "]"}], ",", 
         RowBox[{"\"\<.version\>\"", "<>", "$TidyVarVersion"}], ",", 
         "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "GenomeFastaFile", "]"}], ",", 
        RowBox[{"\"\<##reference=file://\>\"", "<>", "GenomeFastaFile"}], 
        ",", "\"\<##reference=\\\"Not specified\\\"\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<##phasing=none\>\"", 
      ",", "\[IndentingNewLine]", 
      "\"\<##INFO=<ID=AF,Number=A,Type=Float,Description=\\\"Allele Frequency\
\\\">\>\"", ",", "\[IndentingNewLine]", 
      "\"\<##INFO=<ID=AN,Number=1,Type=Integer,Description=\\\"Total allele \
number equal to the number of individuals with defined genotypes times \
ploidity\\\">\>\"", ",", "\[IndentingNewLine]", 
      "\"\<##INFO=<ID=AC,Number=A,Type=Integer,Description=\\\"Total allele \
count for each allele in individuals with defined genotypes, AF=AC/AN \\\">\>\
\"", ",", "\[IndentingNewLine]", 
      "\"\<##INFO=<ID=DP,Number=1,Type=Integer,Description=\\\"Combined \
(across all samples) number of reads covering the variant\\\">\>\"", ",", 
      "\[IndentingNewLine]", 
      "\"\<##INFO=<ID=DM,Number=1,Type=String,Description=\\\"Dummy alleles - \
alleles that are not called in any individual genotype in the cohort, but \
there are still reads supporting them\\\">\>\"", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      "\"\<##FORMAT=<ID=GT,Number=1,Type=String,Description=\\\"Genotype\\\">\
\>\"", ",", "\[IndentingNewLine]", 
      "\"\<##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\\\"Allelic \
depths (number of reads supporting the allele) for the reference and \
alternative alleles in the order listed\\\">\>\"", ",", 
      "\[IndentingNewLine]", 
      "\"\<##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\\\"Read Depth - \
sum of AD\\\">\>\"", ",", "\[IndentingNewLine]", 
      "\"\<##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\\\"Genotype \
Quality - minimal nonzero PL\\\">\>\"", ",", "\[IndentingNewLine]", 
      "\"\<##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\\\"Phred \
likelihoods for all possible genotypes\\\">\>\""}], "}"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdzk0oAwAAxfHFjAsZ5TBT25KNtMPUcmC2YpZYmgMtZY0lO2CLqZmMppS2
Zj4WB/Zpm2RZWjlYI4eNMspyGDkoraRYi7DM3g6v3+Ud/nT5hERRQCAQanKD
Mn+gzi17FVxYjvPeVa1uQEqfywpHQold2GK8csJ3waUHejk+LyTZGDdwP8JN
QlGKSdvL+RL1M2CmU8+E4iZ1PTSRMzzIn5fyIV1XPQq1K2YVTB4ltPCnv9IE
H+LbazAc+NqCfxqjHY5/c5zQrFj3QNpQuw/2DExGoCThi0KWkHENZdrWGDzI
fqSgyMYo9aDP+SyCs8O8Luj4nB6DT8RDJSyMp9XQ8is3wJIl2yYk6a12aCji
s7w5y5PuvEqyoxESKths2BzzdMCpBpEQpm/vxXBnTtgLuadnKugKUTWQuHye
hboyY7Ev52Iw2A3dg6G80to2ygl+jjgVJmceaTC88Jb3Hy358/g=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyRunningTime", "[", "tm_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dd", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dd", "=", 
       RowBox[{"DateDifference", "[", 
        RowBox[{"tm", ",", "\"\<Hour\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"dd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ">", "1"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"dd", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "2"}], "}"}], ",", 
             RowBox[{"ExponentFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"Null", "&"}], ")"}]}]}], "]"}], "]"}], "<>", 
          "\"\< hours\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"dd", "=", 
       RowBox[{"DateDifference", "[", 
        RowBox[{"tm", ",", "\"\<Minute\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"dd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ">", "1"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"dd", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "2"}], "}"}], ",", 
             RowBox[{"ExponentFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"Null", "&"}], ")"}]}]}], "]"}], "]"}], "<>", 
          "\"\< minutes\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"dd", "=", 
       RowBox[{"DateDifference", "[", 
        RowBox[{"tm", ",", "\"\<Second\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"dd", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "1"}], "}"}], ",", 
          RowBox[{"ExponentFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"Null", "&"}], ")"}]}]}], "]"}], "]"}], "<>", 
       "\"\< seconds\>\""}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6436282713284616`*^9, 3.643628326863812*^9}, {
  3.643628401206223*^9, 3.643628405964328*^9}, {3.643628437796419*^9, 
  3.643628469150283*^9}, {3.64362866192344*^9, 3.643628705586244*^9}, {
  3.643628740990285*^9, 3.643628795422765*^9}, {3.64362906363809*^9, 
  3.643629292331645*^9}, {3.643629331504775*^9, 3.643629331543046*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Target optimisation", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5982552133474607`*^9, 3.5982552340573063`*^9}, {
   3.60009495362247*^9, 3.6000949609105043`*^9}, {3.64346170526652*^9, 
   3.643461708226696*^9}, {3.645956499813772*^9, 3.645956501607552*^9}, 
   3.645956543061006*^9, {3.6461146054348307`*^9, 3.6461146138423843`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RegionOnTargets", "::", "usage"}], "=", 
   "\"\<Returns those targets that are within {region[[1]],region[[2]]},\n\
cuts the targets if necessary. If targets is empty ({{}}) returns the region \
itself.\nExamples:\n\
RegionOnTargets[{5,76},{{0,10},{20,30},{40,50},{60,70},{80,90}}] gives \
{{5,10},{20,30},{40,50},{60,70}},\n\
RegionOnTargets[{5,8},{{0,10},{20,30},{40,50},{60,70},{80,90}}] gives \
{{5,8}},\nRegionOnTargets[{105,108},{{0,10},{20,30},{40,50},{60,70},{80,90}}] \
gives{}.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegionOnTargets", "[", 
    RowBox[{"region_List", ",", 
     RowBox[{"targets_", "?", "MatrixQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"boundarypos", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"targets", "===", 
         RowBox[{"{", 
          RowBox[{"{", "}"}], "}"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "region", "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"boundarypos", "=", 
       RowBox[{"BoundaryPositions", "[", 
        RowBox[{
         RowBox[{"Join", "@@", "targets"}], ",", "region"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"targets", "[", 
        RowBox[{"[", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"boundarypos", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "2"], "]"}], ",", 
           RowBox[{"Floor", "[", 
            FractionBox[
             RowBox[{"boundarypos", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "2"], "]"}]}], "]"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", 
         RowBox[{"boundarypos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"boundarypos", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "===", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"{", "region", "}"}], "]"}]}], "]"}], ";", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"res", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"targets", "[", 
              RowBox[{"[", 
               RowBox[{
                FractionBox[
                 RowBox[{"boundarypos", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "2"], ",", "2"}], "]"}], 
              "]"}]}], "}"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "[", 
         RowBox[{"boundarypos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"res", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"targets", "[", 
             RowBox[{"[", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"boundarypos", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "2"], ",", 
               "1"}], "]"}], "]"}], ",", 
            RowBox[{"region", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.645793574406107*^9, 3.6457936381856537`*^9}, {
   3.645793673019405*^9, 3.6457936844075413`*^9}, {3.645793737196892*^9, 
   3.645793772941292*^9}, {3.645795430742362*^9, 3.645795450874962*^9}, {
   3.645795481875678*^9, 3.645795515129232*^9}, 3.645795841435657*^9, {
   3.645795922930491*^9, 3.6457960077643023`*^9}, {3.645796061024747*^9, 
   3.645796156946268*^9}, {3.645796398469439*^9, 3.6457964482122803`*^9}, {
   3.645796584111721*^9, 3.645796653631785*^9}, {3.6457966888638153`*^9, 
   3.645796700767976*^9}, {3.645796750386758*^9, 3.645796843116131*^9}, 
   3.645796880584243*^9, {3.645861638463852*^9, 3.6458616493935204`*^9}, {
   3.6458616805604258`*^9, 3.645861767030017*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ReadsByChromosomeBam", "::", "usage"}], "=", 
   "\"\<ReadsByChromosomeBam[bamfile_String]\nThe function uses samtools \
idxstats to get a list of chromosomes and the number of reads mapped to each \
chromosome and the chromosome size.\nInput: bam file name.\nOutput: {{chr1, \
Nreads(chr1)},{chr2, Nreads(chr2)},...}\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadsByChromosomeBam", "[", "bamfile_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inputfile", ",", "cmd"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cmd", "=", 
       RowBox[{"StringJoinWith", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SamtoolsPath", "<>", "\"\<samtools idxstats\>\""}], ",", 
          "bamfile"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RunExternal", "[", 
        RowBox[{"cmd", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Word\>\"", ",", "\"\<Number\>\"", ",", "\"\<Number\>\"", ",", 
           "\"\<Number\>\""}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.645526952569798*^9, 3.645526958815734*^9}, {
  3.645526992413541*^9, 3.645526993493094*^9}, {3.645527046512241*^9, 
  3.645527094769184*^9}, {3.646045935759746*^9, 3.646045945817074*^9}, {
  3.6754970162697163`*^9, 3.6754970169147534`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReadLengthInBam", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SamtoolsFlagFilter", "\[Rule]", "\"\<0x704\>\""}], ",", 
     RowBox[{"MinimalReadMappingScore", "\[Rule]", "0"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"ReadLengthInBam", "[", 
    RowBox[{"bamfile_String", ",", 
     RowBox[{"inputregion_:", "\"\<\>\""}], ",", 
     RowBox[{"firstreads_Integer:", "1000"}], ",", 
     RowBox[{"OptionsPattern", "[", "ReadLengthInBam", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cmd", ",", "region", ",", "reads"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"region", "=", 
       RowBox[{"inputregion", "//", "MakeCoordinateString"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cmd", "=", 
       RowBox[{"StringJoinWith", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SamtoolsPath", "<>", "\"\<samtools view\>\""}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}], "===", 
             "0"}], ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<-F\>\"", ",", 
              RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}], "===",
              "0"}], ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<-q\>\"", ",", 
              RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", "bamfile", ",", 
          "region", ",", "\[IndentingNewLine]", "\"\<|\>\"", ",", 
          "\[IndentingNewLine]", "\"\<head -n\>\"", ",", "firstreads", ",", 
          "\[IndentingNewLine]", "\"\<|\>\"", ",", "\[IndentingNewLine]", 
          "\"\<awk ' {print $10} '\>\""}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"reads", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{"cmd", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"StringLength", "[", "reads", "]"}], "//", "Max"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6455384946728354`*^9, 3.6455385263198967`*^9}, {
   3.645538563956231*^9, 3.645538669872672*^9}, {3.645538717242704*^9, 
   3.645538718279353*^9}, {3.645538858814498*^9, 3.645538859755767*^9}, 
   3.645956598378168*^9, {3.64880523521058*^9, 3.64880524268293*^9}, {
   3.648807902115801*^9, 3.648807940024447*^9}, {3.648814530499116*^9, 
   3.648814531618648*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "IndexBamUniform", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"JumpNumberReads", "\[Rule]", "1000"}], ",", 
     RowBox[{"SamtoolsFlagFilter", "\[Rule]", "\"\<0x704\>\""}], ",", 
     RowBox[{"MinimalReadMappingScore", "\[Rule]", "0"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"IndexBamUniform", "[", 
    RowBox[{"bamfile_String", ",", "inputregion_", ",", 
     RowBox[{"OptionsPattern", "[", "IndexBamUniform", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cmd", ",", "region", ",", "numberofreads"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numberofreads", "=", 
       RowBox[{"OptionValue", "[", "JumpNumberReads", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"inputregion", "//", "MakeCoordinateString"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cmd", "=", 
       RowBox[{"StringJoinWith", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SamtoolsPath", "<>", "\"\<samtools view\>\""}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}], "===", 
             "0"}], ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<-F\>\"", ",", 
              RowBox[{"OptionValue", "[", "SamtoolsFlagFilter", "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}], "===",
              "0"}], ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<-q\>\"", ",", 
              RowBox[{"OptionValue", "[", "MinimalReadMappingScore", "]"}]}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", "bamfile", ",", 
          "region", ",", "\[IndentingNewLine]", "\"\<|\>\"", ",", 
          "\[IndentingNewLine]", "\"\<awk 'NR %\>\"", ",", "numberofreads", 
          ",", "\"\< == 1 {print $3,$4} END {print $3,$4}'\>\""}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"RunExternal", "[", 
       RowBox[{"cmd", ",", 
        RowBox[{"{", 
         RowBox[{"Word", ",", "Number"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6452720932078533`*^9, 3.645272166253057*^9}, {
   3.645272209450841*^9, 3.645272276832201*^9}, {3.645272422128656*^9, 
   3.645272475688445*^9}, {3.6452725066918497`*^9, 3.64527258132393*^9}, {
   3.645272624767026*^9, 3.645272710624851*^9}, {3.645273737465845*^9, 
   3.6452737444342117`*^9}, {3.645799031609722*^9, 3.645799071676298*^9}, 
   3.645956595651719*^9, {3.646045998407126*^9, 3.64604599866494*^9}, {
   3.6483938365949507`*^9, 3.648393845722475*^9}, 3.648814574893784*^9, 
   3.648814643010624*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "OptimiseTargets", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"MemoryCoefficient", "\[Rule]", "1"}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"OptimiseTargets", "[", 
    RowBox[{"bamfiles_List", ",", "targets_List", ",", "inputregion_", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{
        "OptimiseTargets", ",", "OptimiseTargetsChromosome", ",", 
         "IndexBamUniform"}], "}"}], "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l", ",", "readschr", ",", "totalreads", ",", "readnumbercoef", ",", 
       "mdl", ",", "regionchrlist", ",", "region", ",", "chrtargetps", ",", 
       "targetschr", ",", "regionandtargetsdefined", ",", "chrlistps", ",", 
       "indx", ",", "readlength", ",", "step", ",", "rl", ",", "result"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"region", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "inputregion", "]"}], ",", 
         RowBox[{"ExtractCoordinatesFromString", "[", "inputregion", "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"List", "[", "inputregion", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "region", "]"}], "\[GreaterEqual]", "1"}], 
          ",", 
          RowBox[{"Not", "[", 
           RowBox[{"StringQ", "[", 
            RowBox[{"region", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"region", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"region", ",", 
           RowBox[{"1", "\[Rule]", 
            RowBox[{"ToString", "[", 
             RowBox[{"region", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}]}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "region", "]"}], "\[GreaterEqual]", "3"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"region", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", "3"}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "<", 
           RowBox[{"OptionValue", "[", "DontSplitSize", "]"}]}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "targets", "]"}], "===", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "region", "}"}], "]"}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"RegionOnTargets", "[", 
              RowBox[{
               RowBox[{"region", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ";;", "3"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"Pick", "[", 
                 RowBox[{"targets", ",", 
                  RowBox[{"targets", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"region", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"2", ";;", "3"}]}], "]"}], "]"}]}], "]"}]}], "}"}], 
           "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "bamfiles", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"readschr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"ReadsByChromosomeBam", "[", "#", "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{
             RowBox[{"First", "[", "x", "]"}], "=!=", "\"\<*\>\""}]}]}], 
          "]"}], "&"}], "/@", "bamfiles"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"regionandtargetsdefined", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"region", "=!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"Flatten", "[", "targets", "]"}], "=!=", 
          RowBox[{"{", "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "regionandtargetsdefined", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"regionchrlist", "=", 
           RowBox[{"List", "/@", 
            RowBox[{"readschr", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"targetschr", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", "}"}], "}"}], ",", 
             RowBox[{"Length", "[", "regionchrlist", "]"}]}], "]"}]}]}], 
         ")"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"regionchrlist", "=", 
           RowBox[{"{", "region", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"targetschr", "=", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", "}"}], "}"}], "}"}]}]}], ")"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"chrtargetps", "=", 
           RowBox[{"IntersectionPositionsSimple", "[", 
            RowBox[{
             RowBox[{"readschr", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"targets", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"targetschr", "=", 
           RowBox[{
            RowBox[{"GatherBy", "[", 
             RowBox[{"targets", ",", "First"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"chrtargetps", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"regionchrlist", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rrr", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Min", "[", 
                RowBox[{"rrr", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Max", "[", 
                RowBox[{"rrr", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"rrr", ",", "targetschr"}], "}"}]}], "]"}]}]}], ")"}], 
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"targetschr", "=", 
           RowBox[{"{", 
            RowBox[{"Pick", "[", 
             RowBox[{"targets", ",", 
              RowBox[{"targets", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"region", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", "targetschr", "]"}], "===", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"regionchrlist", "=", 
           RowBox[{"{", "region", "}"}]}]}], ")"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"regionchrlist", "===", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"chrlistps", "=", 
       RowBox[{
        RowBox[{"IntersectionPositionsSimple", "[", 
         RowBox[{
          RowBox[{"readschr", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"regionchrlist", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"totalreads", "=", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"readschr", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "chrlistps", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mdl", "=", 
       RowBox[{
        RowBox[{"Ordering", "[", "totalreads", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"l", "/", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"readnumbercoef", "=", 
       RowBox[{"N", "[", 
        RowBox[{"totalreads", "/", 
         RowBox[{"totalreads", "[", 
          RowBox[{"[", "mdl", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"readlength", "=", 
       RowBox[{"ReadLengthInBam", "[", 
        RowBox[{"bamfiles", "[", 
         RowBox[{"[", "mdl", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"step", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "MemoryCoefficient", "]"}], "3.", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["10", "8"], "/", "readlength"}], "/", 
          RowBox[{"Total", "[", "readnumbercoef", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rl", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "optns", "}"}], ",", 
         RowBox[{"Options", "/@", 
          RowBox[{"{", 
           RowBox[{"OptimiseTargetsChromosome", ",", "IndexBamUniform"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"OptimiseTargetsChromosome", "[", 
           RowBox[{
            RowBox[{"bamfiles", "[", 
             RowBox[{"[", "mdl", "]"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"targetschr", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], "===", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}], ",", 
              RowBox[{"targetschr", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "All", ",", 
                 RowBox[{"2", ";;", "3"}]}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"regionchrlist", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", "step", ",", "rl", ",", 
            RowBox[{"AnticipatedReadLength", "\[Rule]", "readlength"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "regionchrlist", "]"}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", 
       RowBox[{
       "l", ",", "readschr", ",", "totalreads", ",", "readnumbercoef", ",", 
        "mdl", ",", "regionchrlist", ",", "region", ",", "chrtargetps", ",", 
        "targetschr", ",", "regionandtargetsdefined", ",", "chrlistps", ",", 
        "indx", ",", "readlength", ",", "step", ",", "rl"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.645524562218857*^9, 3.645524640508068*^9}, {
   3.645524745416657*^9, 3.645524854708919*^9}, {3.6455253969642763`*^9, 
   3.645525452110836*^9}, 3.64552724738418*^9, {3.645527289358964*^9, 
   3.64552739413966*^9}, {3.64552744658934*^9, 3.645527660355584*^9}, {
   3.6455277406575947`*^9, 3.6455277855333977`*^9}, {3.645527817024941*^9, 
   3.645527821494157*^9}, {3.645527918365353*^9, 3.6455279270357647`*^9}, {
   3.6455279907957907`*^9, 3.6455280633185053`*^9}, {3.6455281129933147`*^9, 
   3.645528197325742*^9}, {3.6455282277888813`*^9, 3.645528228533924*^9}, {
   3.645528310867544*^9, 3.6455283619862556`*^9}, {3.645528517767993*^9, 
   3.645528700001953*^9}, {3.645528733989089*^9, 3.6455287556408787`*^9}, {
   3.645528814591777*^9, 3.6455288532057333`*^9}, {3.645529438761097*^9, 
   3.645529521708724*^9}, {3.645529628538425*^9, 3.645529689327634*^9}, {
   3.645530061037897*^9, 3.645530091781375*^9}, {3.645530152465465*^9, 
   3.645530392407625*^9}, {3.645530427506669*^9, 3.6455304454104033`*^9}, {
   3.645530535137412*^9, 3.645530636396821*^9}, 3.6455306963006783`*^9, {
   3.645530741910824*^9, 3.645530742925777*^9}, {3.6455308942392073`*^9, 
   3.6455309214328947`*^9}, {3.6455332147848263`*^9, 3.645533255658353*^9}, {
   3.6455349259218073`*^9, 3.645534959623414*^9}, {3.6455350084088373`*^9, 
   3.645535010701706*^9}, {3.6455350522811947`*^9, 3.645535102910101*^9}, {
   3.645535193656272*^9, 3.645535277714139*^9}, {3.6455353190713053`*^9, 
   3.645535535438427*^9}, {3.645535637432167*^9, 3.645535652588892*^9}, {
   3.64553574762761*^9, 3.645535786989698*^9}, {3.6455358367914877`*^9, 
   3.645535863057925*^9}, {3.645535899023794*^9, 3.64553590683993*^9}, {
   3.645535948217669*^9, 3.645535980759328*^9}, {3.645536025411461*^9, 
   3.645536083798567*^9}, {3.6455372532284393`*^9, 3.6455372641462593`*^9}, {
   3.6455373011397*^9, 3.645537357698978*^9}, {3.6455373953443403`*^9, 
   3.645537416224813*^9}, {3.6455374945224743`*^9, 3.645537529725087*^9}, 
   3.645537632052332*^9, {3.645537662388872*^9, 3.6455377200556507`*^9}, {
   3.645537902565618*^9, 3.645537967274816*^9}, {3.6455380070527554`*^9, 
   3.645538037602*^9}, {3.645538076067634*^9, 3.6455381139914627`*^9}, {
   3.6455389152504473`*^9, 3.6455390519485607`*^9}, {3.645539535942029*^9, 
   3.645539553848095*^9}, {3.645539672114043*^9, 3.6455396744554863`*^9}, {
   3.645539862947253*^9, 3.645539876687356*^9}, {3.645539925678937*^9, 
   3.645539934725816*^9}, {3.645540003656212*^9, 3.645540022494091*^9}, {
   3.645540151070557*^9, 3.6455401976085176`*^9}, {3.645540285554873*^9, 
   3.6455402868043756`*^9}, {3.645540334056163*^9, 3.645540349438836*^9}, {
   3.645867190227161*^9, 3.645867194617461*^9}, {3.645867340056587*^9, 
   3.6458673629247704`*^9}, {3.645868421537168*^9, 3.645868466363677*^9}, {
   3.645868586914989*^9, 3.6458686693902597`*^9}, {3.645868847886878*^9, 
   3.6458688495758553`*^9}, {3.645869005959647*^9, 3.64586910562228*^9}, {
   3.645869337383073*^9, 3.645869371850992*^9}, {3.645869440435775*^9, 
   3.6458694956598253`*^9}, {3.645869534963819*^9, 3.645869575590221*^9}, {
   3.6458709841012793`*^9, 3.645870992115199*^9}, {3.64587202087987*^9, 
   3.6458720655482273`*^9}, {3.645872126935388*^9, 3.645872139980915*^9}, {
   3.645872719878772*^9, 3.645872812323045*^9}, {3.6458728499389153`*^9, 
   3.645872977861754*^9}, {3.6458741317429533`*^9, 3.645874164500552*^9}, {
   3.64587421184756*^9, 3.645874214043591*^9}, {3.64587428531774*^9, 
   3.645874321106359*^9}, {3.6458743881320133`*^9, 3.645874568028429*^9}, {
   3.6458746981649647`*^9, 3.645874851233492*^9}, {3.645875405564155*^9, 
   3.6458754096595573`*^9}, {3.64587558769482*^9, 3.645875612387266*^9}, {
   3.64587641107992*^9, 3.64587641496511*^9}, {3.645876445748414*^9, 
   3.64587650860178*^9}, {3.645876779113386*^9, 3.645876807497445*^9}, {
   3.645878050195854*^9, 3.645878150552804*^9}, {3.645878400708934*^9, 
   3.645878428571919*^9}, {3.645878532324093*^9, 3.645878575317781*^9}, {
   3.645878809034445*^9, 3.6458788107738657`*^9}, {3.645879253359271*^9, 
   3.645879264833825*^9}, {3.645879357219702*^9, 3.645879374443428*^9}, {
   3.6458809416352987`*^9, 3.645880968044235*^9}, {3.645883130051319*^9, 
   3.645883152643731*^9}, {3.645883344177752*^9, 3.645883398447106*^9}, {
   3.6459488562527723`*^9, 3.64594887439082*^9}, 3.645952944835998*^9, {
   3.6459529928293324`*^9, 3.64595299863104*^9}, 3.6459566357375517`*^9, 
   3.646046018606192*^9, {3.646046062071793*^9, 3.6460460643555107`*^9}, {
   3.6460462974874077`*^9, 3.64604629859822*^9}, {3.64612647499746*^9, 
   3.6461264755562677`*^9}, 3.6461429790347357`*^9, {3.648815338950696*^9, 
   3.648815391510829*^9}, {3.64908554361975*^9, 3.649085544346991*^9}, {
   3.649086269405355*^9, 3.6490863405640993`*^9}, {3.649086403409937*^9, 
   3.649086405479505*^9}, {3.6490864527987413`*^9, 3.6490864720896997`*^9}, {
   3.650654810535515*^9, 3.650654818035944*^9}, {3.675497028812434*^9, 
   3.6754970315335894`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LoadBedTargets", "::", "usage"}], "=", 
   "\"\<LoadBedTargets[targetbedfile_String, ExtendTargetsBy\[Rule]0]].\n\
Loads the first 3 columns from a bed file, converts to intervals by adding 1 \
to the first coordinate, adds to each interval ExtendByBases on both sides, \
and then merges overlapping intervals.\nOutput: a list of intervals in the \
form {chr (String), coord1 (Integer), coord2 (Integer)}.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "LoadBedTargets", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"ExtendTargetsBy", "\[Rule]", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadBedTargets", "[", 
    RowBox[{"targetbedfile_String", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", "LoadBedTargets", "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"extendbases", ",", "bed", ",", "addcoordinates"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTrim", "[", "targetbedfile", "]"}], "===", 
         "\"\<\>\""}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"extendbases", "=", 
       RowBox[{"OptionValue", "[", "ExtendTargetsBy", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bed", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{
         RowBox[{"\"\<cut -f 1,2,3 \>\"", "<>", "targetbedfile"}], ",", 
         RowBox[{"{", 
          RowBox[{"Word", ",", "Number", ",", "Number"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"addcoordinates", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], "+", 
        RowBox[{"extendbases", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Join", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"#", ",", 
             RowBox[{"rrr", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"CombineRegions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"addcoordinates", "+", "#"}], ")"}], "&"}], "/@", 
            RowBox[{"rrr", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"2", ";;", "3"}]}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"rrr", ",", 
           RowBox[{"GatherBy", "[", 
            RowBox[{"bed", ",", "First"}], "]"}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.649075484797027*^9, 3.649075528502643*^9}, {
  3.649077792375264*^9, 3.6490778673093243`*^9}, {3.649077899918168*^9, 
  3.649077947108671*^9}, {3.6490780090895348`*^9, 3.649078165903256*^9}, {
  3.6490782384480267`*^9, 3.649078406113467*^9}, {3.6490784469321413`*^9, 
  3.649078563215609*^9}, {3.64907870289872*^9, 3.64907873535609*^9}, {
  3.6490788654322577`*^9, 3.649078880225135*^9}, {3.64908247564622*^9, 
  3.649082489716095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SplitRegions", "[", 
    RowBox[{
     RowBox[{"regions_", "?", "MatrixQ"}], ",", 
     RowBox[{"DistanceToSplit_Integer:", "1000000"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dist", ",", "ps"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dist", "=", 
       RowBox[{
        RowBox[{"regions", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"regions", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}], ",", "2"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{"dist", "-", "DistanceToSplit"}], "]"}], ",", "1", ",", 
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"regions", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"ps", "+", "1"}], ",", "1"}], "]"}], ",", 
          RowBox[{"Append", "[", 
           RowBox[{"ps", ",", 
            RowBox[{"Length", "[", "regions", "]"}]}], "]"}]}], "}"}], 
        "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.636205229783428*^9, 3.636205514371118*^9}, 
   3.6459566519479437`*^9, 3.6460472956971407`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "OptimiseTargetsChromosome", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DontSplitSize", "\[Rule]", "1000"}], ",", 
     RowBox[{"SplitGap", "\[Rule]", "2000000"}], ",", 
     RowBox[{"AnticipatedReadLength", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OptimiseTargetsChromosome", "[", 
    RowBox[{"bamfile_String", ",", 
     RowBox[{"targetsonchr0_", "?", "MatrixQ"}], ",", "inputregion_List", ",",
      "step_Integer", ",", 
     RowBox[{"optns", ":", 
      RowBox[{"OptionsPattern", "[", 
       RowBox[{"{", 
        RowBox[{"OptimiseTargetsChromosome", ",", "IndexBamUniform"}], "}"}], 
       "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "chr", ",", "indx", ",", "targetsonchr", ",", "targetsplit", ",", 
       "splitregions", ",", "splitregionboundaryps", ",", "splitregioncounts",
        ",", "fl", ",", "qntl", ",", "regs", ",", "ttt"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"chr", "=", 
       RowBox[{"inputregion", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"targetsonchr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "inputregion", "]"}], "\[GreaterEqual]", 
          "3"}], ",", 
         RowBox[{"RegionOnTargets", "[", 
          RowBox[{
           RowBox[{"inputregion", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "3"}], "]"}], "]"}], ",", "targetsonchr0"}], 
          "]"}], ",", "targetsonchr0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "inputregion", "]"}], "\[GreaterEqual]", 
           "3"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"inputregion", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", "3"}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "<", 
           RowBox[{"OptionValue", "[", "DontSplitSize", "]"}]}]}], "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"chr", ",", "targetsonchr"}], "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"indx", "=", 
       RowBox[{
        RowBox[{"IndexBamUniform", "[", 
         RowBox[{"bamfile", ",", "inputregion", ",", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "optns", "}"}], ",", 
            RowBox[{"Options", "[", "IndexBamUniform", "]"}]}], "]"}]}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", "targetsonchr", "]"}], "===", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"splitregions", "=", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "indx", "]"}], ",", 
              RowBox[{
               RowBox[{"Max", "[", "indx", "]"}], "+", 
               RowBox[{"Round", "[", 
                RowBox[{"1.2", 
                 RowBox[{"OptionValue", "[", "AnticipatedReadLength", "]"}]}],
                 "]"}]}]}], "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"targetsplit", "=", 
           RowBox[{"{", "splitregions", "}"}]}]}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"targetsplit", "=", 
           RowBox[{"SplitRegions", "[", 
            RowBox[{"targetsonchr", ",", 
             RowBox[{"OptionValue", "[", "SplitGap", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"splitregions", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", "#", "]"}], ",", 
               RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
            "targetsplit"}]}]}], ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"splitregionboundaryps", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"BoundaryPositions", "[", 
          RowBox[{"indx", ",", "#"}], "]"}], "&"}], "/@", "splitregions"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"splitregioncounts", "=", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"splitregionboundaryps", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "+", "1"}], ")"}], 
        ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ttt", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fl", "=", 
           RowBox[{"Floor", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"splitregioncounts", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "step"], 
             RowBox[{"OptionValue", "[", "JumpNumberReads", "]"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"fl", "===", "0"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"chr", ",", 
               RowBox[{"targetsplit", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"qntl", "=", 
               RowBox[{"Quantile", "[", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"indx", ",", 
                   RowBox[{"splitregionboundaryps", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                 FractionBox[
                  RowBox[{"Range", "[", "fl", "]"}], 
                  RowBox[{"fl", "+", "1"}]]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"regs", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"splitregions", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"qntl", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "}"}], 
                  "}"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], "+", "#"}], ")"}], "&"}], "/@", 
                  RowBox[{"Partition", "[", 
                   RowBox[{"qntl", ",", "2", ",", "1"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"qntl", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"splitregions", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"chr", ",", 
                  RowBox[{"RegionOnTargets", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"targetsplit", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@",
                "regs"}]}], ")"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "splitregions", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "@@", "ttt"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.645797394356132*^9, 3.6457974112794113`*^9}, {
   3.6457974891161737`*^9, 3.645797518834792*^9}, {3.645797582680135*^9, 
   3.645797583237586*^9}, {3.645797620317144*^9, 3.645797908201667*^9}, {
   3.645798240637205*^9, 3.645798262309092*^9}, {3.6457983576890297`*^9, 
   3.645798418941782*^9}, {3.645798831115035*^9, 3.645798947518347*^9}, {
   3.645799099536172*^9, 3.645799168459339*^9}, {3.645799750805025*^9, 
   3.645799892822764*^9}, {3.645799923926981*^9, 3.645799988353195*^9}, {
   3.645800021535399*^9, 3.6458000972735767`*^9}, {3.645800666402933*^9, 
   3.6458006735400763`*^9}, {3.6458013133541317`*^9, 3.645801410368907*^9}, {
   3.6458016428558197`*^9, 3.645801647981976*^9}, {3.645801701712232*^9, 
   3.6458017772452297`*^9}, {3.645801815682267*^9, 3.6458018287841043`*^9}, {
   3.6458018854070473`*^9, 3.645802110196767*^9}, {3.645802149124918*^9, 
   3.64580226265664*^9}, {3.645802437512323*^9, 3.645802466327525*^9}, {
   3.645802884580728*^9, 3.645802885695264*^9}, 3.645802987914544*^9, {
   3.645803034197617*^9, 3.6458030412617283`*^9}, {3.645803110950521*^9, 
   3.645803177164672*^9}, {3.645803271244829*^9, 3.6458032912622147`*^9}, {
   3.645803327337162*^9, 3.645803361248334*^9}, {3.645803459406828*^9, 
   3.645803485407548*^9}, {3.64586293225975*^9, 3.6458630899222317`*^9}, {
   3.645863156647843*^9, 3.645863188488577*^9}, 3.64586324342461*^9, {
   3.645863394872978*^9, 3.645863422250416*^9}, {3.645867352646345*^9, 
   3.645867352815484*^9}, {3.6458792301720333`*^9, 3.645879237755435*^9}, 
   3.645956656766712*^9, {3.6460461157071877`*^9, 3.6460461209925127`*^9}, {
   3.648807031544717*^9, 3.648807037278368*^9}, {3.6506548190600023`*^9, 
   3.6506548207741003`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Checks", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5982552133474607`*^9, 3.5982552340573063`*^9}, {
   3.60009495362247*^9, 3.6000949609105043`*^9}, {3.64346170526652*^9, 
   3.643461708226696*^9}, {3.645956499813772*^9, 3.645956501607552*^9}, 
   3.645956543061006*^9, {3.6461146054348307`*^9, 3.6461146138423843`*^9}, {
   3.646119607539446*^9, 3.6461196086185007`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CheckSamtoolsIsInstalled", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"OutputStream", "\[Rule]", "\"\<stdout\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CheckSamtoolsIsInstalled", "[", 
    RowBox[{
     RowBox[{"path_String:", "\"\<\>\""}], ",", 
     RowBox[{"OptionsPattern", "[", "CheckSamtoolsIsInstalled", "]"}]}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "check", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"check", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{"path", "<>", "\"\<samtools --version 2>&1\>\""}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "OutputStream", "]"}], "=!=", 
         "\"\<\>\""}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "OutputStream", "]"}], ",", 
          RowBox[{"StringJoinWith", "[", 
           RowBox[{"check", ",", "\"\<\\n\>\""}], "]"}], ",", "\"\<\\n\>\""}],
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"check", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<not found\>\"", ",", "\"\<Permission denied\>\"", ",", 
           "\"\<not recognized\>\""}], "}"}], ",", 
         RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.646114213184371*^9, 3.646114237940174*^9}, {
   3.64611480500709*^9, 3.6461148722700453`*^9}, {3.646114912246641*^9, 
   3.6461149447347717`*^9}, {3.6461150386636887`*^9, 3.646115158881999*^9}, {
   3.646115202025865*^9, 3.646115211041765*^9}, {3.646115248464263*^9, 
   3.646115352451737*^9}, {3.64611543974485*^9, 3.646115468880932*^9}, {
   3.6461157488256397`*^9, 3.646115775456223*^9}, {3.6461159510454187`*^9, 
   3.6461160075237913`*^9}, {3.6461160393931217`*^9, 3.646116059164495*^9}, {
   3.64611618773123*^9, 3.646116347483797*^9}, {3.646116566979912*^9, 
   3.646116568413288*^9}, {3.646117820666999*^9, 3.64611786935821*^9}, {
   3.646117902102026*^9, 3.646117904971651*^9}, {3.646118005633712*^9, 
   3.646118013275215*^9}, {3.646118600764646*^9, 3.646118622715947*^9}, 
   3.646119355673785*^9, 3.64611976002424*^9, {3.650733578677184*^9, 
   3.6507335797188168`*^9}, {3.650733613243574*^9, 3.6507336144487267`*^9}, 
   3.67549704832255*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CheckBamIsIndexed", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"OutputStream", "\[Rule]", "\"\<stdout\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CheckBamIsIndexed", "[", 
    RowBox[{"bamfile_String", ",", 
     RowBox[{"OptionsPattern", "[", "CheckBamIsIndexed", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"readhead", ",", "headchr", ",", "tryregion", ",", "check"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"readhead", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{
        "SamtoolsPath", "<>", "\"\<samtools view -H \>\"", "<>", "bamfile", 
         "<>", "\"\< | head\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"headchr", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"StringCases", "[", 
         RowBox[{"readhead", ",", 
          RowBox[{"(*", 
           RowBox[{"\"\<SN:\>\"", "~~", 
            RowBox[{"(", 
             RowBox[{"yyy", ":", 
              RowBox[{"WordCharacter", ".."}]}], ")"}]}], "*)"}], 
          RowBox[{
           RowBox[{"\"\<SN:\>\"", "~~", 
            RowBox[{"(", "yyy__", ")"}], "~~", "\"\<\\tLN\>\""}], 
           "\[RuleDelayed]", "yyy"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tryregion", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "headchr", "]"}], "===", "0"}], ",", 
         "\"\<chr1\>\"", ",", 
         RowBox[{"MakeCoordinateString", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"headchr", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", "2"}], "}"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"check", "=", 
       RowBox[{"RunExternal", "[", 
        RowBox[{"StringJoinWith", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SamtoolsPath", "<>", "\"\<samtools view\>\""}], ",", 
           "bamfile", ",", "tryregion", ",", "\"\<2>&1 | head -n 3\>\""}], 
          "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "OutputStream", "]"}], "=!=", 
         "\"\<\>\""}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "OutputStream", "]"}], ",", 
          RowBox[{"StringJoinWith", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bamfile", ",", "check"}], "}"}], ",", "\"\<\\n\>\""}], 
           "]"}], ",", "\"\<\\n\>\""}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"And", "@@", 
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"check", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<failed\>\"", ",", "\"\<indexed\>\""}], "}"}], ",", 
         RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.646117949184722*^9, 3.646117995153846*^9}, {
   3.6461180292934723`*^9, 3.646118031097101*^9}, {3.6461182946031313`*^9, 
   3.646118326156102*^9}, {3.64611836061973*^9, 3.646118380598328*^9}, {
   3.64611842120853*^9, 3.646118578572444*^9}, {3.646118635284137*^9, 
   3.646118751926938*^9}, {3.646118988152156*^9, 3.646119069438435*^9}, 
   3.646119178064904*^9, {3.646119246108109*^9, 3.646119246345796*^9}, 
   3.646119358449501*^9, {3.646119436529813*^9, 3.646119443515486*^9}, {
   3.646119477032713*^9, 3.646119478764283*^9}, {3.648394231990448*^9, 
   3.6483942358487787`*^9}, {3.648394488546336*^9, 3.6483945350041943`*^9}, {
   3.648394620442264*^9, 3.6483946209569674`*^9}, 3.648814590748448*^9, 
   3.648814659858932*^9, {3.64881910002971*^9, 3.6488191485363894`*^9}, {
   3.648819249923046*^9, 3.648819252306756*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CheckBamFiles", "[", "bamfiles_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"flbam", ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{"bamfiles", ",", "_List", ",", 
       RowBox[{"flbam", "=", "bamfiles"}], ",", "_String", ",", 
       RowBox[{"flbam", "=", 
        RowBox[{"ReadList", "[", 
         RowBox[{
          RowBox[{"\"\<!ls \>\"", "<>", "bamfiles"}], ",", "String"}], 
         "]"}]}], ",", "_", ",", 
       RowBox[{
        RowBox[{
        "PrintError", "[", "\"\<The bam files are ill-defined\>\"", "]"}], 
        ";", 
        RowBox[{"Return", "[", "False", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "flbam", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Found \>\"", ",", "l", ",", "\"\< bam files.\>\""}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "===", "0"}], ",", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", ">", "5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Checking the indexes of 5 random bam files.\>\"", 
          "]"}], ";", 
         RowBox[{"Return", "[", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{"CheckBamIsIndexed", "/@", 
             RowBox[{"RandomSample", "[", 
              RowBox[{"flbam", ",", "5"}], "]"}]}], ")"}]}], "]"}]}], ")"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Checking the indexes of bam files.\>\"", "]"}], 
         ";", 
         RowBox[{"Return", "[", 
          RowBox[{"And", "@@", 
           RowBox[{"(", 
            RowBox[{"CheckBamIsIndexed", "/@", "flbam"}], ")"}]}], "]"}]}], 
        ")"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6461213749607363`*^9, 3.6461214085782337`*^9}, {
  3.646121479520522*^9, 3.646121523366383*^9}, {3.646121561046711*^9, 
  3.646121639939781*^9}, {3.646121691091395*^9, 3.646121725412244*^9}, {
  3.6461217555405493`*^9, 3.646121826428849*^9}, {3.646121935211437*^9, 
  3.646121993171829*^9}, {3.646122035692092*^9, 3.646122090556068*^9}, {
  3.6461221729105186`*^9, 3.646122193305005*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Path Settings", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5982552133474607`*^9, 3.5982552340573063`*^9}, {
   3.60009495362247*^9, 3.6000949609105043`*^9}, {3.64346170526652*^9, 
   3.643461708226696*^9}, {3.645956499813772*^9, 3.645956501607552*^9}, 
   3.645956543061006*^9, {3.646049886883232*^9, 3.646049891463215*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SamtoolsPath", "=", "\"\<\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.646049898506301*^9, 3.646049899333377*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TidyVarTmpDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TemporaryDirectory", ",", "\"\<TidyVar\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"DirectoryQ", "[", "TidyVarTmpDirectory", "]"}], "]"}], ",", 
    RowBox[{"CreateDirectory", "[", "TidyVarTmpDirectory", "]"}]}], "]"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.646049908194326*^9, 3.646049960070332*^9}, {
  3.6460500260051126`*^9, 3.6460500433219757`*^9}, {3.646051234788938*^9, 
  3.6460512351354218`*^9}, {3.668506923855262*^9, 3.6685069294319696`*^9}, {
  3.6685078032920628`*^9, 3.668507823561222*^9}, {3.6685078644455605`*^9, 
  3.6685078672937236`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Input",
 Evaluatable->True,
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"End", "::", "noctx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No previous context defined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/End/noctx\\\", ButtonNote -> \
\\\"End::noctx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.673440377430326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Input",
 PageWidth->Infinity,
 Evaluatable->True,
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"EndPackage", "::", "noctx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No previous context defined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/EndPackage/noctx\\\", ButtonNote -> \
\\\"EndPackage::noctx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672398327752311*^9, 3.673440377461526*^9}],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Output",
 CellChangeTimes->{3.672398327752311*^9, 3.673440377461526*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1085, 592},
WindowMargins->{{124, Automatic}, {-49, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594.9599999999999, 842.04}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 257, 7, 45, "Input",
 Evaluatable->True,
 InitializationCell->True],
Cell[817, 29, 387, 7, 45, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1229, 40, 72, 2, 130, "Section",
 Evaluatable->False,
 InitializationCell->True],
Cell[1304, 44, 1252, 31, 249, "Input",
 Evaluatable->True,
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2593, 80, 89, 2, 130, "Section",
 Evaluatable->False],
Cell[2685, 84, 236, 6, 45, "Input",
 Evaluatable->True,
 InitializationCell->True],
Cell[2924, 92, 297, 8, 45, "Input",
 Evaluatable->True,
 InitializationCell->True],
Cell[3224, 102, 151, 2, 45, "Input",
 InitializationCell->True],
Cell[3378, 106, 79, 1, 45, "Input",
 InitializationCell->True],
Cell[3460, 109, 77, 1, 45, "Input",
 InitializationCell->True],
Cell[3540, 112, 77, 1, 45, "Input",
 InitializationCell->True],
Cell[3620, 115, 73, 1, 45, "Input",
 InitializationCell->True],
Cell[3696, 118, 110, 2, 45, "Input",
 InitializationCell->True],
Cell[3809, 122, 71, 1, 45, "Input",
 InitializationCell->True],
Cell[3883, 125, 77, 1, 45, "Input",
 InitializationCell->True],
Cell[3963, 128, 70, 1, 45, "Input",
 InitializationCell->True],
Cell[4036, 131, 66, 1, 45, "Input",
 InitializationCell->True],
Cell[4105, 134, 131, 2, 45, "Input",
 InitializationCell->True],
Cell[4239, 138, 68, 1, 45, "Input",
 InitializationCell->True],
Cell[4310, 141, 132, 2, 45, "Input",
 InitializationCell->True],
Cell[4445, 145, 134, 2, 45, "Input",
 InitializationCell->True],
Cell[4582, 149, 144, 2, 45, "Input",
 InitializationCell->True],
Cell[4729, 153, 142, 2, 45, "Input",
 InitializationCell->True],
Cell[4874, 157, 136, 2, 45, "Input",
 InitializationCell->True],
Cell[5013, 161, 141, 2, 45, "Input",
 InitializationCell->True],
Cell[5157, 165, 135, 2, 45, "Input",
 InitializationCell->True],
Cell[5295, 169, 132, 2, 45, "Input",
 InitializationCell->True],
Cell[5430, 173, 136, 2, 45, "Input",
 InitializationCell->True],
Cell[5569, 177, 184, 3, 45, "Input",
 InitializationCell->True],
Cell[5756, 182, 297, 4, 45, "Input",
 InitializationCell->True],
Cell[6056, 188, 290, 4, 45, "Input",
 InitializationCell->True],
Cell[6349, 194, 183, 3, 45, "Input",
 InitializationCell->True],
Cell[6535, 199, 238, 4, 45, "Input",
 InitializationCell->True],
Cell[6776, 205, 294, 4, 45, "Input",
 InitializationCell->True],
Cell[7073, 211, 294, 4, 45, "Input",
 InitializationCell->True],
Cell[7370, 217, 243, 4, 45, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[7650, 226, 118, 2, 83, "Section",
 InitializationCell->True],
Cell[7771, 230, 119, 3, 45, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7915, 237, 180, 3, 72, "Subsection",
 InitializationCell->True],
Cell[8098, 242, 3408, 78, 488, "Input",
 InitializationCell->True],
Cell[11509, 322, 1759, 44, 347, "Input",
 InitializationCell->True],
Cell[13271, 368, 2921, 59, 597, "Input",
 InitializationCell->True],
Cell[16195, 429, 1494, 36, 307, "Input",
 InitializationCell->True],
Cell[17692, 467, 963, 23, 249, "Input",
 InitializationCell->True],
Cell[18658, 492, 925, 25, 133, "Input",
 InitializationCell->True],
Cell[19586, 519, 1268, 33, 220, "Input",
 InitializationCell->True],
Cell[20857, 554, 1596, 42, 249, "Input",
 InitializationCell->True],
Cell[22456, 598, 3642, 79, 771, "Input",
 InitializationCell->True],
Cell[26101, 679, 9358, 243, 1322, "Input",
 InitializationCell->True],
Cell[35462, 924, 1738, 48, 249, "Input",
 InitializationCell->True],
Cell[37203, 974, 1832, 49, 230, "Input",
 InitializationCell->True],
Cell[39038, 1025, 10120, 227, 1618, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[49195, 1257, 184, 3, 58, "Subsection",
 InitializationCell->True],
Cell[49382, 1262, 891, 22, 133, "Input",
 InitializationCell->True],
Cell[50276, 1286, 3621, 94, 558, "Input",
 InitializationCell->True],
Cell[53900, 1382, 6522, 149, 917, "Input",
 InitializationCell->True],
Cell[60425, 1533, 9464, 218, 1554, "Input",
 InitializationCell->True],
Cell[69892, 1753, 8559, 207, 1299, "Input",
 InitializationCell->True],
Cell[78454, 1962, 12551, 276, 2221, "Input",
 InitializationCell->True],
Cell[91008, 2240, 2434, 56, 394, "Input",
 InitializationCell->True],
Cell[93445, 2298, 4755, 113, 935, "Input",
 InitializationCell->True],
Cell[98203, 2413, 7273, 168, 945, "Input",
 InitializationCell->True],
Cell[105479, 2583, 4917, 117, 568, "Input",
 InitializationCell->True],
Cell[110399, 2702, 1476, 37, 191, "Input",
 InitializationCell->True],
Cell[111878, 2741, 1939, 47, 336, "Input",
 InitializationCell->True],
Cell[113820, 2790, 12061, 274, 2047, "Input",
 InitializationCell->True],
Cell[125884, 3066, 8420, 199, 974, "Input",
 InitializationCell->True],
Cell[134307, 3267, 3148, 77, 510, "Input",
 InitializationCell->True],
Cell[137458, 3346, 2588, 57, 394, "Input",
 InitializationCell->True],
Cell[140049, 3405, 4050, 100, 365, "Input",
 InitializationCell->True],
Cell[144102, 3507, 867, 23, 75, "Input",
 InitializationCell->True],
Cell[144972, 3532, 20955, 448, 3505, "Input",
 InitializationCell->True],
Cell[165930, 3982, 2007, 57, 278, "Input",
 InitializationCell->True],
Cell[167940, 4041, 7464, 174, 1177, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[175441, 4220, 142, 2, 58, "Subsection",
 InitializationCell->True],
Cell[175586, 4224, 651, 16, 133, "Input",
 InitializationCell->True],
Cell[176240, 4242, 9395, 186, 974, "Input",
 InitializationCell->True],
Cell[185638, 4430, 8323, 186, 1323, "Input",
 InitializationCell->True],
Cell[193964, 4618, 4184, 104, 626, "Input",
 InitializationCell->True],
Cell[198151, 4724, 2022, 55, 336, "Input",
 InitializationCell->True],
Cell[200176, 4781, 39372, 822, 5150, "Input",
 InitializationCell->True],
Cell[239551, 5605, 123, 2, 45, "Input",
 InitializationCell->True],
Cell[239677, 5609, 4673, 113, 713, "Input",
 InitializationCell->True],
Cell[244353, 5724, 696, 20, 75, "Input",
 InitializationCell->True],
Cell[245052, 5746, 900, 22, 133, "Input",
 InitializationCell->True],
Cell[245955, 5770, 3715, 91, 684, "Input",
 InitializationCell->True],
Cell[249673, 5863, 8495, 201, 1061, "Input",
 InitializationCell->True],
Cell[258171, 6066, 1061, 29, 133, "Input",
 InitializationCell->True],
Cell[259235, 6097, 5010, 120, 626, "Input",
 InitializationCell->True],
Cell[264248, 6219, 6749, 167, 1061, "Input",
 InitializationCell->True],
Cell[271000, 6388, 23375, 486, 3062, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[294412, 6879, 179, 3, 58, "Subsection",
 InitializationCell->True],
Cell[294594, 6884, 33701, 709, 6086, "Input",
 InitializationCell->True],
Cell[328298, 7595, 9968, 203, 2279, "Input",
 InitializationCell->True],
Cell[338269, 7800, 2028, 57, 394, "Input",
 InitializationCell->True],
Cell[340300, 7859, 14530, 299, 2424, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[354867, 8163, 272, 4, 58, "Subsection",
 InitializationCell->True],
Cell[355142, 8169, 33266, 658, 5817, "Input",
 InitializationCell->True],
Cell[388411, 8829, 3842, 74, 1061, "Input",
 InitializationCell->True],
Cell[392256, 8905, 3110, 81, 510, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[395403, 8991, 360, 5, 58, "Subsection",
 InitializationCell->True],
Cell[395766, 8998, 4559, 113, 888, "Input",
 InitializationCell->True],
Cell[400328, 9113, 1703, 41, 365, "Input",
 InitializationCell->True],
Cell[402034, 9156, 2911, 64, 597, "Input",
 InitializationCell->True],
Cell[404948, 9222, 3050, 66, 568, "Input",
 InitializationCell->True],
Cell[408001, 9290, 18148, 390, 2290, "Input",
 InitializationCell->True],
Cell[426152, 9682, 3515, 86, 684, "Input",
 InitializationCell->True],
Cell[429670, 9770, 1786, 50, 220, "Input",
 InitializationCell->True],
Cell[431459, 9822, 10127, 237, 1324, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[441623, 10064, 399, 6, 58, "Subsection",
 InitializationCell->True],
Cell[442025, 10072, 2577, 56, 307, "Input",
 InitializationCell->True],
Cell[444605, 10130, 3910, 90, 510, "Input",
 InitializationCell->True],
Cell[448518, 10222, 2554, 63, 394, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[451109, 10290, 350, 5, 58, "Subsection",
 InitializationCell->True],
Cell[451462, 10297, 178, 4, 45, "Input",
 InitializationCell->True],
Cell[451643, 10303, 815, 19, 104, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[452483, 10326, 116, 4, 45, "Input",
 Evaluatable->True,
 InitializationCell->True],
Cell[452602, 10332, 399, 9, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453038, 10346, 127, 4, 45, "Input",
 Evaluatable->True,
 InitializationCell->True],
Cell[453168, 10352, 442, 9, 35, "Message"],
Cell[453613, 10363, 123, 2, 44, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
